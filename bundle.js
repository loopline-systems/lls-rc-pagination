!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=10)}([function(e,t,n){e.exports=n(20)()},function(e,t,n){"use strict";e.exports=n(11)},function(e,t,n){"use strict";var r=function(){};e.exports=r},function(e,t,n){"use strict";e.exports=function(e,t,n,r,o,i,a,l){if(!e){var u;if(void 0===t)u=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,r,o,i,a,l],s=0;(u=new Error(t.replace(/%s/g,function(){return c[s++]}))).name="Invariant Violation"}throw u.framesToPop=1,u}}},function(e,t,n){"use strict";e.exports=function(){}},function(e,t,n){var r=n(22);e.exports=h,e.exports.parse=i,e.exports.compile=function(e,t){return u(i(e,t))},e.exports.tokensToFunction=u,e.exports.tokensToRegExp=d;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function i(e,t){for(var n,r=[],i=0,a=0,l="",u=t&&t.delimiter||"/";null!=(n=o.exec(e));){var f=n[0],p=n[1],d=n.index;if(l+=e.slice(a,d),a=d+f.length,p)l+=p[1];else{var h=e[a],m=n[2],y=n[3],v=n[4],g=n[5],b=n[6],w=n[7];l&&(r.push(l),l="");var x=null!=m&&null!=h&&h!==m,k="+"===b||"*"===b,T="?"===b||"*"===b,E=n[2]||u,C=v||g;r.push({name:y||i++,prefix:m||"",delimiter:E,optional:T,repeat:k,partial:x,asterisk:!!w,pattern:C?s(C):w?".*":"[^"+c(E)+"]+?"})}}return a<e.length&&(l+=e.substr(a)),l&&r.push(l),r}function a(e){return encodeURI(e).replace(/[\/?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function l(e){return encodeURI(e).replace(/[?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function u(e){for(var t=new Array(e.length),n=0;n<e.length;n++)"object"==typeof e[n]&&(t[n]=new RegExp("^(?:"+e[n].pattern+")$"));return function(n,o){for(var i="",u=n||{},c=(o||{}).pretty?a:encodeURIComponent,s=0;s<e.length;s++){var f=e[s];if("string"!=typeof f){var p,d=u[f.name];if(null==d){if(f.optional){f.partial&&(i+=f.prefix);continue}throw new TypeError('Expected "'+f.name+'" to be defined')}if(r(d)){if(!f.repeat)throw new TypeError('Expected "'+f.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(f.optional)continue;throw new TypeError('Expected "'+f.name+'" to not be empty')}for(var h=0;h<d.length;h++){if(p=c(d[h]),!t[s].test(p))throw new TypeError('Expected all "'+f.name+'" to match "'+f.pattern+'", but received `'+JSON.stringify(p)+"`");i+=(0===h?f.prefix:f.delimiter)+p}}else{if(p=f.asterisk?l(d):c(d),!t[s].test(p))throw new TypeError('Expected "'+f.name+'" to match "'+f.pattern+'", but received "'+p+'"');i+=f.prefix+p}}else i+=f}return i}}function c(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function s(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function f(e,t){return e.keys=t,e}function p(e){return e.sensitive?"":"i"}function d(e,t,n){r(t)||(n=t||n,t=[]);for(var o=(n=n||{}).strict,i=!1!==n.end,a="",l=0;l<e.length;l++){var u=e[l];if("string"==typeof u)a+=c(u);else{var s=c(u.prefix),d="(?:"+u.pattern+")";t.push(u),u.repeat&&(d+="(?:"+s+d+")*"),a+=d=u.optional?u.partial?s+"("+d+")?":"(?:"+s+"("+d+"))?":s+"("+d+")"}}var h=c(n.delimiter||"/"),m=a.slice(-h.length)===h;return o||(a=(m?a.slice(0,-h.length):a)+"(?:"+h+"(?=$))?"),a+=i?"$":o&&m?"":"(?="+h+"|$)",f(new RegExp("^"+a,p(n)),t)}function h(e,t,n){return r(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return f(e,t)}(e,t):r(e)?function(e,t,n){for(var r=[],o=0;o<e.length;o++)r.push(h(e[o],t,n).source);return f(new RegExp("(?:"+r.join("|")+")",p(n)),t)}(e,t,n):function(e,t,n){return d(i(e,n),t,n)}(e,t,n)}},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,a,l=function(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),u=1;u<arguments.length;u++){for(var c in n=Object(arguments[u]))o.call(n,c)&&(l[c]=n[c]);if(r){a=r(n);for(var s=0;s<a.length;s++)i.call(n,a[s])&&(l[a[s]]=n[a[s]])}}return l}},function(e,t){e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=function(e){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(e))))+" */"}(r),i=r.sources.map(function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"});return[n].concat(i).concat([o]).join("\n")}return[n].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+n+"}":n}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},o=0;o<this.length;o++){var i=this[o][0];"number"==typeof i&&(r[i]=!0)}for(o=0;o<e.length;o++){var a=e[o];"number"==typeof a[0]&&r[a[0]]||(n&&!a[2]?a[2]=n:n&&(a[2]="("+a[2]+") and ("+n+")"),t.push(a))}},t}},function(e,t,n){var r={},o=function(e){var t;return function(){return void 0===t&&(t=e.apply(this,arguments)),t}}(function(){return window&&document&&document.all&&!window.atob}),i=function(e){var t={};return function(e,n){if("function"==typeof e)return e();if(void 0===t[e]){var r=function(e,t){return t?t.querySelector(e):document.querySelector(e)}.call(this,e,n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}t[e]=r}return t[e]}}(),a=null,l=0,u=[],c=n(25);function s(e,t){for(var n=0;n<e.length;n++){var o=e[n],i=r[o.id];if(i){i.refs++;for(var a=0;a<i.parts.length;a++)i.parts[a](o.parts[a]);for(;a<o.parts.length;a++)i.parts.push(y(o.parts[a],t))}else{var l=[];for(a=0;a<o.parts.length;a++)l.push(y(o.parts[a],t));r[o.id]={id:o.id,refs:1,parts:l}}}}function f(e,t){for(var n=[],r={},o=0;o<e.length;o++){var i=e[o],a=t.base?i[0]+t.base:i[0],l={css:i[1],media:i[2],sourceMap:i[3]};r[a]?r[a].parts.push(l):n.push(r[a]={id:a,parts:[l]})}return n}function p(e,t){var n=i(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=u[u.length-1];if("top"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),u.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=i(e.insertAt.before,n);n.insertBefore(t,o)}}function d(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=u.indexOf(e);t>=0&&u.splice(t,1)}function h(e){var t=document.createElement("style");if(void 0===e.attrs.type&&(e.attrs.type="text/css"),void 0===e.attrs.nonce){var r=function(){0;return n.nc}();r&&(e.attrs.nonce=r)}return m(t,e.attrs),p(e,t),t}function m(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function y(e,t){var n,r,o,i;if(t.transform&&e.css){if(!(i="function"==typeof t.transform?t.transform(e.css):t.transform.default(e.css)))return function(){};e.css=i}if(t.singleton){var u=l++;n=a||(a=h(t)),r=g.bind(null,n,u,!1),o=g.bind(null,n,u,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(e){var t=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",m(t,e.attrs),p(e,t),t}(t),r=function(e,t,n){var r=n.css,o=n.sourceMap,i=void 0===t.convertToAbsoluteUrls&&o;(t.convertToAbsoluteUrls||i)&&(r=c(r));o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var a=new Blob([r],{type:"text/css"}),l=e.href;e.href=URL.createObjectURL(a),l&&URL.revokeObjectURL(l)}.bind(null,n,t),o=function(){d(n),n.href&&URL.revokeObjectURL(n.href)}):(n=h(t),r=function(e,t){var n=t.css,r=t.media;r&&e.setAttribute("media",r);if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),o=function(){d(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=o()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=f(e,t);return s(n,t),function(e){for(var o=[],i=0;i<n.length;i++){var a=n[i];(l=r[a.id]).refs--,o.push(l)}e&&s(f(e,t),t);for(i=0;i<o.length;i++){var l;if(0===(l=o[i]).refs){for(var u=0;u<l.parts.length;u++)l.parts[u]();delete r[l.id]}}}};var v=function(){var e=[];return function(t,n){return e[t]=n,e.filter(Boolean).join("\n")}}();function g(e,t,n,r){var o=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=v(t,o);else{var i=document.createTextNode(o),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}},function(e,t,n){"use strict";var r={childContextTypes:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},o={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},i=Object.defineProperty,a=Object.getOwnPropertyNames,l=Object.getOwnPropertySymbols,u=Object.getOwnPropertyDescriptor,c=Object.getPrototypeOf,s=c&&c(Object);e.exports=function e(t,n,f){if("string"!=typeof n){if(s){var p=c(n);p&&p!==s&&e(t,p,f)}var d=a(n);l&&(d=d.concat(l(n)));for(var h=0;h<d.length;++h){var m=d[h];if(!(r[m]||o[m]||f&&f[m])){var y=u(n,m);try{i(t,m,y)}catch(e){}}}return t}return t}},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var i=o(n(1)),a=o(n(12)),l=o(n(16)),u=n(28);n(23),n(26);var c=function(e){function t(t){var n=e.call(this,t)||this;return n.state={curPage:0},n.totalItems=100,n.pageSize=20,n.changePage=function(e){n.setState({curPage:e-1})},n.renderPage=function(e){var t=e.location,r=e.history;return i.default.createElement(i.default.Fragment,null,i.default.createElement("div",null,i.default.createElement("div",{className:"pages-container"},Array.from({length:n.pageCount},function(e,t){return i.default.createElement("div",{key:t,className:"page "+(n.state.curPage===t?"cur":"")},"Page #",t+1)})),i.default.createElement(l.default,{history:r,location:t,totalItems:n.totalItems,pageSize:n.pageSize,onChange:n.changePage})),i.default.createElement("h2",null,"Pagination with more then 10 pages:"),i.default.createElement("div",null,i.default.createElement(l.default,{marginTop:40,history:r,location:t,totalItems:300,pageSize:20,onChange:function(e){}})),i.default.createElement("h2",null,"Pagination with more then 10 pages and extended center button group:"),i.default.createElement("div",null,i.default.createElement(l.default,{marginTop:40,history:r,location:t,btnGroupLength:9,totalItems:400,pageSize:20,onChange:function(e){}})))},n.pageCount=n.totalItems/n.pageSize,n}return r(t,e),t.prototype.render=function(){return i.default.createElement(u.BrowserRouter,null,i.default.createElement(u.Route,{exact:!0,path:"/",component:this.renderPage}))},t}(i.default.Component);a.default.render(i.default.createElement(c,null),document.getElementById("root"))},function(e,t,n){"use strict";
/** @license React v16.6.0
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(6),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,a=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,p=o?Symbol.for("react.concurrent_mode"):60111,d=o?Symbol.for("react.forward_ref"):60112,h=o?Symbol.for("react.suspense"):60113,m=o?Symbol.for("react.memo"):60115,y=o?Symbol.for("react.lazy"):60116,v="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,i,a,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,i,a,l],c=0;(e=Error(t.replace(/%s/g,function(){return u[c++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var b={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},w={};function x(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||b}function k(){}function T(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||b}x.prototype.isReactComponent={},x.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&g("85"),this.updater.enqueueSetState(this,e,t,"setState")},x.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=x.prototype;var E=T.prototype=new k;E.constructor=T,r(E,x.prototype),E.isPureReactComponent=!0;var C={current:null,currentDispatcher:null},_=Object.prototype.hasOwnProperty,S={key:!0,ref:!0,__self:!0,__source:!0};function P(e,t,n){var r=void 0,o={},a=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(a=""+t.key),t)_.call(t,r)&&!S.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:i,type:e,key:a,ref:l,props:o,_owner:C.current}}function O(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var R=/\/+/g,j=[];function N(e,t,n,r){if(j.length){var o=j.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function A(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>j.length&&j.push(e)}function U(e,t,n){return null==e?0:function e(t,n,r,o){var l=typeof t;"undefined"!==l&&"boolean"!==l||(t=null);var u=!1;if(null===t)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(t.$$typeof){case i:case a:u=!0}}if(u)return r(o,t,""===n?"."+M(t,0):n),1;if(u=0,n=""===n?".":n+":",Array.isArray(t))for(var c=0;c<t.length;c++){var s=n+M(l=t[c],c);u+=e(l,s,r,o)}else if(s=null===t||"object"!=typeof t?null:"function"==typeof(s=v&&t[v]||t["@@iterator"])?s:null,"function"==typeof s)for(t=s.call(t),c=0;!(l=t.next()).done;)u+=e(l=l.value,s=n+M(l,c++),r,o);else"object"===l&&g("31","[object Object]"==(r=""+t)?"object with keys {"+Object.keys(t).join(", ")+"}":r,"");return u}(e,"",t,n)}function M(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function I(e,t){e.func.call(e.context,t,e.count++)}function L(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?D(e,r,n,function(e){return e}):null!=e&&(O(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(R,"$&/")+"/")+n)),r.push(e))}function D(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(R,"$&/")+"/"),U(e,L,t=N(t,i,r,o)),A(t)}var F={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return D(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;U(e,I,t=N(null,null,t,n)),A(t)},count:function(e){return U(e,function(){return null},null)},toArray:function(e){var t=[];return D(e,t,null,function(e){return e}),t},only:function(e){return O(e)||g("143"),e}},createRef:function(){return{current:null}},Component:x,PureComponent:T,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:d,render:e}},lazy:function(e){return{$$typeof:y,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:m,type:e,compare:void 0===t?null:t}},Fragment:l,StrictMode:u,unstable_ConcurrentMode:p,Suspense:h,unstable_Profiler:c,createElement:P,cloneElement:function(e,t,n){(null===e||void 0===e)&&g("267",e);var o=void 0,a=r({},e.props),l=e.key,u=e.ref,c=e._owner;if(null!=t){void 0!==t.ref&&(u=t.ref,c=C.current),void 0!==t.key&&(l=""+t.key);var s=void 0;for(o in e.type&&e.type.defaultProps&&(s=e.type.defaultProps),t)_.call(t,o)&&!S.hasOwnProperty(o)&&(a[o]=void 0===t[o]&&void 0!==s?s[o]:t[o])}if(1===(o=arguments.length-2))a.children=n;else if(1<o){s=Array(o);for(var f=0;f<o;f++)s[f]=arguments[f+2];a.children=s}return{$$typeof:i,type:e.type,key:l,ref:u,props:a,_owner:c}},createFactory:function(e){var t=P.bind(null,e);return t.type=e,t},isValidElement:O,version:"16.6.0",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:C,assign:r}},z={default:F},B=z&&F||z;e.exports=B.default||B},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(13)},function(e,t,n){"use strict";
/** @license React v16.6.0
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(1),o=n(6),i=n(14);function a(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,i,a,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,i,a,l],c=0;(e=Error(t.replace(/%s/g,function(){return u[c++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}r||a("227");var l=!1,u=null,c=!1,s=null,f={onError:function(e){l=!0,u=e}};function p(e,t,n,r,o,i,a,c,s){l=!1,u=null,function(e,t,n,r,o,i,a,l,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}.apply(f,arguments)}var d=null,h={};function m(){if(d)for(var e in h){var t=h[e],n=d.indexOf(e);if(-1<n||a("96",e),!v[n])for(var r in t.extractEvents||a("97",e),v[n]=t,n=t.eventTypes){var o=void 0,i=n[r],l=t,u=r;g.hasOwnProperty(u)&&a("99",u),g[u]=i;var c=i.phasedRegistrationNames;if(c){for(o in c)c.hasOwnProperty(o)&&y(c[o],l,u);o=!0}else i.registrationName?(y(i.registrationName,l,u),o=!0):o=!1;o||a("98",r,e)}}}function y(e,t,n){b[e]&&a("100",e),b[e]=t,w[e]=t.eventTypes[n].dependencies}var v=[],g={},b={},w={},x=null,k=null,T=null;function E(e,t,n,r){t=e.type||"unknown-event",e.currentTarget=T(r),function(e,t,n,r,o,i,f,d,h){if(p.apply(this,arguments),l){if(l){var m=u;l=!1,u=null}else a("198"),m=void 0;c||(c=!0,s=m)}}(t,n,void 0,e),e.currentTarget=null}function C(e,t){return null==t&&a("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function _(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var S=null;function P(e,t){if(e){var n=e._dispatchListeners,r=e._dispatchInstances;if(Array.isArray(n))for(var o=0;o<n.length&&!e.isPropagationStopped();o++)E(e,t,n[o],r[o]);else n&&E(e,t,n,r);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function O(e){return P(e,!0)}function R(e){return P(e,!1)}var j={injectEventPluginOrder:function(e){d&&a("101"),d=Array.prototype.slice.call(e),m()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];h.hasOwnProperty(t)&&h[t]===r||(h[t]&&a("102",t),h[t]=r,n=!0)}n&&m()}};function N(e,t){var n=e.stateNode;if(!n)return null;var r=x(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&a("231",t,typeof n),n)}function A(e,t){if(null!==e&&(S=C(S,e)),e=S,S=null,e&&(_(e,t?O:R),S&&a("95"),c))throw t=s,c=!1,s=null,t}var U=Math.random().toString(36).slice(2),M="__reactInternalInstance$"+U,I="__reactEventHandlers$"+U;function L(e){if(e[M])return e[M];for(;!e[M];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[M]).tag||6===e.tag?e:null}function D(e){return!(e=e[M])||5!==e.tag&&6!==e.tag?null:e}function F(e){if(5===e.tag||6===e.tag)return e.stateNode;a("33")}function z(e){return e[I]||null}function B(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function W(e,t,n){(t=N(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=C(n._dispatchListeners,t),n._dispatchInstances=C(n._dispatchInstances,e))}function H(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=B(t);for(t=n.length;0<t--;)W(n[t],"captured",e);for(t=0;t<n.length;t++)W(n[t],"bubbled",e)}}function V(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=N(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=C(n._dispatchListeners,t),n._dispatchInstances=C(n._dispatchInstances,e))}function $(e){e&&e.dispatchConfig.registrationName&&V(e._targetInst,null,e)}function q(e){_(e,H)}var Y=!("undefined"==typeof window||!window.document||!window.document.createElement);function K(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Q={animationend:K("Animation","AnimationEnd"),animationiteration:K("Animation","AnimationIteration"),animationstart:K("Animation","AnimationStart"),transitionend:K("Transition","TransitionEnd")},G={},X={};function J(e){if(G[e])return G[e];if(!Q[e])return e;var t,n=Q[e];for(t in n)if(n.hasOwnProperty(t)&&t in X)return G[e]=n[t];return e}Y&&(X=document.createElement("div").style,"AnimationEvent"in window||(delete Q.animationend.animation,delete Q.animationiteration.animation,delete Q.animationstart.animation),"TransitionEvent"in window||delete Q.transitionend.transition);var Z=J("animationend"),ee=J("animationiteration"),te=J("animationstart"),ne=J("transitionend"),re="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),oe=null,ie=null,ae=null;function le(){if(ae)return ae;var e,t,n=ie,r=n.length,o="value"in oe?oe.value:oe.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);return ae=o.slice(e,1<t?1-t:void 0)}function ue(){return!0}function ce(){return!1}function se(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?ue:ce,this.isPropagationStopped=ce,this}function fe(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function pe(e){e instanceof this||a("279"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function de(e){e.eventPool=[],e.getPooled=fe,e.release=pe}o(se.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ue)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ue)},persist:function(){this.isPersistent=ue},isPersistent:ce,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=ce,this._dispatchInstances=this._dispatchListeners=null}}),se.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},se.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,de(n),n},de(se);var he=se.extend({data:null}),me=se.extend({data:null}),ye=[9,13,27,32],ve=Y&&"CompositionEvent"in window,ge=null;Y&&"documentMode"in document&&(ge=document.documentMode);var be=Y&&"TextEvent"in window&&!ge,we=Y&&(!ve||ge&&8<ge&&11>=ge),xe=String.fromCharCode(32),ke={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},Te=!1;function Ee(e,t){switch(e){case"keyup":return-1!==ye.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function Ce(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var _e=!1;var Se={eventTypes:ke,extractEvents:function(e,t,n,r){var o=void 0,i=void 0;if(ve)e:{switch(e){case"compositionstart":o=ke.compositionStart;break e;case"compositionend":o=ke.compositionEnd;break e;case"compositionupdate":o=ke.compositionUpdate;break e}o=void 0}else _e?Ee(e,n)&&(o=ke.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=ke.compositionStart);return o?(we&&"ko"!==n.locale&&(_e||o!==ke.compositionStart?o===ke.compositionEnd&&_e&&(i=le()):(ie="value"in(oe=r)?oe.value:oe.textContent,_e=!0)),o=he.getPooled(o,t,n,r),i?o.data=i:null!==(i=Ce(n))&&(o.data=i),q(o),i=o):i=null,(e=be?function(e,t){switch(e){case"compositionend":return Ce(t);case"keypress":return 32!==t.which?null:(Te=!0,xe);case"textInput":return(e=t.data)===xe&&Te?null:e;default:return null}}(e,n):function(e,t){if(_e)return"compositionend"===e||!ve&&Ee(e,t)?(e=le(),ae=ie=oe=null,_e=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return we&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=me.getPooled(ke.beforeInput,t,n,r)).data=e,q(t)):t=null,null===i?t:null===t?i:[i,t]}},Pe=null,Oe=null,Re=null;function je(e){if(e=k(e)){"function"!=typeof Pe&&a("280");var t=x(e.stateNode);Pe(e.stateNode,e.type,t)}}function Ne(e){Oe?Re?Re.push(e):Re=[e]:Oe=e}function Ae(){if(Oe){var e=Oe,t=Re;if(Re=Oe=null,je(e),t)for(e=0;e<t.length;e++)je(t[e])}}function Ue(e,t){return e(t)}function Me(e,t,n){return e(t,n)}function Ie(){}var Le=!1;function De(e,t){if(Le)return e(t);Le=!0;try{return Ue(e,t)}finally{Le=!1,(null!==Oe||null!==Re)&&(Ie(),Ae())}}var Fe={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function ze(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Fe[e.type]:"textarea"===t}function Be(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function We(e){if(!Y)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}function He(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Ve(e){e._valueTracker||(e._valueTracker=function(e){var t=He(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function $e(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=He(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var qe=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,Ye=/^(.*)[\\\/]/,Ke="function"==typeof Symbol&&Symbol.for,Qe=Ke?Symbol.for("react.element"):60103,Ge=Ke?Symbol.for("react.portal"):60106,Xe=Ke?Symbol.for("react.fragment"):60107,Je=Ke?Symbol.for("react.strict_mode"):60108,Ze=Ke?Symbol.for("react.profiler"):60114,et=Ke?Symbol.for("react.provider"):60109,tt=Ke?Symbol.for("react.context"):60110,nt=Ke?Symbol.for("react.concurrent_mode"):60111,rt=Ke?Symbol.for("react.forward_ref"):60112,ot=Ke?Symbol.for("react.suspense"):60113,it=Ke?Symbol.for("react.memo"):60115,at=Ke?Symbol.for("react.lazy"):60116,lt="function"==typeof Symbol&&Symbol.iterator;function ut(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=lt&&e[lt]||e["@@iterator"])?e:null}function ct(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case nt:return"ConcurrentMode";case Xe:return"Fragment";case Ge:return"Portal";case Ze:return"Profiler";case Je:return"StrictMode";case ot:return"Suspense"}if("object"==typeof e)switch(e.$$typeof){case tt:return"Context.Consumer";case et:return"Context.Provider";case rt:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case it:return ct(e.type);case at:if(e=1===e._status?e._result:null)return ct(e)}return null}function st(e){var t="";do{e:switch(e.tag){case 2:case 16:case 0:case 1:case 5:case 8:var n=e._debugOwner,r=e._debugSource,o=ct(e.type),i=null;n&&(i=ct(n.type)),n=o,o="",r?o=" (at "+r.fileName.replace(Ye,"")+":"+r.lineNumber+")":i&&(o=" (created by "+i+")"),i="\n    in "+(n||"Unknown")+o;break e;default:i=""}t+=i,e=e.return}while(e);return t}var ft=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,pt=Object.prototype.hasOwnProperty,dt={},ht={};function mt(e,t,n,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t}var yt={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){yt[e]=new mt(e,0,!1,e,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];yt[t]=new mt(t,1,!1,e[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){yt[e]=new mt(e,2,!1,e.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){yt[e]=new mt(e,2,!1,e,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){yt[e]=new mt(e,3,!1,e.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(e){yt[e]=new mt(e,3,!0,e,null)}),["capture","download"].forEach(function(e){yt[e]=new mt(e,4,!1,e,null)}),["cols","rows","size","span"].forEach(function(e){yt[e]=new mt(e,6,!1,e,null)}),["rowSpan","start"].forEach(function(e){yt[e]=new mt(e,5,!1,e.toLowerCase(),null)});var vt=/[\-:]([a-z])/g;function gt(e){return e[1].toUpperCase()}function bt(e,t,n,r){var o=yt.hasOwnProperty(t)?yt[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null===t||void 0===t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!pt.call(ht,e)||!pt.call(dt,e)&&(ft.test(e)?ht[e]=!0:(dt[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function wt(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function xt(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function kt(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=wt(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Tt(e,t){null!=(t=t.checked)&&bt(e,"checked",t,!1)}function Et(e,t){Tt(e,t);var n=wt(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?_t(e,t.type,n):t.hasOwnProperty("defaultValue")&&_t(e,t.type,wt(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Ct(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function _t(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(vt,gt);yt[t]=new mt(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(vt,gt);yt[t]=new mt(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(vt,gt);yt[t]=new mt(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),yt.tabIndex=new mt("tabIndex",1,!1,"tabindex",null);var St={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Pt(e,t,n){return(e=se.getPooled(St.change,e,t,n)).type="change",Ne(n),q(e),e}var Ot=null,Rt=null;function jt(e){A(e,!1)}function Nt(e){if($e(F(e)))return e}function At(e,t){if("change"===e)return t}var Ut=!1;function Mt(){Ot&&(Ot.detachEvent("onpropertychange",It),Rt=Ot=null)}function It(e){"value"===e.propertyName&&Nt(Rt)&&De(jt,e=Pt(Rt,e,Be(e)))}function Lt(e,t,n){"focus"===e?(Mt(),Rt=n,(Ot=t).attachEvent("onpropertychange",It)):"blur"===e&&Mt()}function Dt(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Nt(Rt)}function Ft(e,t){if("click"===e)return Nt(t)}function zt(e,t){if("input"===e||"change"===e)return Nt(t)}Y&&(Ut=We("input")&&(!document.documentMode||9<document.documentMode));var Bt={eventTypes:St,_isInputEventSupported:Ut,extractEvents:function(e,t,n,r){var o=t?F(t):window,i=void 0,a=void 0,l=o.nodeName&&o.nodeName.toLowerCase();if("select"===l||"input"===l&&"file"===o.type?i=At:ze(o)?Ut?i=zt:(i=Dt,a=Lt):(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(i=Ft),i&&(i=i(e,t)))return Pt(i,n,r);a&&a(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&_t(o,"number",o.value)}},Wt=se.extend({view:null,detail:null}),Ht={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Vt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Ht[e])&&!!t[e]}function $t(){return Vt}var qt=0,Yt=0,Kt=!1,Qt=!1,Gt=Wt.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:$t,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=qt;return qt=e.screenX,Kt?"mousemove"===e.type?e.screenX-t:0:(Kt=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Yt;return Yt=e.screenY,Qt?"mousemove"===e.type?e.screenY-t:0:(Qt=!0,0)}}),Xt=Gt.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Jt={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Zt={eventTypes:Jt,extractEvents:function(e,t,n,r){var o="mouseover"===e||"pointerover"===e,i="mouseout"===e||"pointerout"===e;if(o&&(n.relatedTarget||n.fromElement)||!i&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,i?(i=t,t=(t=n.relatedTarget||n.toElement)?L(t):null):i=null,i===t)return null;var a=void 0,l=void 0,u=void 0,c=void 0;"mouseout"===e||"mouseover"===e?(a=Gt,l=Jt.mouseLeave,u=Jt.mouseEnter,c="mouse"):"pointerout"!==e&&"pointerover"!==e||(a=Xt,l=Jt.pointerLeave,u=Jt.pointerEnter,c="pointer");var s=null==i?o:F(i);if(o=null==t?o:F(t),(e=a.getPooled(l,i,n,r)).type=c+"leave",e.target=s,e.relatedTarget=o,(n=a.getPooled(u,t,n,r)).type=c+"enter",n.target=o,n.relatedTarget=s,r=t,i&&r)e:{for(o=r,c=0,a=t=i;a;a=B(a))c++;for(a=0,u=o;u;u=B(u))a++;for(;0<c-a;)t=B(t),c--;for(;0<a-c;)o=B(o),a--;for(;c--;){if(t===o||t===o.alternate)break e;t=B(t),o=B(o)}t=null}else t=null;for(o=t,t=[];i&&i!==o&&(null===(c=i.alternate)||c!==o);)t.push(i),i=B(i);for(i=[];r&&r!==o&&(null===(c=r.alternate)||c!==o);)i.push(r),r=B(r);for(r=0;r<t.length;r++)V(t[r],"bubbled",e);for(r=i.length;0<r--;)V(i[r],"captured",n);return[e,n]}},en=Object.prototype.hasOwnProperty;function tn(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!=e&&t!=t}function nn(e,t){if(tn(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!en.call(t,n[r])||!tn(e[n[r]],t[n[r]]))return!1;return!0}function rn(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function on(e){2!==rn(e)&&a("188")}function an(e){if(!(e=function(e){var t=e.alternate;if(!t)return 3===(t=rn(e))&&a("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,i=o?o.alternate:null;if(!o||!i)break;if(o.child===i.child){for(var l=o.child;l;){if(l===n)return on(o),e;if(l===r)return on(o),t;l=l.sibling}a("188")}if(n.return!==r.return)n=o,r=i;else{l=!1;for(var u=o.child;u;){if(u===n){l=!0,n=o,r=i;break}if(u===r){l=!0,r=o,n=i;break}u=u.sibling}if(!l){for(u=i.child;u;){if(u===n){l=!0,n=i,r=o;break}if(u===r){l=!0,r=i,n=o;break}u=u.sibling}l||a("189")}}n.alternate!==r&&a("190")}return 3!==n.tag&&a("188"),n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var ln=se.extend({animationName:null,elapsedTime:null,pseudoElement:null}),un=se.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),cn=Wt.extend({relatedTarget:null});function sn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var fn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},pn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},dn=Wt.extend({key:function(e){if(e.key){var t=fn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=sn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?pn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:$t,charCode:function(e){return"keypress"===e.type?sn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?sn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),hn=Gt.extend({dataTransfer:null}),mn=Wt.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:$t}),yn=se.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),vn=Gt.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),gn=[["abort","abort"],[Z,"animationEnd"],[ee,"animationIteration"],[te,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[ne,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],bn={},wn={};function xn(e,t){var n=e[0],r="on"+((e=e[1])[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},bn[e]=t,wn[n]=t}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["auxclick","auxClick"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(e){xn(e,!0)}),gn.forEach(function(e){xn(e,!1)});var kn={eventTypes:bn,isInteractiveTopLevelEventType:function(e){return void 0!==(e=wn[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var o=wn[e];if(!o)return null;switch(e){case"keypress":if(0===sn(n))return null;case"keydown":case"keyup":e=dn;break;case"blur":case"focus":e=cn;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Gt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=hn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=mn;break;case Z:case ee:case te:e=ln;break;case ne:e=yn;break;case"scroll":e=Wt;break;case"wheel":e=vn;break;case"copy":case"cut":case"paste":e=un;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Xt;break;default:e=se}return q(t=e.getPooled(o,t,n,r)),t}},Tn=kn.isInteractiveTopLevelEventType,En=[];function Cn(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r;for(r=n;r.return;)r=r.return;if(!(r=3!==r.tag?null:r.stateNode.containerInfo))break;e.ancestors.push(n),n=L(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=Be(e.nativeEvent);r=e.topLevelType;for(var i=e.nativeEvent,a=null,l=0;l<v.length;l++){var u=v[l];u&&(u=u.extractEvents(r,t,i,o))&&(a=C(a,u))}A(a,!1)}}var _n=!0;function Sn(e,t){if(!t)return null;var n=(Tn(e)?On:Rn).bind(null,e);t.addEventListener(e,n,!1)}function Pn(e,t){if(!t)return null;var n=(Tn(e)?On:Rn).bind(null,e);t.addEventListener(e,n,!0)}function On(e,t){Me(Rn,e,t)}function Rn(e,t){if(_n){var n=Be(t);if(null===(n=L(n))||"number"!=typeof n.tag||2===rn(n)||(n=null),En.length){var r=En.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{De(Cn,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>En.length&&En.push(e)}}}var jn={},Nn=0,An="_reactListenersID"+(""+Math.random()).slice(2);function Un(e){return Object.prototype.hasOwnProperty.call(e,An)||(e[An]=Nn++,jn[e[An]]={}),jn[e[An]]}function Mn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function In(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Ln(e,t){var n,r=In(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=In(r)}}function Dn(){for(var e=window,t=Mn();t instanceof e.HTMLIFrameElement;){try{e=t.contentDocument.defaultView}catch(e){break}t=Mn(e.document)}return t}function Fn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var zn=Y&&"documentMode"in document&&11>=document.documentMode,Bn={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Wn=null,Hn=null,Vn=null,$n=!1;function qn(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return $n||null==Wn||Wn!==Mn(n)?null:("selectionStart"in(n=Wn)&&Fn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Vn&&nn(Vn,n)?null:(Vn=n,(e=se.getPooled(Bn.select,Hn,e,t)).type="select",e.target=Wn,q(e),e))}var Yn={eventTypes:Bn,extractEvents:function(e,t,n,r){var o,i=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!i)){e:{i=Un(i),o=w.onSelect;for(var a=0;a<o.length;a++){var l=o[a];if(!i.hasOwnProperty(l)||!i[l]){i=!1;break e}}i=!0}o=!i}if(o)return null;switch(i=t?F(t):window,e){case"focus":(ze(i)||"true"===i.contentEditable)&&(Wn=i,Hn=t,Vn=null);break;case"blur":Vn=Hn=Wn=null;break;case"mousedown":$n=!0;break;case"contextmenu":case"mouseup":case"dragend":return $n=!1,qn(n,r);case"selectionchange":if(zn)break;case"keydown":case"keyup":return qn(n,r)}return null}};function Kn(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,function(e){null!=e&&(t+=e)}),t}(t.children))&&(e.children=t),e}function Qn(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+wt(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Gn(e,t){return null!=t.dangerouslySetInnerHTML&&a("91"),o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Xn(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&a("92"),Array.isArray(t)&&(1>=t.length||a("93"),t=t[0]),n=t),null==n&&(n="")),e._wrapperState={initialValue:wt(n)}}function Jn(e,t){var n=wt(t.value),r=wt(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Zn(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}j.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),x=z,k=D,T=F,j.injectEventPluginsByName({SimpleEventPlugin:kn,EnterLeaveEventPlugin:Zt,ChangeEventPlugin:Bt,SelectEventPlugin:Yn,BeforeInputEventPlugin:Se});var er={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function tr(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function nr(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?tr(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var rr=void 0,or=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,o){MSApp.execUnsafeLocalFunction(function(){return e(t,n)})}:e}(function(e,t){if(e.namespaceURI!==er.svg||"innerHTML"in e)e.innerHTML=t;else{for((rr=rr||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=rr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}});function ir(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ar={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},lr=["Webkit","ms","Moz","O"];function ur(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=n,i=t[n];o=null==i||"boolean"==typeof i||""===i?"":r||"number"!=typeof i||0===i||ar.hasOwnProperty(o)&&ar[o]?(""+i).trim():i+"px","float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(ar).forEach(function(e){lr.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ar[t]=ar[e]})});var cr=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function sr(e,t){t&&(cr[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&a("137",e,""),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&a("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||a("61")),null!=t.style&&"object"!=typeof t.style&&a("62",""))}function fr(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function pr(e,t){var n=Un(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=w[t];for(var r=0;r<t.length;r++){var o=t[r];if(!n.hasOwnProperty(o)||!n[o]){switch(o){case"scroll":Pn("scroll",e);break;case"focus":case"blur":Pn("focus",e),Pn("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":We(o)&&Pn(o,e);break;case"invalid":case"submit":case"reset":break;default:-1===re.indexOf(o)&&Sn(o,e)}n[o]=!0}}}function dr(){}var hr=null,mr=null;function yr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function vr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var gr=setTimeout,br=clearTimeout;function wr(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function xr(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}new Set;var kr=[],Tr=-1;function Er(e){0>Tr||(e.current=kr[Tr],kr[Tr]=null,Tr--)}function Cr(e,t){kr[++Tr]=e.current,e.current=t}var _r={},Sr={current:_r},Pr={current:!1},Or=_r;function Rr(e,t){var n=e.type.contextTypes;if(!n)return _r;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function jr(e){return null!==(e=e.childContextTypes)&&void 0!==e}function Nr(e){Er(Pr),Er(Sr)}function Ar(e){Er(Pr),Er(Sr)}function Ur(e,t,n){Sr.current!==_r&&a("168"),Cr(Sr,t),Cr(Pr,n)}function Mr(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())i in e||a("108",ct(t)||"Unknown",i);return o({},n,r)}function Ir(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||_r,Or=Sr.current,Cr(Sr,t),Cr(Pr,Pr.current),!0}function Lr(e,t,n){var r=e.stateNode;r||a("169"),n?(t=Mr(e,t,Or),r.__reactInternalMemoizedMergedChildContext=t,Er(Pr),Er(Sr),Cr(Sr,t)):Er(Pr),Cr(Pr,n)}var Dr=null,Fr=null;function zr(e){return function(t){try{return e(t)}catch(e){}}}function Br(e,t,n,r){return new function(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.firstContextDependency=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}(e,t,n,r)}function Wr(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Hr(e,t){var n=e.alternate;return null===n?((n=Br(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,n.firstContextDependency=e.firstContextDependency,n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Vr(e,t,n,r,o,i){var l=2;if(r=e,"function"==typeof e)Wr(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case Xe:return $r(n.children,o,i,t);case nt:return qr(n,3|o,i,t);case Je:return qr(n,2|o,i,t);case Ze:return(e=Br(12,n,t,4|o)).elementType=Ze,e.type=Ze,e.expirationTime=i,e;case ot:return(e=Br(13,n,t,o)).elementType=ot,e.type=ot,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case et:l=10;break e;case tt:l=9;break e;case rt:l=11;break e;case it:l=14;break e;case at:l=16,r=null;break e}a("130",null==e?e:typeof e,"")}return(t=Br(l,n,t,o)).elementType=e,t.type=r,t.expirationTime=i,t}function $r(e,t,n,r){return(e=Br(7,e,r,t)).expirationTime=n,e}function qr(e,t,n,r){return e=Br(8,e,r,t),t=0==(1&t)?Je:nt,e.elementType=t,e.type=t,e.expirationTime=n,e}function Yr(e,t,n){return(e=Br(6,e,null,t)).expirationTime=n,e}function Kr(e,t,n){return(t=Br(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Qr(e,t){e.didError=!1;var n=e.earliestPendingTime;0===n?e.earliestPendingTime=e.latestPendingTime=t:n>t?e.earliestPendingTime=t:e.latestPendingTime<t&&(e.latestPendingTime=t),Jr(t,e)}function Gr(e,t){e.didError=!1;var n=e.latestPingedTime;0!==n&&n<=t&&(e.latestPingedTime=0),n=e.earliestPendingTime;var r=e.latestPendingTime;n===t?e.earliestPendingTime=r===t?e.latestPendingTime=0:r:r===t&&(e.latestPendingTime=n),n=e.earliestSuspendedTime,r=e.latestSuspendedTime,0===n?e.earliestSuspendedTime=e.latestSuspendedTime=t:n>t?e.earliestSuspendedTime=t:r<t&&(e.latestSuspendedTime=t),Jr(t,e)}function Xr(e,t){var n=e.earliestPendingTime;return e=e.earliestSuspendedTime,(0===t||0!==n&&n<t)&&(t=n),(0===t||0!==e&&e<t)&&(t=e),t}function Jr(e,t){var n=t.earliestSuspendedTime,r=t.latestSuspendedTime,o=t.earliestPendingTime,i=t.latestPingedTime;0===(o=0!==o?o:i)&&(0===e||r>e)&&(o=r),0!==(e=o)&&0!==n&&n<e&&(e=n),t.nextExpirationTimeToWorkOn=o,t.expirationTime=e}var Zr=!1;function eo(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function to(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function no(e){return{expirationTime:e,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function ro(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function oo(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,o=null;null===r&&(r=e.updateQueue=eo(e.memoizedState))}else r=e.updateQueue,o=n.updateQueue,null===r?null===o?(r=e.updateQueue=eo(e.memoizedState),o=n.updateQueue=eo(n.memoizedState)):r=e.updateQueue=to(o):null===o&&(o=n.updateQueue=to(r));null===o||r===o?ro(r,t):null===r.lastUpdate||null===o.lastUpdate?(ro(r,t),ro(o,t)):(ro(r,t),o.lastUpdate=t)}function io(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=eo(e.memoizedState):ao(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function ao(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=to(t)),t}function lo(e,t,n,r,i,a){switch(n.tag){case 1:return"function"==typeof(e=n.payload)?e.call(a,r,i):e;case 3:e.effectTag=-1025&e.effectTag|64;case 0:if(null===(i="function"==typeof(e=n.payload)?e.call(a,r,i):e)||void 0===i)break;return o({},r,i);case 2:Zr=!0}return r}function uo(e,t,n,r,o){Zr=!1;for(var i=(t=ao(e,t)).baseState,a=null,l=0,u=t.firstUpdate,c=i;null!==u;){var s=u.expirationTime;s>o?(null===a&&(a=u,i=c),(0===l||l>s)&&(l=s)):(c=lo(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=u:(t.lastEffect.nextEffect=u,t.lastEffect=u))),u=u.next}for(s=null,u=t.firstCapturedUpdate;null!==u;){var f=u.expirationTime;f>o?(null===s&&(s=u,null===a&&(i=c)),(0===l||l>f)&&(l=f)):(c=lo(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=u:(t.lastCapturedEffect.nextEffect=u,t.lastCapturedEffect=u))),u=u.next}null===a&&(t.lastUpdate=null),null===s?t.lastCapturedUpdate=null:e.effectTag|=32,null===a&&null===s&&(i=c),t.baseState=i,t.firstUpdate=a,t.firstCapturedUpdate=s,e.expirationTime=l,e.memoizedState=c}function co(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),so(t.firstEffect,n),t.firstEffect=t.lastEffect=null,so(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function so(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;"function"!=typeof n&&a("191",n),n.call(r)}e=e.nextEffect}}function fo(e,t){return{value:e,source:t,stack:st(t)}}var po={current:null},ho=null,mo=null,yo=null;function vo(e,t){var n=e.type._context;Cr(po,n._currentValue),n._currentValue=t}function go(e){var t=po.current;Er(po),e.type._context._currentValue=t}function bo(e){ho=e,yo=mo=null,e.firstContextDependency=null}function wo(e,t){return yo!==e&&!1!==t&&0!==t&&("number"==typeof t&&1073741823!==t||(yo=e,t=1073741823),t={context:e,observedBits:t,next:null},null===mo?(null===ho&&a("293"),ho.firstContextDependency=mo=t):mo=mo.next=t),e._currentValue}var xo={},ko={current:xo},To={current:xo},Eo={current:xo};function Co(e){return e===xo&&a("174"),e}function _o(e,t){Cr(Eo,t),Cr(To,e),Cr(ko,xo);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:nr(null,"");break;default:t=nr(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}Er(ko),Cr(ko,t)}function So(e){Er(ko),Er(To),Er(Eo)}function Po(e){Co(Eo.current);var t=Co(ko.current),n=nr(t,e.type);t!==n&&(Cr(To,e),Cr(ko,n))}function Oo(e){To.current===e&&(Er(ko),Er(To))}var Ro=qe.ReactCurrentOwner,jo=(new r.Component).refs;function No(e,t,n,r){n=null===(n=n(r,t=e.memoizedState))||void 0===n?t:o({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}var Ao={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===rn(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=Ta(),o=no(r=qi(r,e));o.payload=t,void 0!==n&&null!==n&&(o.callback=n),oo(e,o),Qi(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=Ta(),o=no(r=qi(r,e));o.tag=1,o.payload=t,void 0!==n&&null!==n&&(o.callback=n),oo(e,o),Qi(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=Ta(),r=no(n=qi(n,e));r.tag=2,void 0!==t&&null!==t&&(r.callback=t),oo(e,r),Qi(e,n)}};function Uo(e,t,n,r,o,i,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,a):!t.prototype||!t.prototype.isPureReactComponent||(!nn(n,r)||!nn(o,i))}function Mo(e,t,n){var r=!1,o=_r,i=t.contextType;return"object"==typeof i&&null!==i?i=Ro.currentDispatcher.readContext(i):(o=jr(t)?Or:Sr.current,i=(r=null!==(r=t.contextTypes)&&void 0!==r)?Rr(e,o):_r),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Ao,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function Io(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&Ao.enqueueReplaceState(t,t.state,null)}function Lo(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=jo;var i=t.contextType;"object"==typeof i&&null!==i?o.context=Ro.currentDispatcher.readContext(i):(i=jr(t)?Or:Sr.current,o.context=Rr(e,i)),null!==(i=e.updateQueue)&&(uo(e,i,n,o,r),o.state=e.memoizedState),"function"==typeof(i=t.getDerivedStateFromProps)&&(No(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&Ao.enqueueReplaceState(o,o.state,null),null!==(i=e.updateQueue)&&(uo(e,i,n,o,r),o.state=e.memoizedState)),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var Do=Array.isArray;function Fo(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){var r=void 0;(n=n._owner)&&(1!==n.tag&&a("289"),r=n.stateNode),r||a("147",e);var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===jo&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}"string"!=typeof e&&a("284"),n._owner||a("290",e)}return e}function zo(e,t){"textarea"!==e.type&&a("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function Bo(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=Hr(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function l(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Yr(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=Fo(e,t,n),r.return=e,r):((r=Vr(n.type,n.key,n.props,null,e.mode,r)).ref=Fo(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Kr(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,i){return null===t||7!==t.tag?((t=$r(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function p(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Yr(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case Qe:return(n=Vr(t.type,t.key,t.props,null,e.mode,n)).ref=Fo(e,null,t),n.return=e,n;case Ge:return(t=Kr(t,e.mode,n)).return=e,t}if(Do(t)||ut(t))return(t=$r(t,e.mode,n,null)).return=e,t;zo(e,t)}return null}function d(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case Qe:return n.key===o?n.type===Xe?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case Ge:return n.key===o?s(e,t,n,r):null}if(Do(n)||ut(n))return null!==o?null:f(e,t,n,r,null);zo(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case Qe:return e=e.get(null===r.key?n:r.key)||null,r.type===Xe?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case Ge:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(Do(r)||ut(r))return f(t,e=e.get(n)||null,r,o,null);zo(t,r)}return null}function m(o,a,l,u){for(var c=null,s=null,f=a,m=a=0,y=null;null!==f&&m<l.length;m++){f.index>m?(y=f,f=null):y=f.sibling;var v=d(o,f,l[m],u);if(null===v){null===f&&(f=y);break}e&&f&&null===v.alternate&&t(o,f),a=i(v,a,m),null===s?c=v:s.sibling=v,s=v,f=y}if(m===l.length)return n(o,f),c;if(null===f){for(;m<l.length;m++)(f=p(o,l[m],u))&&(a=i(f,a,m),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);m<l.length;m++)(y=h(f,o,m,l[m],u))&&(e&&null!==y.alternate&&f.delete(null===y.key?m:y.key),a=i(y,a,m),null===s?c=y:s.sibling=y,s=y);return e&&f.forEach(function(e){return t(o,e)}),c}function y(o,l,u,c){var s=ut(u);"function"!=typeof s&&a("150"),null==(u=s.call(u))&&a("151");for(var f=s=null,m=l,y=l=0,v=null,g=u.next();null!==m&&!g.done;y++,g=u.next()){m.index>y?(v=m,m=null):v=m.sibling;var b=d(o,m,g.value,c);if(null===b){m||(m=v);break}e&&m&&null===b.alternate&&t(o,m),l=i(b,l,y),null===f?s=b:f.sibling=b,f=b,m=v}if(g.done)return n(o,m),s;if(null===m){for(;!g.done;y++,g=u.next())null!==(g=p(o,g.value,c))&&(l=i(g,l,y),null===f?s=g:f.sibling=g,f=g);return s}for(m=r(o,m);!g.done;y++,g=u.next())null!==(g=h(m,o,y,g.value,c))&&(e&&null!==g.alternate&&m.delete(null===g.key?y:g.key),l=i(g,l,y),null===f?s=g:f.sibling=g,f=g);return e&&m.forEach(function(e){return t(o,e)}),s}return function(e,r,i,u){var c="object"==typeof i&&null!==i&&i.type===Xe&&null===i.key;c&&(i=i.props.children);var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case Qe:e:{for(s=i.key,c=r;null!==c;){if(c.key===s){if(7===c.tag?i.type===Xe:c.elementType===i.type){n(e,c.sibling),(r=o(c,i.type===Xe?i.props.children:i.props)).ref=Fo(e,c,i),r.return=e,e=r;break e}n(e,c);break}t(e,c),c=c.sibling}i.type===Xe?((r=$r(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=Vr(i.type,i.key,i.props,null,e.mode,u)).ref=Fo(e,r,i),u.return=e,e=u)}return l(e);case Ge:e:{for(c=i.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Kr(i,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=Yr(i,e.mode,u)).return=e,e=r),l(e);if(Do(i))return m(e,r,i,u);if(ut(i))return y(e,r,i,u);if(s&&zo(e,i),void 0===i&&!c)switch(e.tag){case 1:case 0:a("152",(u=e.type).displayName||u.name||"Component")}return n(e,r)}}var Wo=Bo(!0),Ho=Bo(!1),Vo=null,$o=null,qo=!1;function Yo(e,t){var n=Br(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Ko(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function Qo(e){if(qo){var t=$o;if(t){var n=t;if(!Ko(e,t)){if(!(t=wr(n))||!Ko(e,t))return e.effectTag|=2,qo=!1,void(Vo=e);Yo(Vo,n)}Vo=e,$o=xr(t)}else e.effectTag|=2,qo=!1,Vo=e}}function Go(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag;)e=e.return;Vo=e}function Xo(e){if(e!==Vo)return!1;if(!qo)return Go(e),qo=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!vr(t,e.memoizedProps))for(t=$o;t;)Yo(e,t),t=wr(t);return Go(e),$o=Vo?wr(e.stateNode):null,!0}function Jo(){$o=Vo=null,qo=!1}var Zo=qe.ReactCurrentOwner;function ei(e,t,n,r){t.child=null===e?Ho(t,null,n,r):Wo(t,e.child,n,r)}function ti(e,t,n,r,o){n=n.render;var i=t.ref;return Pr.current||t.memoizedProps!==r||i!==(null!==e?e.ref:null)?(ei(e,t,r=n(r,i),o),t.child):fi(e,t,o)}function ni(e,t,n,r,o,i){if(null===e){var a=n.type;return"function"!=typeof a||Wr(a)||void 0!==a.defaultProps||null!==n.compare?((e=Vr(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,ri(e,t,a,r,o,i))}return a=e.child,(0===o||o>i)&&(o=a.memoizedProps,(n=null!==(n=n.compare)?n:nn)(o,r)&&e.ref===t.ref)?fi(e,t,i):((e=Hr(a,r)).ref=t.ref,e.return=t,t.child=e)}function ri(e,t,n,r,o,i){return null!==e&&(0===o||o>i)&&nn(e.memoizedProps,r)&&e.ref===t.ref?fi(e,t,i):ii(e,t,n,r,i)}function oi(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function ii(e,t,n,r,o){var i=jr(n)?Or:Sr.current;return i=Rr(t,i),bo(t),n=n(r,i),t.effectTag|=1,ei(e,t,n,o),t.child}function ai(e,t,n,r,o){if(jr(n)){var i=!0;Ir(t)}else i=!1;if(bo(t),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),Mo(t,n,r),Lo(t,n,r,o),r=!0;else if(null===e){var a=t.stateNode,l=t.memoizedProps;a.props=l;var u=a.context,c=n.contextType;"object"==typeof c&&null!==c?c=Ro.currentDispatcher.readContext(c):c=Rr(t,c=jr(n)?Or:Sr.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof a.getSnapshotBeforeUpdate;f||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==c)&&Io(t,a,r,c),Zr=!1;var p=t.memoizedState;u=a.state=p;var d=t.updateQueue;null!==d&&(uo(t,d,r,a,o),u=t.memoizedState),l!==r||p!==u||Pr.current||Zr?("function"==typeof s&&(No(t,n,s,r),u=t.memoizedState),(l=Zr||Uo(t,n,l,r,p,u,c))?(f||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(t.effectTag|=4)):("function"==typeof a.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),a.props=r,a.state=u,a.context=c,r=l):("function"==typeof a.componentDidMount&&(t.effectTag|=4),r=!1)}else a=t.stateNode,l=t.memoizedProps,a.props=l,u=a.context,"object"==typeof(c=n.contextType)&&null!==c?c=Ro.currentDispatcher.readContext(c):c=Rr(t,c=jr(n)?Or:Sr.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==c)&&Io(t,a,r,c),Zr=!1,u=t.memoizedState,p=a.state=u,null!==(d=t.updateQueue)&&(uo(t,d,r,a,o),p=t.memoizedState),l!==r||u!==p||Pr.current||Zr?("function"==typeof s&&(No(t,n,s,r),p=t.memoizedState),(s=Zr||Uo(t,n,l,r,u,p,c))?(f||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,p,c),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,p,c)),"function"==typeof a.componentDidUpdate&&(t.effectTag|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=p),a.props=r,a.state=p,a.context=c,r=s):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return li(e,t,n,r,i,o)}function li(e,t,n,r,o,i){oi(e,t);var a=0!=(64&t.effectTag);if(!r&&!a)return o&&Lr(t,n,!1),fi(e,t,i);r=t.stateNode,Zo.current=t;var l=a&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&a?(t.child=Wo(t,e.child,null,i),t.child=Wo(t,null,l,i)):ei(e,t,l,i),t.memoizedState=r.state,o&&Lr(t,n,!0),t.child}function ui(e){var t=e.stateNode;t.pendingContext?Ur(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Ur(0,t.context,!1),_o(e,t.containerInfo)}function ci(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}function si(e,t,n){var r=t.mode,o=t.pendingProps,i=t.memoizedState;null!==i&&(i.alreadyCaptured?null!==e&&i===e.memoizedState?i={alreadyCaptured:!0,didTimeout:!0,timedOutAt:i.timedOutAt}:(i.alreadyCaptured=!0,i.didTimeout=!0):i=null);var a=null!==i&&i.didTimeout;if(null===e)a?(a=o.fallback,o=$r(null,r,0,null),r=$r(a,r,n,null),o.sibling=r,(n=o).return=r.return=t):n=r=Ho(t,null,o.children,n);else{var l=e.memoizedState;null!==l&&l.didTimeout?(e=(r=e.child).sibling,a?(n=o.fallback,(r=Hr(r,r.pendingProps)).effectTag|=2,(o=r.sibling=Hr(e,n,e.expirationTime)).effectTag|=2,n=r,r.childExpirationTime=0,r=o,n.return=r.return=t):(a=e.child,r=Wo(t,r.child,o.children,n),Wo(t,a,null,n),n=r)):(e=e.child,a?(a=o.fallback,(o=$r(null,r,0,null)).effectTag|=2,o.child=e,e.return=o,(r=o.sibling=$r(a,r,n,null)).effectTag|=2,n=o,o.childExpirationTime=0,n.return=r.return=t):r=n=Wo(t,e,o.children,n))}return t.memoizedState=i,t.child=n,r}function fi(e,t,n){null!==e&&(t.firstContextDependency=e.firstContextDependency);var r=t.childExpirationTime;if(0===r||r>n)return null;if(null!==e&&t.child!==e.child&&a("153"),null!==t.child){for(n=Hr(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Hr(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function pi(e,t,n){var r=t.expirationTime;if(null!==e&&e.memoizedProps===t.pendingProps&&!Pr.current&&(0===r||r>n)){switch(t.tag){case 3:ui(t),Jo();break;case 5:Po(t);break;case 1:jr(t.type)&&Ir(t);break;case 4:_o(t,t.stateNode.containerInfo);break;case 10:vo(t,t.memoizedProps.value);break;case 13:if(null!==(r=t.memoizedState)&&r.didTimeout)return 0!==(r=t.child.childExpirationTime)&&r<=n?si(e,t,n):null!==(t=fi(e,t,n))?t.sibling:null}return fi(e,t,n)}switch(t.expirationTime=0,t.tag){case 2:r=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps;var o=Rr(t,Sr.current);if(bo(t),o=r(e,o),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,jr(r)){var i=!0;Ir(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null;var l=r.getDerivedStateFromProps;"function"==typeof l&&No(t,r,l,e),o.updater=Ao,t.stateNode=o,o._reactInternalFiber=t,Lo(t,r,e,n),t=li(null,t,r,!0,i,n)}else t.tag=0,ei(null,t,o,n),t=t.child;return t;case 16:switch(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),i=t.pendingProps,e=function(e){var t=e._result;switch(e._status){case 1:return t;case 2:case 0:throw t;default:throw e._status=0,(t=(t=e._ctor)()).then(function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)},function(t){0===e._status&&(e._status=2,e._result=t)}),e._result=t,t}}(o),t.type=e,o=t.tag=function(e){if("function"==typeof e)return Wr(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===rt)return 11;if(e===it)return 14}return 2}(e),i=ci(e,i),l=void 0,o){case 0:l=ii(null,t,e,i,n);break;case 1:l=ai(null,t,e,i,n);break;case 11:l=ti(null,t,e,i,n);break;case 14:l=ni(null,t,e,ci(e.type,i),r,n);break;default:a("283",e)}return l;case 0:return r=t.type,o=t.pendingProps,ii(e,t,r,o=t.elementType===r?o:ci(r,o),n);case 1:return r=t.type,o=t.pendingProps,ai(e,t,r,o=t.elementType===r?o:ci(r,o),n);case 3:return ui(t),null===(r=t.updateQueue)&&a("282"),o=null!==(o=t.memoizedState)?o.element:null,uo(t,r,t.pendingProps,null,n),(r=t.memoizedState.element)===o?(Jo(),t=fi(e,t,n)):(o=t.stateNode,(o=(null===e||null===e.child)&&o.hydrate)&&($o=xr(t.stateNode.containerInfo),Vo=t,o=qo=!0),o?(t.effectTag|=2,t.child=Ho(t,null,r,n)):(ei(e,t,r,n),Jo()),t=t.child),t;case 5:return Po(t),null===e&&Qo(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,l=o.children,vr(r,o)?l=null:null!==i&&vr(r,i)&&(t.effectTag|=16),oi(e,t),1073741823!==n&&1&t.mode&&o.hidden?(t.expirationTime=1073741823,t=null):(ei(e,t,l,n),t=t.child),t;case 6:return null===e&&Qo(t),null;case 13:return si(e,t,n);case 4:return _o(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Wo(t,null,r,n):ei(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,ti(e,t,r,o=t.elementType===r?o:ci(r,o),n);case 7:return ei(e,t,t.pendingProps,n),t.child;case 8:case 12:return ei(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,o=t.pendingProps,l=t.memoizedProps,vo(t,i=o.value),null!==l){var u=l.value;if(0===(i=u===i&&(0!==u||1/u==1/i)||u!=u&&i!=i?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,i):1073741823))){if(l.children===o.children&&!Pr.current){t=fi(e,t,n);break e}}else for(null!==(l=t.child)&&(l.return=t);null!==l;){if(null!==(u=l.firstContextDependency))do{if(u.context===r&&0!=(u.observedBits&i)){if(1===l.tag){var c=no(n);c.tag=2,oo(l,c)}(0===l.expirationTime||l.expirationTime>n)&&(l.expirationTime=n),null!==(c=l.alternate)&&(0===c.expirationTime||c.expirationTime>n)&&(c.expirationTime=n);for(var s=l.return;null!==s;){if(c=s.alternate,0===s.childExpirationTime||s.childExpirationTime>n)s.childExpirationTime=n,null!==c&&(0===c.childExpirationTime||c.childExpirationTime>n)&&(c.childExpirationTime=n);else{if(null===c||!(0===c.childExpirationTime||c.childExpirationTime>n))break;c.childExpirationTime=n}s=s.return}}c=l.child,u=u.next}while(null!==u);else c=10===l.tag&&l.type===t.type?null:l.child;if(null!==c)c.return=l;else for(c=l;null!==c;){if(c===t){c=null;break}if(null!==(l=c.sibling)){l.return=c.return,c=l;break}c=c.return}l=c}}ei(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,bo(t),r=r(o=wo(o,i.unstable_observedBits)),t.effectTag|=1,ei(e,t,r,n),t.child;case 14:return ni(e,t,o=t.type,i=ci(o.type,t.pendingProps),r,n);case 15:return ri(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:ci(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,jr(r)?(e=!0,Ir(t)):e=!1,bo(t),Mo(t,r,o),Lo(t,r,o,n),li(null,t,r,!0,e,n);default:a("156")}}function di(e){e.effectTag|=4}var hi=void 0,mi=void 0,yi=void 0,vi=void 0;function gi(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=st(n)),null!==n&&ct(n.type),t=t.value,null!==e&&1===e.tag&&ct(e.type);try{console.error(t)}catch(e){setTimeout(function(){throw e})}}function bi(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){$i(e,t)}else t.current=null}function wi(e){switch("function"==typeof Fr&&Fr(e),e.tag){case 1:bi(e);var t=e.stateNode;if("function"==typeof t.componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){$i(e,t)}break;case 5:bi(e);break;case 4:Ti(e)}}function xi(e){return 5===e.tag||3===e.tag||4===e.tag}function ki(e){e:{for(var t=e.return;null!==t;){if(xi(t)){var n=t;break e}t=t.return}a("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:a("161")}16&n.effectTag&&(ir(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||xi(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)if(n)if(r){var i=t,l=o.stateNode,u=n;8===i.nodeType?i.parentNode.insertBefore(l,u):i.insertBefore(l,u)}else t.insertBefore(o.stateNode,n);else r?(l=t,u=o.stateNode,8===l.nodeType?(i=l.parentNode).insertBefore(u,l):(i=l).appendChild(u),null!==(l=l._reactRootContainer)&&void 0!==l||null!==i.onclick||(i.onclick=dr)):t.appendChild(o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function Ti(e){for(var t=e,n=!1,r=void 0,o=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&a("160"),n.tag){case 5:r=n.stateNode,o=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,o=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var i=t,l=i;;)if(wi(l),null!==l.child&&4!==l.tag)l.child.return=l,l=l.child;else{if(l===i)break;for(;null===l.sibling;){if(null===l.return||l.return===i)break e;l=l.return}l.sibling.return=l.return,l=l.sibling}o?(i=r,l=t.stateNode,8===i.nodeType?i.parentNode.removeChild(l):i.removeChild(l)):r.removeChild(t.stateNode)}else if(4===t.tag?(r=t.stateNode.containerInfo,o=!0):wi(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function Ei(e,t){switch(t.tag){case 1:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,o=null!==e?e.memoizedProps:r;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(n[I]=r,"input"===e&&"radio"===r.type&&null!=r.name&&Tt(n,r),fr(e,o),t=fr(e,r),o=0;o<i.length;o+=2){var l=i[o],u=i[o+1];"style"===l?ur(n,u):"dangerouslySetInnerHTML"===l?or(n,u):"children"===l?ir(n,u):bt(n,l,u,t)}switch(e){case"input":Et(n,r);break;case"textarea":Jn(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(i=r.value)?Qn(n,!!r.multiple,i,!1):e!==!!r.multiple&&(null!=r.defaultValue?Qn(n,!!r.multiple,r.defaultValue,!0):Qn(n,!!r.multiple,r.multiple?[]:"",!1))}}}break;case 6:null===t.stateNode&&a("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 12:case 13:case 17:break;default:a("163")}}function Ci(e,t,n){(n=no(n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Na(r),gi(e,t)},n}function _i(e,t,n){(n=no(n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===zi?zi=new Set([this]):zi.add(this));var n=t.value,o=t.stack;gi(e,t),this.componentDidCatch(n,{componentStack:null!==o?o:""})}),n}function Si(e){switch(e.tag){case 1:jr(e.type)&&Nr();var t=e.effectTag;return 1024&t?(e.effectTag=-1025&t|64,e):null;case 3:return So(),Ar(),0!=(64&(t=e.effectTag))&&a("285"),e.effectTag=-1025&t|64,e;case 5:return Oo(e),null;case 13:if(1024&(t=e.effectTag)){e.effectTag=-1025&t|64,t=null!==(t=e.alternate)?t.memoizedState:null;var n=e.memoizedState;return null===n?n={alreadyCaptured:!0,didTimeout:!1,timedOutAt:0}:t===n?n={alreadyCaptured:!0,didTimeout:n.didTimeout,timedOutAt:n.timedOutAt}:n.alreadyCaptured=!0,e.memoizedState=n,e}return null;case 4:return So(),null;case 10:return go(e),null;default:return null}}hi=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},mi=function(){},yi=function(e,t,n,r,i){var a=e.memoizedProps;if(a!==r){var l=t.stateNode;switch(Co(ko.current),e=null,n){case"input":a=xt(l,a),r=xt(l,r),e=[];break;case"option":a=Kn(l,a),r=Kn(l,r),e=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":a=Gn(l,a),r=Gn(l,r),e=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(l.onclick=dr)}sr(n,r),l=n=void 0;var u=null;for(n in a)if(!r.hasOwnProperty(n)&&a.hasOwnProperty(n)&&null!=a[n])if("style"===n){var c=a[n];for(l in c)c.hasOwnProperty(l)&&(u||(u={}),u[l]="")}else"dangerouslySetInnerHTML"!==n&&"children"!==n&&"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&"autoFocus"!==n&&(b.hasOwnProperty(n)?e||(e=[]):(e=e||[]).push(n,null));for(n in r){var s=r[n];if(c=null!=a?a[n]:void 0,r.hasOwnProperty(n)&&s!==c&&(null!=s||null!=c))if("style"===n)if(c){for(l in c)!c.hasOwnProperty(l)||s&&s.hasOwnProperty(l)||(u||(u={}),u[l]="");for(l in s)s.hasOwnProperty(l)&&c[l]!==s[l]&&(u||(u={}),u[l]=s[l])}else u||(e||(e=[]),e.push(n,u)),u=s;else"dangerouslySetInnerHTML"===n?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(n,""+s)):"children"===n?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(n,""+s):"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&(b.hasOwnProperty(n)?(null!=s&&pr(i,n),e||c===s||(e=[])):(e=e||[]).push(n,s))}u&&(e=e||[]).push("style",u),i=e,(t.updateQueue=i)&&di(t)}},vi=function(e,t,n,r){n!==r&&di(t)};var Pi={readContext:wo},Oi=qe.ReactCurrentOwner,Ri=0,ji=0,Ni=!1,Ai=null,Ui=null,Mi=0,Ii=-1,Li=!1,Di=null,Fi=!1,zi=null;function Bi(){if(null!==Ai)for(var e=Ai.return;null!==e;){var t=e;switch(t.tag){case 1:var n=t.type.childContextTypes;null!==n&&void 0!==n&&Nr();break;case 3:So(),Ar();break;case 5:Oo(t);break;case 4:So();break;case 10:go(t)}e=e.return}Ui=null,Mi=0,Ii=-1,Li=!1,Ai=null}function Wi(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0==(512&e.effectTag)){var i=t,l=(t=e).pendingProps;switch(t.tag){case 2:case 16:break;case 15:case 0:break;case 1:jr(t.type)&&Nr();break;case 3:So(),Ar(),(l=t.stateNode).pendingContext&&(l.context=l.pendingContext,l.pendingContext=null),null!==i&&null!==i.child||(Xo(t),t.effectTag&=-3),mi(t);break;case 5:Oo(t);var u=Co(Eo.current),c=t.type;if(null!==i&&null!=t.stateNode)yi(i,t,c,l,u),i.ref!==t.ref&&(t.effectTag|=128);else if(l){var s=Co(ko.current);if(Xo(t)){i=(l=t).stateNode;var f=l.type,p=l.memoizedProps,d=u;switch(i[M]=l,i[I]=p,c=void 0,u=f){case"iframe":case"object":Sn("load",i);break;case"video":case"audio":for(f=0;f<re.length;f++)Sn(re[f],i);break;case"source":Sn("error",i);break;case"img":case"image":case"link":Sn("error",i),Sn("load",i);break;case"form":Sn("reset",i),Sn("submit",i);break;case"details":Sn("toggle",i);break;case"input":kt(i,p),Sn("invalid",i),pr(d,"onChange");break;case"select":i._wrapperState={wasMultiple:!!p.multiple},Sn("invalid",i),pr(d,"onChange");break;case"textarea":Xn(i,p),Sn("invalid",i),pr(d,"onChange")}for(c in sr(u,p),f=null,p)p.hasOwnProperty(c)&&(s=p[c],"children"===c?"string"==typeof s?i.textContent!==s&&(f=["children",s]):"number"==typeof s&&i.textContent!==""+s&&(f=["children",""+s]):b.hasOwnProperty(c)&&null!=s&&pr(d,c));switch(u){case"input":Ve(i),Ct(i,p,!0);break;case"textarea":Ve(i),Zn(i);break;case"select":case"option":break;default:"function"==typeof p.onClick&&(i.onclick=dr)}c=f,l.updateQueue=c,(l=null!==c)&&di(t)}else{p=t,i=c,d=l,f=9===u.nodeType?u:u.ownerDocument,s===er.html&&(s=tr(i)),s===er.html?"script"===i?((i=f.createElement("div")).innerHTML="<script><\/script>",f=i.removeChild(i.firstChild)):"string"==typeof d.is?f=f.createElement(i,{is:d.is}):(f=f.createElement(i),"select"===i&&d.multiple&&(f.multiple=!0)):f=f.createElementNS(s,i),(i=f)[M]=p,i[I]=l,hi(i,t,!1,!1),d=i;var h=u,m=fr(f=c,p=l);switch(f){case"iframe":case"object":Sn("load",d),u=p;break;case"video":case"audio":for(u=0;u<re.length;u++)Sn(re[u],d);u=p;break;case"source":Sn("error",d),u=p;break;case"img":case"image":case"link":Sn("error",d),Sn("load",d),u=p;break;case"form":Sn("reset",d),Sn("submit",d),u=p;break;case"details":Sn("toggle",d),u=p;break;case"input":kt(d,p),u=xt(d,p),Sn("invalid",d),pr(h,"onChange");break;case"option":u=Kn(d,p);break;case"select":d._wrapperState={wasMultiple:!!p.multiple},u=o({},p,{value:void 0}),Sn("invalid",d),pr(h,"onChange");break;case"textarea":Xn(d,p),u=Gn(d,p),Sn("invalid",d),pr(h,"onChange");break;default:u=p}sr(f,u),s=void 0;var y=f,v=d,g=u;for(s in g)if(g.hasOwnProperty(s)){var w=g[s];"style"===s?ur(v,w):"dangerouslySetInnerHTML"===s?null!=(w=w?w.__html:void 0)&&or(v,w):"children"===s?"string"==typeof w?("textarea"!==y||""!==w)&&ir(v,w):"number"==typeof w&&ir(v,""+w):"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&"autoFocus"!==s&&(b.hasOwnProperty(s)?null!=w&&pr(h,s):null!=w&&bt(v,s,w,m))}switch(f){case"input":Ve(d),Ct(d,p,!1);break;case"textarea":Ve(d),Zn(d);break;case"option":null!=p.value&&d.setAttribute("value",""+wt(p.value));break;case"select":(u=d).multiple=!!p.multiple,null!=(d=p.value)?Qn(u,!!p.multiple,d,!1):null!=p.defaultValue&&Qn(u,!!p.multiple,p.defaultValue,!0);break;default:"function"==typeof u.onClick&&(d.onclick=dr)}(l=yr(c,l))&&di(t),t.stateNode=i}null!==t.ref&&(t.effectTag|=128)}else null===t.stateNode&&a("166");break;case 6:i&&null!=t.stateNode?vi(i,t,i.memoizedProps,l):("string"!=typeof l&&(null===t.stateNode&&a("166")),i=Co(Eo.current),Co(ko.current),Xo(t)?(c=(l=t).stateNode,i=l.memoizedProps,c[M]=l,(l=c.nodeValue!==i)&&di(t)):(c=t,(l=(9===i.nodeType?i:i.ownerDocument).createTextNode(l))[M]=t,c.stateNode=l));break;case 11:break;case 13:l=t.memoizedState,c=null!==i?i.memoizedState:null,(null!==l&&l.didTimeout)!==(null!==c&&c.didTimeout)&&(t.effectTag|=4);break;case 7:case 8:case 12:break;case 4:So(),mi(t);break;case 10:go(t);break;case 9:case 14:break;case 17:jr(t.type)&&Nr();break;default:a("156")}if(Ai=null,t=e,1073741823===Mi||1073741823!==t.childExpirationTime){for(l=0,c=t.child;null!==c;)i=c.expirationTime,u=c.childExpirationTime,(0===l||0!==i&&i<l)&&(l=i),(0===l||0!==u&&u<l)&&(l=u),c=c.sibling;t.childExpirationTime=l}null!==n&&0==(512&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e))}else{if(null!==(e=Si(e)))return e.effectTag&=511,e;null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=512)}if(null!==r)return r;if(null===n)break;e=n}return null}function Hi(e){var t=pi(e.alternate,e,Mi);return e.memoizedProps=e.pendingProps,null===t&&(t=Wi(e)),Oi.current=null,t}function Vi(e,t,n){Ni&&a("243"),Ni=!0,Oi.currentDispatcher=Pi;var r=e.nextExpirationTimeToWorkOn;r===Mi&&e===Ui&&null!==Ai||(Bi(),Mi=r,Ai=Hr((Ui=e).current,null),e.pendingCommitExpirationTime=0);for(var o=!1;;){try{if(t)for(;null!==Ai&&!ja();)Ai=Hi(Ai);else for(;null!==Ai;)Ai=Hi(Ai)}catch(t){if(null===Ai)o=!0,Na(t);else{null===Ai&&a("271");var i=Ai,l=i.return;if(null!==l){e:{var u=e,c=l,s=i,f=t;if(l=Mi,s.effectTag|=512,s.firstEffect=s.lastEffect=null,null!==f&&"object"==typeof f&&"function"==typeof f.then){var p=f;f=c;var d=-1,h=-1;do{if(13===f.tag){var m=f.alternate;if(null!==m&&(null!==(m=m.memoizedState)&&m.didTimeout)){h=10*(m.timedOutAt-2);break}"number"==typeof(m=f.pendingProps.maxDuration)&&(0>=m?d=0:(-1===d||m<d)&&(d=m))}f=f.return}while(null!==f);f=c;do{if((m=13===f.tag)&&(void 0===f.memoizedProps.fallback?m=!1:m=null===(m=f.memoizedState)||!m.didTimeout),m){if(c=Yi.bind(null,u,f,s,0==(1&f.mode)?1:l),p.then(c,c),0==(1&f.mode)){f.effectTag|=32,ei(s.alternate,s,null,l),s.effectTag&=-513,1===s.tag&&(s.effectTag&=-421,null===s.alternate&&(s.tag=17));break e}-1===d?u=1073741823:(-1===h&&(h=10*(Xr(u,l)-2)-5e3),u=h+d),0<=u&&Ii<u&&(Ii=u),f.effectTag|=1024,f.expirationTime=l;break e}f=f.return}while(null!==f);f=Error("An update was suspended, but no placeholder UI was provided.")}Li=!0,f=fo(f,s),u=c;do{switch(u.tag){case 3:s=f,u.effectTag|=1024,u.expirationTime=l,io(u,l=Ci(u,s,l));break e;case 1:if(s=f,c=u.type,p=u.stateNode,0==(64&u.effectTag)&&("function"==typeof c.getDerivedStateFromError||null!==p&&"function"==typeof p.componentDidCatch&&(null===zi||!zi.has(p)))){u.effectTag|=1024,u.expirationTime=l,io(u,l=_i(u,s,l));break e}}u=u.return}while(null!==u)}Ai=Wi(i);continue}o=!0,Na(t)}}break}if(Ni=!1,yo=mo=ho=Oi.currentDispatcher=null,o)Ui=null,e.finishedWork=null;else if(null!==Ai)e.finishedWork=null;else{if(null===(t=e.current.alternate)&&a("281"),Ui=null,Li){if(o=e.latestPendingTime,i=e.latestSuspendedTime,l=e.latestPingedTime,0!==o&&o>r||0!==i&&i>r||0!==l&&l>r)return Gr(e,r),void ka(e,t,r,e.expirationTime,-1);if(!e.didError&&!n)return e.didError=!0,r=e.nextExpirationTimeToWorkOn=r,n=e.expirationTime=1,void ka(e,t,r,n,-1)}n||-1===Ii?(e.pendingCommitExpirationTime=r,e.finishedWork=t):(Gr(e,r),(n=10*(Xr(e,r)-2))<Ii&&(Ii=n),n=10*(Ta()-2),n=Ii-n,ka(e,t,r,e.expirationTime,0>n?0:n))}}function $i(e,t){var n;e:{for(Ni&&!Fi&&a("263"),n=e.return;null!==n;){switch(n.tag){case 1:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===zi||!zi.has(r))){oo(n,e=_i(n,e=fo(t,e),1)),Qi(n,1),n=void 0;break e}break;case 3:oo(n,e=Ci(n,e=fo(t,e),1)),Qi(n,1),n=void 0;break e}n=n.return}3===e.tag&&(oo(e,n=Ci(e,n=fo(t,e),1)),Qi(e,1)),n=void 0}return n}function qi(e,t){return 0!==ji?e=ji:Ni?e=Fi?1:Mi:1&t.mode?(e=fa?2+10*(1+((e-2+15)/10|0)):2+25*(1+((e-2+500)/25|0)),null!==Ui&&e===Mi&&(e+=1)):e=1,fa&&e>oa&&(oa=e),e}function Yi(e,t,n,r){var o=e.earliestSuspendedTime,i=e.latestSuspendedTime;if(0!==o&&r>=o&&r<=i){i=o=r,e.didError=!1;var a=e.latestPingedTime;(0===a||a<i)&&(e.latestPingedTime=i),Jr(i,e)}else Qr(e,o=qi(o=Ta(),t));0!=(1&t.mode)&&e===Ui&&Mi===r&&(Ui=null),Ki(t,o),0==(1&t.mode)&&(Ki(n,o),1===n.tag&&null!==n.stateNode&&((t=no(o)).tag=2,oo(n,t))),0!==(n=e.expirationTime)&&Ea(e,n)}function Ki(e,t){(0===e.expirationTime||e.expirationTime>t)&&(e.expirationTime=t);var n=e.alternate;null!==n&&(0===n.expirationTime||n.expirationTime>t)&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,(0===r.childExpirationTime||r.childExpirationTime>t)&&(r.childExpirationTime=t),null!==n&&(0===n.childExpirationTime||n.childExpirationTime>t)&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return null===o?null:o}function Qi(e,t){null!==(e=Ki(e,t))&&(!Ni&&0!==Mi&&t<Mi&&Bi(),Qr(e,t),Ni&&!Fi&&Ui===e||Ea(e,e.expirationTime),va>ya&&(va=0,a("185")))}function Gi(e,t,n,r,o){var i=ji;ji=1;try{return e(t,n,r,o)}finally{ji=i}}var Xi=null,Ji=null,Zi=0,ea=void 0,ta=!1,na=null,ra=0,oa=0,ia=!1,aa=!1,la=null,ua=null,ca=!1,sa=!1,fa=!1,pa=null,da=i.unstable_now(),ha=2+(da/10|0),ma=ha,ya=50,va=0,ga=null,ba=1;function wa(){ha=2+((i.unstable_now()-da)/10|0)}function xa(e,t){if(0!==Zi){if(t>Zi)return;null!==ea&&i.unstable_cancelCallback(ea)}Zi=t,e=i.unstable_now()-da,ea=i.unstable_scheduleCallback(_a,{timeout:10*(t-2)-e})}function ka(e,t,n,r,o){e.expirationTime=r,0!==o||ja()?0<o&&(e.timeoutHandle=gr(function(e,t,n){e.pendingCommitExpirationTime=n,e.finishedWork=t,wa(),ma=ha,Pa(e,n)}.bind(null,e,t,n),o)):(e.pendingCommitExpirationTime=n,e.finishedWork=t)}function Ta(){return ta?ma:(Ca(),0!==ra&&1073741823!==ra||(wa(),ma=ha),ma)}function Ea(e,t){if(null===e.nextScheduledRoot)e.expirationTime=t,null===Ji?(Xi=Ji=e,e.nextScheduledRoot=e):(Ji=Ji.nextScheduledRoot=e).nextScheduledRoot=Xi;else{var n=e.expirationTime;(0===n||t<n)&&(e.expirationTime=t)}ta||(ca?sa&&(na=e,ra=1,Oa(e,1,!0)):1===t?Sa(1,null):xa(e,t))}function Ca(){var e=0,t=null;if(null!==Ji)for(var n=Ji,r=Xi;null!==r;){var o=r.expirationTime;if(0===o){if((null===n||null===Ji)&&a("244"),r===r.nextScheduledRoot){Xi=Ji=r.nextScheduledRoot=null;break}if(r===Xi)Xi=o=r.nextScheduledRoot,Ji.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===Ji){(Ji=n).nextScheduledRoot=Xi,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if((0===e||o<e)&&(e=o,t=r),r===Ji)break;if(1===e)break;n=r,r=r.nextScheduledRoot}}na=t,ra=e}function _a(e){if(e.didTimeout&&null!==Xi){wa();var t=Xi;do{var n=t.expirationTime;0!==n&&ha>=n&&(t.nextExpirationTimeToWorkOn=ha),t=t.nextScheduledRoot}while(t!==Xi)}Sa(0,e)}function Sa(e,t){if(ua=t,Ca(),null!==ua)for(wa(),ma=ha;null!==na&&0!==ra&&(0===e||e>=ra)&&(!ia||ha>=ra);)Oa(na,ra,ha>=ra),Ca(),wa(),ma=ha;else for(;null!==na&&0!==ra&&(0===e||e>=ra);)Oa(na,ra,!0),Ca();if(null!==ua&&(Zi=0,ea=null),0!==ra&&xa(na,ra),ua=null,ia=!1,va=0,ga=null,null!==pa)for(e=pa,pa=null,t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){aa||(aa=!0,la=e)}}if(aa)throw e=la,la=null,aa=!1,e}function Pa(e,t){ta&&a("253"),na=e,ra=t,Oa(e,t,!0),Sa(1,null)}function Oa(e,t,n){if(ta&&a("245"),ta=!0,null===ua||n){var r=e.finishedWork;null!==r?Ra(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,br(r)),Vi(e,!1,n),null!==(r=e.finishedWork)&&Ra(e,r,t))}else null!==(r=e.finishedWork)?Ra(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,br(r)),Vi(e,!0,n),null!==(r=e.finishedWork)&&(ja()?e.finishedWork=r:Ra(e,r,t)));ta=!1}function Ra(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime<=n&&(null===pa?pa=[r]:pa.push(r),r._defer))return e.finishedWork=t,void(e.expirationTime=0);e.finishedWork=null,e===ga?va++:(ga=e,va=0),Fi=Ni=!0,e.current===t&&a("177");var o=e.pendingCommitExpirationTime;0===o&&a("261"),e.pendingCommitExpirationTime=0;var i=t.expirationTime,l=t.childExpirationTime,u=0===i||0!==l&&l<i?l:i;if(e.didError=!1,0===u)e.earliestPendingTime=0,e.latestPendingTime=0,e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0;else{var c=e.latestPendingTime;0!==c&&(c<u?e.earliestPendingTime=e.latestPendingTime=0:e.earliestPendingTime<u&&(e.earliestPendingTime=e.latestPendingTime));var s=e.earliestSuspendedTime;0===s?Qr(e,u):u>e.latestSuspendedTime?(e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0,Qr(e,u)):u<s&&Qr(e,u)}if(Jr(0,e),Oi.current=null,1<t.effectTag)if(null!==t.lastEffect){t.lastEffect.nextEffect=t;var f=t.firstEffect}else f=t;else f=t.firstEffect;hr=_n;var p=Dn();if(Fn(p)){if("selectionStart"in p)var d={start:p.selectionStart,end:p.selectionEnd};else e:{var h=p.ownerDocument,m=h&&h.defaultView||window,y=m.getSelection&&m.getSelection();if(y&&0!==y.rangeCount){var v=y.anchorNode,g=y.anchorOffset,b=y.focusNode,w=y.focusOffset;try{v.nodeType,b.nodeType}catch(e){d=null;break e}var x=0,k=-1,T=-1,E=0,C=0,_=p,S=null;t:for(;;){for(var P;_!==v||0!==g&&3!==_.nodeType||(k=x+g),_!==b||0!==w&&3!==_.nodeType||(T=x+w),3===_.nodeType&&(x+=_.nodeValue.length),null!==(P=_.firstChild);)S=_,_=P;for(;;){if(_===p)break t;if(S===v&&++E===g&&(k=x),S===b&&++C===w&&(T=x),null!==(P=_.nextSibling))break;S=(_=S).parentNode}_=P}d=-1===k||-1===T?null:{start:k,end:T}}else d=null}var O=d||{start:0,end:0}}else O=null;for(mr={focusedElem:p,selectionRange:O},_n=!1,Di=f;null!==Di;){var R=!1,j=void 0;try{for(;null!==Di;){if(256&Di.effectTag){var N=Di.alternate;e:{var A=Di;switch(A.tag){case 1:if(256&A.effectTag&&null!==N){var U=N.memoizedProps,M=N.memoizedState,I=A.stateNode;I.props=A.memoizedProps,I.state=A.memoizedState;var L=I.getSnapshotBeforeUpdate(U,M);I.__reactInternalSnapshotBeforeUpdate=L}break e;case 3:case 5:case 6:case 4:case 17:break e;default:a("163")}}}Di=Di.nextEffect}}catch(e){R=!0,j=e}R&&(null===Di&&a("178"),$i(Di,j),null!==Di&&(Di=Di.nextEffect))}for(Di=f;null!==Di;){var D=!1,F=void 0;try{for(;null!==Di;){var z=Di.effectTag;if(16&z&&ir(Di.stateNode,""),128&z){var B=Di.alternate;if(null!==B){var W=B.ref;null!==W&&("function"==typeof W?W(null):W.current=null)}}switch(14&z){case 2:ki(Di),Di.effectTag&=-3;break;case 6:ki(Di),Di.effectTag&=-3,Ei(Di.alternate,Di);break;case 4:Ei(Di.alternate,Di);break;case 8:var H=Di;Ti(H);var V=H;V.return=null,V.child=null,V.alternate&&(V.alternate.child=null,V.alternate.return=null)}Di=Di.nextEffect}}catch(e){D=!0,F=e}D&&(null===Di&&a("178"),$i(Di,F),null!==Di&&(Di=Di.nextEffect))}var $=mr,q=Dn(),Y=$.focusedElem,K=$.selectionRange;if(q!==Y&&Y&&Y.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(Y.ownerDocument.documentElement,Y)){if(null!==K&&Fn(Y)){var Q=K.start,G=K.end;if(void 0===G&&(G=Q),"selectionStart"in Y)Y.selectionStart=Q,Y.selectionEnd=Math.min(G,Y.value.length);else{var X=Y.ownerDocument||document,J=(X&&X.defaultView||window).getSelection(),Z=Y.textContent.length,ee=Math.min(K.start,Z),te=void 0===K.end?ee:Math.min(K.end,Z);if(!J.extend&&ee>te){var ne=te;te=ee,ee=ne}var re=Ln(Y,ee),oe=Ln(Y,te);if(re&&oe&&(1!==J.rangeCount||J.anchorNode!==re.node||J.anchorOffset!==re.offset||J.focusNode!==oe.node||J.focusOffset!==oe.offset)){var ie=X.createRange();ie.setStart(re.node,re.offset),J.removeAllRanges(),ee>te?(J.addRange(ie),J.extend(oe.node,oe.offset)):(ie.setEnd(oe.node,oe.offset),J.addRange(ie))}}}for(var ae=[],le=Y;le=le.parentNode;)1===le.nodeType&&ae.push({element:le,left:le.scrollLeft,top:le.scrollTop});"function"==typeof Y.focus&&Y.focus();for(var ue=0;ue<ae.length;ue++){var ce=ae[ue];ce.element.scrollLeft=ce.left,ce.element.scrollTop=ce.top}}for(mr=null,_n=!!hr,hr=null,e.current=t,Di=f;null!==Di;){var se=!1,fe=void 0;try{for(;null!==Di;){var pe=Di.effectTag;if(36&pe){var de=void 0,he=Di.alternate,me=Di;switch(me.tag){case 1:var ye=me.stateNode;if(4&me.effectTag)if(null===he)ye.props=me.memoizedProps,ye.state=me.memoizedState,ye.componentDidMount();else{var ve=he.memoizedProps,ge=he.memoizedState;ye.props=me.memoizedProps,ye.state=me.memoizedState,ye.componentDidUpdate(ve,ge,ye.__reactInternalSnapshotBeforeUpdate)}var be=me.updateQueue;null!==be&&(ye.props=me.memoizedProps,ye.state=me.memoizedState,co(0,be,ye));break;case 3:var we=me.updateQueue;if(null!==we){var xe=null;if(null!==me.child)switch(me.child.tag){case 5:xe=me.child.stateNode;break;case 1:xe=me.child.stateNode}co(0,we,xe)}break;case 5:var ke=me.stateNode;null===he&&4&me.effectTag&&yr(me.type,me.memoizedProps)&&ke.focus();break;case 6:case 4:case 12:break;case 13:if(32&me.effectTag){me.memoizedState={alreadyCaptured:!0,didTimeout:!1,timedOutAt:0},Qi(me,1);break}var Te=null!==he?he.memoizedState:null,Ee=me.memoizedState,Ce=null!==Te&&Te.didTimeout,_e=me;if(null===Ee?de=!1:(de=Ee.didTimeout)&&(_e=me.child,Ee.alreadyCaptured=!1,0===Ee.timedOutAt&&(Ee.timedOutAt=Ta())),de!==Ce&&null!==_e)e:for(var Se=_e,Pe=de,Oe=Se;;){if(5===Oe.tag){var Re=Oe.stateNode;if(Pe)Re.style.display="none";else{var je=Oe.stateNode,Ne=Oe.memoizedProps.style,Ae=void 0!==Ne&&null!==Ne&&Ne.hasOwnProperty("display")?Ne.display:null;je.style.display=Ae}}else if(6===Oe.tag)Oe.stateNode.nodeValue=Pe?"":Oe.memoizedProps;else if(null!==Oe.child){Oe.child.return=Oe,Oe=Oe.child;continue}if(Oe===Se)break e;for(;null===Oe.sibling;){if(null===Oe.return||Oe.return===Se)break e;Oe=Oe.return}Oe.sibling.return=Oe.return,Oe=Oe.sibling}break;case 17:break;default:a("163")}}if(128&pe){var Ue=Di.ref;if(null!==Ue){var Me=Di.stateNode;switch(Di.tag){case 5:var Ie=Me;break;default:Ie=Me}"function"==typeof Ue?Ue(Ie):Ue.current=Ie}}var Le=Di.nextEffect;Di.nextEffect=null,Di=Le}}catch(e){se=!0,fe=e}se&&(null===Di&&a("178"),$i(Di,fe),null!==Di&&(Di=Di.nextEffect))}Ni=Fi=!1,"function"==typeof Dr&&Dr(t.stateNode);var De=t.expirationTime,Fe=t.childExpirationTime,ze=0===De||0!==Fe&&Fe<De?Fe:De;0===ze&&(zi=null),e.expirationTime=ze,e.finishedWork=null}function ja(){return!!ia||!(null===ua||ua.timeRemaining()>ba)&&(ia=!0)}function Na(e){null===na&&a("246"),na.expirationTime=0,aa||(aa=!0,la=e)}function Aa(e,t){var n=ca;ca=!0;try{return e(t)}finally{(ca=n)||ta||Sa(1,null)}}function Ua(e,t){if(ca&&!sa){sa=!0;try{return e(t)}finally{sa=!1}}return e(t)}function Ma(e,t,n){if(fa)return e(t,n);ca||ta||0===oa||(Sa(oa,null),oa=0);var r=fa,o=ca;ca=fa=!0;try{return e(t,n)}finally{fa=r,(ca=o)||ta||Sa(1,null)}}function Ia(e,t,n,r,o){var i=t.current;e:if(n){n=n._reactInternalFiber;t:{2===rn(n)&&1===n.tag||a("170");var l=n;do{switch(l.tag){case 3:l=l.stateNode.context;break t;case 1:if(jr(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break t}}l=l.return}while(null!==l);a("171"),l=void 0}if(1===n.tag){var u=n.type;if(jr(u)){n=Mr(n,u,l);break e}}n=l}else n=_r;return null===t.context?t.context=n:t.pendingContext=n,t=o,(o=no(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(o.callback=t),oo(i,o),Qi(i,r),r}function La(e,t,n,r){var o=t.current;return Ia(e,t,n,o=qi(Ta(),o),r)}function Da(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Fa(e){var t=2+25*(1+((Ta()-2+500)/25|0));t<=Ri&&(t=Ri+1),this._expirationTime=Ri=t,this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function za(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function Ba(e,t,n){e={current:t=Br(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:n,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null},this._internalRoot=t.stateNode=e}function Wa(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Ha(e,t,n,r,o){Wa(n)||a("200");var i=n._reactRootContainer;if(i){if("function"==typeof o){var l=o;o=function(){var e=Da(i._internalRoot);l.call(e)}}null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Ba(e,!1,t)}(n,r),"function"==typeof o){var u=o;o=function(){var e=Da(i._internalRoot);u.call(e)}}Ua(function(){null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)})}return Da(i._internalRoot)}function Va(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return Wa(t)||a("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Ge,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}Pe=function(e,t,n){switch(t){case"input":if(Et(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=z(r);o||a("90"),$e(r),Et(r,o)}}}break;case"textarea":Jn(e,n);break;case"select":null!=(t=n.value)&&Qn(e,!!n.multiple,t,!1)}},Fa.prototype.render=function(e){this._defer||a("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new za;return Ia(e,t,null,n,r._onCommit),r},Fa.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Fa.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||a("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,o=t;o!==this;)r=o,o=o._next;null===r&&a("251"),r._next=o._next,this._next=t,e.firstBatch=this}this._defer=!1,Pa(e,n),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},Fa.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},za.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},za.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!=typeof n&&a("191",n),n()}}},Ba.prototype.render=function(e,t){var n=this._internalRoot,r=new za;return null!==(t=void 0===t?null:t)&&r.then(t),La(e,n,null,r._onCommit),r},Ba.prototype.unmount=function(e){var t=this._internalRoot,n=new za;return null!==(e=void 0===e?null:e)&&n.then(e),La(null,t,null,n._onCommit),n},Ba.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,o=new za;return null!==(n=void 0===n?null:n)&&o.then(n),La(t,r,e,o._onCommit),o},Ba.prototype.createBatch=function(){var e=new Fa(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime<=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},Ue=Aa,Me=Ma,Ie=function(){ta||0===oa||(Sa(oa,null),oa=0)};var $a={createPortal:Va,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;return void 0===t&&("function"==typeof e.render?a("188"):a("268",Object.keys(e))),e=null===(e=an(t))?null:e.stateNode},hydrate:function(e,t,n){return Ha(null,e,t,!0,n)},render:function(e,t,n){return Ha(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return(null==e||void 0===e._reactInternalFiber)&&a("38"),Ha(e,t,n,!1,r)},unmountComponentAtNode:function(e){return Wa(e)||a("40"),!!e._reactRootContainer&&(Ua(function(){Ha(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return Va.apply(void 0,arguments)},unstable_batchedUpdates:Aa,unstable_interactiveUpdates:Ma,flushSync:function(e,t){ta&&a("187");var n=ca;ca=!0;try{return Gi(e,t)}finally{ca=n,Sa(1,null)}},unstable_flushControlled:function(e){var t=ca;ca=!0;try{Gi(e)}finally{(ca=t)||ta||Sa(1,null)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[D,F,z,j.injectEventPluginsByName,g,q,function(e){_(e,$)},Ne,Ae,Rn,A]},unstable_createRoot:function(e,t){return Wa(e)||a("278"),new Ba(e,!0,null!=t&&!0===t.hydrate)}};!function(e){var t=e.findFiberByHostInstance;(function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Dr=zr(function(e){return t.onCommitFiberRoot(n,e)}),Fr=zr(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}})(o({},e,{findHostInstanceByFiber:function(e){return null===(e=an(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null}}))}({findFiberByHostInstance:L,bundleType:0,version:"16.6.0",rendererPackageName:"react-dom"});var qa={default:$a},Ya=qa&&$a||qa;e.exports=Ya.default||Ya},function(e,t,n){"use strict";e.exports=n(15)},function(e,t,n){"use strict";
/** @license React v16.6.0
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */Object.defineProperty(t,"__esModule",{value:!0});var r=null,o=3,i=-1,a=-1,l=!1,u=!1,c="object"==typeof performance&&"function"==typeof performance.now,s={timeRemaining:c?function(){if(null!==r&&r.expirationTime<a)return 0;var e=b()-performance.now();return 0<e?e:0}:function(){if(null!==r&&r.expirationTime<a)return 0;var e=b()-Date.now();return 0<e?e:0},didTimeout:!1};function f(){if(!l){var e=r.expirationTime;u?g():u=!0,v(h,e)}}function p(){var e=r,t=r.next;if(r===t)r=null;else{var n=r.previous;r=n.next=t,t.previous=n}e.next=e.previous=null,n=e.callback,t=e.expirationTime,e=e.priorityLevel;var i=o,l=a;o=e,a=t;try{var u=n(s)}finally{o=i,a=l}if("function"==typeof u)if(u={callback:u,priorityLevel:e,expirationTime:t,next:null,previous:null},null===r)r=u.next=u.previous=u;else{n=null,e=r;do{if(e.expirationTime>=t){n=e;break}e=e.next}while(e!==r);null===n?n=r:n===r&&(r=u,f()),(t=n.previous).next=n.previous=u,u.next=n,u.previous=t}}function d(){if(-1===i&&null!==r&&1===r.priorityLevel){l=!0,s.didTimeout=!0;try{do{p()}while(null!==r&&1===r.priorityLevel)}finally{l=!1,null!==r?f():u=!1}}}function h(e){l=!0,s.didTimeout=e;try{if(e)for(;null!==r;){var n=t.unstable_now();if(!(r.expirationTime<=n))break;do{p()}while(null!==r&&r.expirationTime<=n)}else if(null!==r)do{p()}while(null!==r&&0<b()-t.unstable_now())}finally{l=!1,null!==r?f():u=!1,d()}}var m,y,v,g,b,w=Date,x="function"==typeof setTimeout?setTimeout:void 0,k="function"==typeof clearTimeout?clearTimeout:void 0,T="function"==typeof requestAnimationFrame?requestAnimationFrame:void 0,E="function"==typeof cancelAnimationFrame?cancelAnimationFrame:void 0;function C(e){m=T(function(t){k(y),e(t)}),y=x(function(){E(m),e(t.unstable_now())},100)}if(c){var _=performance;t.unstable_now=function(){return _.now()}}else t.unstable_now=function(){return w.now()};if("undefined"!=typeof window&&window._schedMock){var S=window._schedMock;v=S[0],g=S[1],b=S[2]}else if("undefined"==typeof window||"function"!=typeof window.addEventListener){var P=null,O=-1,R=function(e,t){if(null!==P){var n=P;P=null;try{O=t,n(e)}finally{O=-1}}};v=function(e,t){-1!==O?setTimeout(v,0,e,t):(P=e,setTimeout(R,t,!0,t),setTimeout(R,1073741823,!1,1073741823))},g=function(){P=null},b=function(){return 1/0},t.unstable_now=function(){return-1===O?0:O}}else{"undefined"!=typeof console&&("function"!=typeof T&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof E&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));var j=null,N=!1,A=-1,U=!1,M=!1,I=0,L=33,D=33;b=function(){return I};var F="__reactIdleCallback$"+Math.random().toString(36).slice(2);window.addEventListener("message",function(e){if(e.source===window&&e.data===F){N=!1,e=j;var n=A;j=null,A=-1;var r=t.unstable_now(),o=!1;if(0>=I-r){if(!(-1!==n&&n<=r))return U||(U=!0,C(z)),j=e,void(A=n);o=!0}if(null!==e){M=!0;try{e(o)}finally{M=!1}}}},!1);var z=function(e){if(null!==j){C(z);var t=e-I+D;t<D&&L<D?(8>t&&(t=8),D=t<L?L:t):L=t,I=e+D,N||(N=!0,window.postMessage(F,"*"))}else U=!1};v=function(e,t){j=e,A=t,M||0>t?window.postMessage(F,"*"):U||(U=!0,C(z))},g=function(){j=null,N=!1,A=-1}}t.unstable_ImmediatePriority=1,t.unstable_UserBlockingPriority=2,t.unstable_NormalPriority=3,t.unstable_IdlePriority=4,t.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:break;default:e=3}var r=o,a=i;o=e,i=t.unstable_now();try{return n()}finally{o=r,i=a,d()}},t.unstable_scheduleCallback=function(e,n){var a=-1!==i?i:t.unstable_now();if("object"==typeof n&&null!==n&&"number"==typeof n.timeout)n=a+n.timeout;else switch(o){case 1:n=a+-1;break;case 2:n=a+250;break;case 4:n=a+1073741823;break;default:n=a+5e3}if(e={callback:e,priorityLevel:o,expirationTime:n,next:null,previous:null},null===r)r=e.next=e.previous=e,f();else{a=null;var l=r;do{if(l.expirationTime>n){a=l;break}l=l.next}while(l!==r);null===a?a=r:a===r&&(r=e,f()),(n=a.previous).next=a.previous=e,e.next=a,e.previous=n}return e},t.unstable_cancelCallback=function(e){var t=e.next;if(null!==t){if(t===e)r=null;else{e===r&&(r=t);var n=e.previous;n.next=t,t.previous=n}e.next=e.previous=null}},t.unstable_wrapCallback=function(e){var n=o;return function(){var r=o,a=i;o=n,i=t.unstable_now();try{return e.apply(this,arguments)}finally{o=r,i=a,d()}}},t.unstable_getCurrentPriorityLevel=function(){return o}},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=this&&this.__assign||function(){return(o=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var l=i(n(1)),u=a(n(17)),c=function(e){function t(t){var n=e.call(this,t)||this;n.defaultCurrPage=1,n.btnGroupLength=5,n.changeCur=function(e){if(n.state.curPageIndex!==e){n.setState({curPageIndex:e});var t=e+1;n.props.onChange(t),n.updateArrsVis(e),n.updateHistory(t)}},n.updateHistory=function(e){var t=o({},u.default.parse(n.props.location.search),{page:e});n.props.history.push({search:u.default.stringify(t)})},n.goTo=function(e){var t;t="next"===e?n.state.curPageIndex+1:n.state.curPageIndex-1,n.changeCur(t)},n.goToPrev=function(){return n.goTo("prev")},n.goToNext=function(){return n.goTo("next")},n.updateArrsVis=function(e){n.setState({showLeftArr:!!n.state.buttons[e-1],showRightArr:!!n.state.buttons[e+1]})},n.renderBtn=function(e,t){return l.default.createElement("button",{key:t,className:"lls-page-btn lls-button "+(n.state.curPageIndex===t?"cur":""),onClick:function(){return n.changeCur(t)}},e)},n.renderDotsBox=function(e){return l.default.createElement("div",{key:e,className:"lls-dots-box"},"...")},n.renderButtons=function(){var e=null;if(n.props.maxViewBtnLength>=n.state.buttons.length)e=n.state.buttons.map(function(e,t){return n.renderBtn(e,t)});else{var t=n.state.curPageIndex,r=n.state.buttons.length,o=r-(n.btnGroupLength+1),i=r-1,a=Math.floor(n.btnGroupLength/2);e=t<n.btnGroupLength?n.state.buttons.map(function(e,t){return t<n.btnGroupLength||t===i?n.renderBtn(e,t):t===n.btnGroupLength?n.renderDotsBox(t):void 0}):t>o?n.state.buttons.map(function(e,t){return 0===t||t>o?n.renderBtn(e,t):t===o?n.renderDotsBox(t):void 0}):n.state.buttons.map(function(e,o){return 0===o||o===i||o>=t-a&&o<=t+a?n.renderBtn(e,o):1===o||o===r-2?n.renderDotsBox(o):void 0})}return e};var r=Math.ceil(t.totalItems/t.pageSize);return r<t.defaultCurrPage?n.updateHistory(1):n.defaultCurrPage=t.defaultCurrPage,t.btnGroupLength%2==1&&(n.btnGroupLength=t.btnGroupLength),n.state={buttons:Array.from({length:r},function(e,t){return t+1}),showLeftArr:!1,showRightArr:!1,curPageIndex:n.defaultCurrPage-1},n}return r(t,e),t.prototype.componentDidMount=function(){this.updateArrsVis(this.defaultCurrPage-1)},t.prototype.render=function(){var e=this.props,t=e.marginTop,n=e.leftBtnTxt,r=e.rightBtnTxt;return this.state.buttons.length>1&&l.default.createElement("div",{className:"lls-pagination-container",style:{marginTop:t}},l.default.createElement("div",{className:"lls-button-box"},l.default.createElement("button",{className:"lls-arr-btn-left lls-button",onClick:this.goToPrev,style:{visibility:this.state.showLeftArr?"visible":"hidden"}},l.default.createElement("span",null,n)),this.renderButtons(),l.default.createElement("button",{className:"lls-arr-btn-right lls-button",onClick:this.goToNext,style:{visibility:this.state.showRightArr?"visible":"hidden"}},l.default.createElement("span",null,r))))},t.defaultProps={maxViewBtnLength:10,defaultCurrPage:1,btnGroupLength:5,pageSize:100,leftBtnTxt:"Previous page",rightBtnTxt:"Next page"},t}(l.PureComponent);t.default=c},function(e,t,n){"use strict";var r=n(18),o=n(6),i=n(19);function a(e,t){return t.encode?t.strict?r(e):encodeURIComponent(e):e}function l(e){var t=e.indexOf("?");return-1===t?"":e.slice(t+1)}function u(e,t){var n=function(e){var t;switch(e.arrayFormat){case"index":return function(e,n,r){t=/\[(\d*)\]$/.exec(e),e=e.replace(/\[\d*\]$/,""),t?(void 0===r[e]&&(r[e]={}),r[e][t[1]]=n):r[e]=n};case"bracket":return function(e,n,r){t=/(\[\])$/.exec(e),e=e.replace(/\[\]$/,""),t?void 0!==r[e]?r[e]=[].concat(r[e],n):r[e]=[n]:r[e]=n};default:return function(e,t,n){void 0!==n[e]?n[e]=[].concat(n[e],t):n[e]=t}}}(t=o({arrayFormat:"none"},t)),r=Object.create(null);return"string"!=typeof e?r:(e=e.trim().replace(/^[?#&]/,""))?(e.split("&").forEach(function(e){var t=e.replace(/\+/g," ").split("="),o=t.shift(),a=t.length>0?t.join("="):void 0;a=void 0===a?null:i(a),n(i(o),a,r)}),Object.keys(r).sort().reduce(function(e,t){var n=r[t];return Boolean(n)&&"object"==typeof n&&!Array.isArray(n)?e[t]=function e(t){return Array.isArray(t)?t.sort():"object"==typeof t?e(Object.keys(t)).sort(function(e,t){return Number(e)-Number(t)}).map(function(e){return t[e]}):t}(n):e[t]=n,e},Object.create(null))):r}t.extract=l,t.parse=u,t.stringify=function(e,t){!1===(t=o({encode:!0,strict:!0,arrayFormat:"none"},t)).sort&&(t.sort=function(){});var n=function(e){switch(e.arrayFormat){case"index":return function(t,n,r){return null===n?[a(t,e),"[",r,"]"].join(""):[a(t,e),"[",a(r,e),"]=",a(n,e)].join("")};case"bracket":return function(t,n){return null===n?a(t,e):[a(t,e),"[]=",a(n,e)].join("")};default:return function(t,n){return null===n?a(t,e):[a(t,e),"=",a(n,e)].join("")}}}(t);return e?Object.keys(e).sort(t.sort).map(function(r){var o=e[r];if(void 0===o)return"";if(null===o)return a(r,t);if(Array.isArray(o)){var i=[];return o.slice().forEach(function(e){void 0!==e&&i.push(n(r,e,i.length))}),i.join("&")}return a(r,t)+"="+a(o,t)}).filter(function(e){return e.length>0}).join("&"):""},t.parseUrl=function(e,t){return{url:e.split("?")[0]||"",query:u(l(e),t)}}},function(e,t,n){"use strict";e.exports=function(e){return encodeURIComponent(e).replace(/[!'()*]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}},function(e,t,n){"use strict";var r=new RegExp("%[a-f0-9]{2}","gi"),o=new RegExp("(%[a-f0-9]{2})+","gi");function i(e,t){try{return decodeURIComponent(e.join(""))}catch(e){}if(1===e.length)return e;t=t||1;var n=e.slice(0,t),r=e.slice(t);return Array.prototype.concat.call([],i(n),i(r))}function a(e){try{return decodeURIComponent(e)}catch(o){for(var t=e.match(r),n=1;n<t.length;n++)t=(e=i(t,n).join("")).match(r);return e}}e.exports=function(e){if("string"!=typeof e)throw new TypeError("Expected `encodedURI` to be of type `string`, got `"+typeof e+"`");try{return e=e.replace(/\+/g," "),decodeURIComponent(e)}catch(t){return function(e){for(var t={"%FE%FF":"��","%FF%FE":"��"},n=o.exec(e);n;){try{t[n[0]]=decodeURIComponent(n[0])}catch(e){var r=a(n[0]);r!==n[0]&&(t[n[0]]=r)}n=o.exec(e)}t["%C2"]="�";for(var i=Object.keys(t),l=0;l<i.length;l++){var u=i[l];e=e.replace(new RegExp(u,"g"),t[u])}return e}(e)}}},function(e,t,n){"use strict";var r=n(21);function o(){}e.exports=function(){function e(e,t,n,o,i,a){if(a!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t};return n.checkPropTypes=o,n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},function(e,t,n){var r=n(24);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(8)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(7)(!1)).push([e.i,".pages-container{width:250px;height:350px;border:1px solid #000;margin:20px auto;display:flex;justify-content:center;align-items:center}.pages-container .page{font-family:'Courier New', Courier, monospace;font-size:30px;display:none}.pages-container .page.cur{display:block}h2{text-align:center;font-family:'Courier New', Courier, monospace;margin-top:50px}\n",""])},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,r=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var o,i=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(i)?e:(o=0===i.indexOf("//")?i:0===i.indexOf("/")?n+i:r+i.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}},function(e,t,n){var r=n(27);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(8)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(7)(!1)).push([e.i,'.lls-pagination-container{display:flex;justify-content:center}.lls-pagination-container .lls-button-box{display:flex;justify-content:space-between;align-items:center}.lls-pagination-container .lls-page-btn,.lls-pagination-container .lls-button{color:#838797;cursor:pointer}.lls-pagination-container .lls-page-btn:hover,.lls-pagination-container .lls-button:hover{color:#4e546b}.lls-pagination-container .lls-button{border:0;outline:none;background:transparent;padding:0;display:block;font-size:12px;text-transform:uppercase}.lls-pagination-container .lls-arr-btn-left{margin-right:25px}.lls-pagination-container .lls-arr-btn-left span::before{content:"\\2039";font-size:16px;margin-right:5px}.lls-pagination-container .lls-arr-btn-right{margin-left:20px}.lls-pagination-container .lls-arr-btn-right span::after{content:"\\203A";font-size:16px;margin-left:5px}.lls-pagination-container .lls-page-btn{font-size:1rem;font-weight:normal;padding:2px 5px;margin-right:5px}.lls-pagination-container .lls-page-btn:hover{text-decoration:underline}.lls-pagination-container .lls-page-btn.cur{text-decoration:none;font-weight:600;color:#4e546b;cursor:default}.lls-dots-box{margin-right:5px}\n',""])},function(e,t,n){"use strict";n.r(t);var r=n(2),o=n.n(r),i=n(1),a=n.n(i),l=n(0),u=n.n(l),c=n(4),s=n.n(c),f=n(3),p=n.n(f);function d(e){return"/"===e.charAt(0)}function h(e,t){for(var n=t,r=n+1,o=e.length;r<o;n+=1,r+=1)e[n]=e[r];e.pop()}var m=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=e&&e.split("/")||[],r=t&&t.split("/")||[],o=e&&d(e),i=t&&d(t),a=o||i;if(e&&d(e)?r=n:n.length&&(r.pop(),r=r.concat(n)),!r.length)return"/";var l=void 0;if(r.length){var u=r[r.length-1];l="."===u||".."===u||""===u}else l=!1;for(var c=0,s=r.length;s>=0;s--){var f=r[s];"."===f?h(r,s):".."===f?(h(r,s),c++):c&&(h(r,s),c--)}if(!a)for(;c--;c)r.unshift("..");!a||""===r[0]||r[0]&&d(r[0])||r.unshift("");var p=r.join("/");return l&&"/"!==p.substr(-1)&&(p+="/"),p},y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};var v=function e(t,n){if(t===n)return!0;if(null==t||null==n)return!1;if(Array.isArray(t))return Array.isArray(n)&&t.length===n.length&&t.every(function(t,r){return e(t,n[r])});var r=void 0===t?"undefined":y(t);if(r!==(void 0===n?"undefined":y(n)))return!1;if("object"===r){var o=t.valueOf(),i=n.valueOf();if(o!==t||i!==n)return e(o,i);var a=Object.keys(t),l=Object.keys(n);return a.length===l.length&&a.every(function(r){return e(t[r],n[r])})}return!1},g=function(e){return"/"===e.charAt(0)?e:"/"+e},b=function(e){return"/"===e.charAt(0)?e.substr(1):e},w=function(e,t){return new RegExp("^"+t+"(\\/|\\?|#|$)","i").test(e)},x=function(e,t){return w(e,t)?e.substr(t.length):e},k=function(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e},T=function(e){var t=e.pathname,n=e.search,r=e.hash,o=t||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o},E=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},C=function(e,t,n,r){var o=void 0;"string"==typeof e?(o=function(e){var t=e||"/",n="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var i=t.indexOf("?");return-1!==i&&(n=t.substr(i),t=t.substr(0,i)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(o=E({},e)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==t&&void 0===o.state&&(o.state=t));try{o.pathname=decodeURI(o.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(o.key=n),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=m(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o},_=function(e,t){return e.pathname===t.pathname&&e.search===t.search&&e.hash===t.hash&&e.key===t.key&&v(e.state,t.state)},S=function(){var e=null,t=[];return{setPrompt:function(t){return s()(null==e,"A history supports only one prompt at a time"),e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,o){if(null!=e){var i="function"==typeof e?e(t,n):e;"string"==typeof i?"function"==typeof r?r(i,o):(s()(!1,"A history needs a getUserConfirmation function in order to use a prompt message"),o(!0)):o(!1!==i)}else o(!0)},appendListener:function(e){var n=!0,r=function(){n&&e.apply(void 0,arguments)};return t.push(r),function(){n=!1,t=t.filter(function(e){return e!==r})}},notifyListeners:function(){for(var e=arguments.length,n=Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach(function(e){return e.apply(void 0,n)})}}},P=!("undefined"==typeof window||!window.document||!window.document.createElement),O=function(e,t,n){return e.addEventListener?e.addEventListener(t,n,!1):e.attachEvent("on"+t,n)},R=function(e,t,n){return e.removeEventListener?e.removeEventListener(t,n,!1):e.detachEvent("on"+t,n)},j=function(e,t){return t(window.confirm(e))},N="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},A=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},U=function(){try{return window.history.state||{}}catch(e){return{}}},M=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};p()(P,"Browser history needs a DOM");var t=window.history,n=function(){var e=window.navigator.userAgent;return(-1===e.indexOf("Android 2.")&&-1===e.indexOf("Android 4.0")||-1===e.indexOf("Mobile Safari")||-1!==e.indexOf("Chrome")||-1!==e.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history}(),r=!(-1===window.navigator.userAgent.indexOf("Trident")),o=e.forceRefresh,i=void 0!==o&&o,a=e.getUserConfirmation,l=void 0===a?j:a,u=e.keyLength,c=void 0===u?6:u,f=e.basename?k(g(e.basename)):"",d=function(e){var t=e||{},n=t.key,r=t.state,o=window.location,i=o.pathname+o.search+o.hash;return s()(!f||w(i,f),'You are attempting to use a basename on a page whose URL path does not begin with the basename. Expected path "'+i+'" to begin with "'+f+'".'),f&&(i=x(i,f)),C(i,r,n)},h=function(){return Math.random().toString(36).substr(2,c)},m=S(),y=function(e){A(H,e),H.length=t.length,m.notifyListeners(H.location,H.action)},v=function(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||_(d(e.state))},b=function(){_(d(U()))},E=!1,_=function(e){E?(E=!1,y()):m.confirmTransitionTo(e,"POP",l,function(t){t?y({action:"POP",location:e}):M(e)})},M=function(e){var t=H.location,n=L.indexOf(t.key);-1===n&&(n=0);var r=L.indexOf(e.key);-1===r&&(r=0);var o=n-r;o&&(E=!0,F(o))},I=d(U()),L=[I.key],D=function(e){return f+T(e)},F=function(e){t.go(e)},z=0,B=function(e){1===(z+=e)?(O(window,"popstate",v),r&&O(window,"hashchange",b)):0===z&&(R(window,"popstate",v),r&&R(window,"hashchange",b))},W=!1,H={length:t.length,action:"POP",location:I,createHref:D,push:function(e,r){s()(!("object"===(void 0===e?"undefined":N(e))&&void 0!==e.state&&void 0!==r),"You should avoid providing a 2nd state argument to push when the 1st argument is a location-like object that already has state; it is ignored");var o=C(e,r,h(),H.location);m.confirmTransitionTo(o,"PUSH",l,function(e){if(e){var r=D(o),a=o.key,l=o.state;if(n)if(t.pushState({key:a,state:l},null,r),i)window.location.href=r;else{var u=L.indexOf(H.location.key),c=L.slice(0,-1===u?0:u+1);c.push(o.key),L=c,y({action:"PUSH",location:o})}else s()(void 0===l,"Browser history cannot push state in browsers that do not support HTML5 history"),window.location.href=r}})},replace:function(e,r){s()(!("object"===(void 0===e?"undefined":N(e))&&void 0!==e.state&&void 0!==r),"You should avoid providing a 2nd state argument to replace when the 1st argument is a location-like object that already has state; it is ignored");var o=C(e,r,h(),H.location);m.confirmTransitionTo(o,"REPLACE",l,function(e){if(e){var r=D(o),a=o.key,l=o.state;if(n)if(t.replaceState({key:a,state:l},null,r),i)window.location.replace(r);else{var u=L.indexOf(H.location.key);-1!==u&&(L[u]=o.key),y({action:"REPLACE",location:o})}else s()(void 0===l,"Browser history cannot replace state in browsers that do not support HTML5 history"),window.location.replace(r)}})},go:F,goBack:function(){return F(-1)},goForward:function(){return F(1)},block:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=m.setPrompt(e);return W||(B(1),W=!0),function(){return W&&(W=!1,B(-1)),t()}},listen:function(e){var t=m.appendListener(e);return B(1),function(){B(-1),t()}}};return H},I=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},L={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+b(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:b,decodePath:g},slash:{encodePath:g,decodePath:g}},D=function(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)},F=function(e){var t=window.location.href.indexOf("#");window.location.replace(window.location.href.slice(0,t>=0?t:0)+"#"+e)},z=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};p()(P,"Hash history needs a DOM");var t=window.history,n=-1===window.navigator.userAgent.indexOf("Firefox"),r=e.getUserConfirmation,o=void 0===r?j:r,i=e.hashType,a=void 0===i?"slash":i,l=e.basename?k(g(e.basename)):"",u=L[a],c=u.encodePath,f=u.decodePath,d=function(){var e=f(D());return s()(!l||w(e,l),'You are attempting to use a basename on a page whose URL path does not begin with the basename. Expected path "'+e+'" to begin with "'+l+'".'),l&&(e=x(e,l)),C(e)},h=S(),m=function(e){I($,e),$.length=t.length,h.notifyListeners($.location,$.action)},y=!1,v=null,b=function(){var e=D(),t=c(e);if(e!==t)F(t);else{var n=d(),r=$.location;if(!y&&_(r,n))return;if(v===T(n))return;v=null,E(n)}},E=function(e){y?(y=!1,m()):h.confirmTransitionTo(e,"POP",o,function(t){t?m({action:"POP",location:e}):N(e)})},N=function(e){var t=$.location,n=z.lastIndexOf(T(t));-1===n&&(n=0);var r=z.lastIndexOf(T(e));-1===r&&(r=0);var o=n-r;o&&(y=!0,B(o))},A=D(),U=c(A);A!==U&&F(U);var M=d(),z=[T(M)],B=function(e){s()(n,"Hash history go(n) causes a full page reload in this browser"),t.go(e)},W=0,H=function(e){1===(W+=e)?O(window,"hashchange",b):0===W&&R(window,"hashchange",b)},V=!1,$={length:t.length,action:"POP",location:M,createHref:function(e){return"#"+c(l+T(e))},push:function(e,t){s()(void 0===t,"Hash history cannot push state; it is ignored");var n=C(e,void 0,void 0,$.location);h.confirmTransitionTo(n,"PUSH",o,function(e){if(e){var t=T(n),r=c(l+t);if(D()!==r){v=t,function(e){window.location.hash=e}(r);var o=z.lastIndexOf(T($.location)),i=z.slice(0,-1===o?0:o+1);i.push(t),z=i,m({action:"PUSH",location:n})}else s()(!1,"Hash history cannot PUSH the same path; a new entry will not be added to the history stack"),m()}})},replace:function(e,t){s()(void 0===t,"Hash history cannot replace state; it is ignored");var n=C(e,void 0,void 0,$.location);h.confirmTransitionTo(n,"REPLACE",o,function(e){if(e){var t=T(n),r=c(l+t);D()!==r&&(v=t,F(r));var o=z.indexOf(T($.location));-1!==o&&(z[o]=t),m({action:"REPLACE",location:n})}})},go:B,goBack:function(){return B(-1)},goForward:function(){return B(1)},block:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=h.setPrompt(e);return V||(H(1),V=!0),function(){return V&&(V=!1,H(-1)),t()}},listen:function(e){var t=h.appendListener(e);return H(1),function(){H(-1),t()}}};return $},B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},W=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},H=function(e,t,n){return Math.min(Math.max(e,t),n)},V=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.getUserConfirmation,n=e.initialEntries,r=void 0===n?["/"]:n,o=e.initialIndex,i=void 0===o?0:o,a=e.keyLength,l=void 0===a?6:a,u=S(),c=function(e){W(y,e),y.length=y.entries.length,u.notifyListeners(y.location,y.action)},f=function(){return Math.random().toString(36).substr(2,l)},p=H(i,0,r.length-1),d=r.map(function(e){return C(e,void 0,"string"==typeof e?f():e.key||f())}),h=T,m=function(e){var n=H(y.index+e,0,y.entries.length-1),r=y.entries[n];u.confirmTransitionTo(r,"POP",t,function(e){e?c({action:"POP",location:r,index:n}):c()})},y={length:d.length,action:"POP",location:d[p],index:p,entries:d,createHref:h,push:function(e,n){s()(!("object"===(void 0===e?"undefined":B(e))&&void 0!==e.state&&void 0!==n),"You should avoid providing a 2nd state argument to push when the 1st argument is a location-like object that already has state; it is ignored");var r=C(e,n,f(),y.location);u.confirmTransitionTo(r,"PUSH",t,function(e){if(e){var t=y.index+1,n=y.entries.slice(0);n.length>t?n.splice(t,n.length-t,r):n.push(r),c({action:"PUSH",location:r,index:t,entries:n})}})},replace:function(e,n){s()(!("object"===(void 0===e?"undefined":B(e))&&void 0!==e.state&&void 0!==n),"You should avoid providing a 2nd state argument to replace when the 1st argument is a location-like object that already has state; it is ignored");var r=C(e,n,f(),y.location);u.confirmTransitionTo(r,"REPLACE",t,function(e){e&&(y.entries[y.index]=r,c({action:"REPLACE",location:r}))})},go:m,goBack:function(){return m(-1)},goForward:function(){return m(1)},canGo:function(e){var t=y.index+e;return t>=0&&t<y.entries.length},block:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return u.setPrompt(e)},listen:function(e){return u.appendListener(e)}};return y},$=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function q(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var Y=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return n=r=q(this,e.call.apply(e,[this].concat(i))),r.state={match:r.computeMatch(r.props.history.location.pathname)},q(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.getChildContext=function(){return{router:$({},this.context.router,{history:this.props.history,route:{location:this.props.history.location,match:this.state.match}})}},t.prototype.computeMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}},t.prototype.componentWillMount=function(){var e=this,t=this.props,n=t.children,r=t.history;p()(null==n||1===a.a.Children.count(n),"A <Router> may have only one child element"),this.unlisten=r.listen(function(){e.setState({match:e.computeMatch(r.location.pathname)})})},t.prototype.componentWillReceiveProps=function(e){o()(this.props.history===e.history,"You cannot change <Router history>")},t.prototype.componentWillUnmount=function(){this.unlisten()},t.prototype.render=function(){var e=this.props.children;return e?a.a.Children.only(e):null},t}(a.a.Component);Y.propTypes={history:u.a.object.isRequired,children:u.a.node},Y.contextTypes={router:u.a.object},Y.childContextTypes={router:u.a.object.isRequired};var K=Y,Q=K;function G(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var X=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return n=r=G(this,e.call.apply(e,[this].concat(i))),r.history=M(r.props),G(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){o()(!this.props.history,"<BrowserRouter> ignores the history prop. To use a custom history, use `import { Router }` instead of `import { BrowserRouter as Router }`.")},t.prototype.render=function(){return a.a.createElement(Q,{history:this.history,children:this.props.children})},t}(a.a.Component);X.propTypes={basename:u.a.string,forceRefresh:u.a.bool,getUserConfirmation:u.a.func,keyLength:u.a.number,children:u.a.node};var J=X;function Z(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var ee=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return n=r=Z(this,e.call.apply(e,[this].concat(i))),r.history=z(r.props),Z(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){o()(!this.props.history,"<HashRouter> ignores the history prop. To use a custom history, use `import { Router }` instead of `import { HashRouter as Router }`.")},t.prototype.render=function(){return a.a.createElement(Q,{history:this.history,children:this.props.children})},t}(a.a.Component);ee.propTypes={basename:u.a.string,getUserConfirmation:u.a.func,hashType:u.a.oneOf(["hashbang","noslash","slash"]),children:u.a.node};var te=ee,ne=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function re(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var oe=function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)},ie=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return n=r=re(this,e.call.apply(e,[this].concat(i))),r.handleClick=function(e){if(r.props.onClick&&r.props.onClick(e),!e.defaultPrevented&&0===e.button&&!r.props.target&&!oe(e)){e.preventDefault();var t=r.context.router.history,n=r.props,o=n.replace,i=n.to;o?t.replace(i):t.push(i)}},re(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.render=function(){var e=this.props,t=(e.replace,e.to),n=e.innerRef,r=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["replace","to","innerRef"]);p()(this.context.router,"You should not use <Link> outside a <Router>"),p()(void 0!==t,'You must specify the "to" property');var o=this.context.router.history,i="string"==typeof t?C(t,null,null,o.location):t,l=o.createHref(i);return a.a.createElement("a",ne({},r,{onClick:this.handleClick,href:l,ref:n}))},t}(a.a.Component);ie.propTypes={onClick:u.a.func,target:u.a.string,replace:u.a.bool,to:u.a.oneOfType([u.a.string,u.a.object]).isRequired,innerRef:u.a.oneOfType([u.a.string,u.a.func])},ie.defaultProps={replace:!1},ie.contextTypes={router:u.a.shape({history:u.a.shape({push:u.a.func.isRequired,replace:u.a.func.isRequired,createHref:u.a.func.isRequired}).isRequired}).isRequired};var ae=ie;function le(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var ue=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return n=r=le(this,e.call.apply(e,[this].concat(i))),r.history=V(r.props),le(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){o()(!this.props.history,"<MemoryRouter> ignores the history prop. To use a custom history, use `import { Router }` instead of `import { MemoryRouter as Router }`.")},t.prototype.render=function(){return a.a.createElement(K,{history:this.history,children:this.props.children})},t}(a.a.Component);ue.propTypes={initialEntries:u.a.array,initialIndex:u.a.number,getUserConfirmation:u.a.func,keyLength:u.a.number,children:u.a.node};var ce=ue,se=n(5),fe=n.n(se),pe={},de=0,he=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments[2];"string"==typeof t&&(t={path:t});var r=t,o=r.path,i=r.exact,a=void 0!==i&&i,l=r.strict,u=void 0!==l&&l,c=r.sensitive,s=void 0!==c&&c;if(null==o)return n;var f=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=pe[n]||(pe[n]={});if(r[e])return r[e];var o=[],i={re:fe()(e,o,t),keys:o};return de<1e4&&(r[e]=i,de++),i}(o,{end:a,strict:u,sensitive:s}),p=f.re,d=f.keys,h=p.exec(e);if(!h)return null;var m=h[0],y=h.slice(1),v=e===m;return a&&!v?null:{path:o,url:"/"===o&&""===m?"/":m,isExact:v,params:d.reduce(function(e,t,n){return e[t.name]=y[n],e},{})}},me=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function ye(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var ve=function(e){return 0===a.a.Children.count(e)},ge=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return n=r=ye(this,e.call.apply(e,[this].concat(i))),r.state={match:r.computeMatch(r.props,r.context.router)},ye(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.getChildContext=function(){return{router:me({},this.context.router,{route:{location:this.props.location||this.context.router.route.location,match:this.state.match}})}},t.prototype.computeMatch=function(e,t){var n=e.computedMatch,r=e.location,o=e.path,i=e.strict,a=e.exact,l=e.sensitive;if(n)return n;p()(t,"You should not use <Route> or withRouter() outside a <Router>");var u=t.route,c=(r||u.location).pathname;return he(c,{path:o,strict:i,exact:a,sensitive:l},u.match)},t.prototype.componentWillMount=function(){o()(!(this.props.component&&this.props.render),"You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored"),o()(!(this.props.component&&this.props.children&&!ve(this.props.children)),"You should not use <Route component> and <Route children> in the same route; <Route children> will be ignored"),o()(!(this.props.render&&this.props.children&&!ve(this.props.children)),"You should not use <Route render> and <Route children> in the same route; <Route children> will be ignored")},t.prototype.componentWillReceiveProps=function(e,t){o()(!(e.location&&!this.props.location),'<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.'),o()(!(!e.location&&this.props.location),'<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.'),this.setState({match:this.computeMatch(e,t.router)})},t.prototype.render=function(){var e=this.state.match,t=this.props,n=t.children,r=t.component,o=t.render,i=this.context.router,l=i.history,u=i.route,c=i.staticContext,s={match:e,location:this.props.location||u.location,history:l,staticContext:c};return r?e?a.a.createElement(r,s):null:o?e?o(s):null:"function"==typeof n?n(s):n&&!ve(n)?a.a.Children.only(n):null},t}(a.a.Component);ge.propTypes={computedMatch:u.a.object,path:u.a.string,exact:u.a.bool,strict:u.a.bool,sensitive:u.a.bool,component:u.a.func,render:u.a.func,children:u.a.oneOfType([u.a.func,u.a.node]),location:u.a.object},ge.contextTypes={router:u.a.shape({history:u.a.object.isRequired,route:u.a.object.isRequired,staticContext:u.a.object})},ge.childContextTypes={router:u.a.object.isRequired};var be=ge,we=be,xe=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},ke="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};var Te=function(e){var t=e.to,n=e.exact,r=e.strict,o=e.location,i=e.activeClassName,l=e.className,u=e.activeStyle,c=e.style,s=e.isActive,f=e["aria-current"],p=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["to","exact","strict","location","activeClassName","className","activeStyle","style","isActive","aria-current"]),d="object"===(void 0===t?"undefined":ke(t))?t.pathname:t,h=d&&d.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1");return a.a.createElement(we,{path:h,exact:n,strict:r,location:o,children:function(e){var n=e.location,r=e.match,o=!!(s?s(r,n):r);return a.a.createElement(ae,xe({to:t,className:o?[l,i].filter(function(e){return e}).join(" "):l,style:o?xe({},c,u):c,"aria-current":o&&f||null},p))}})};Te.propTypes={to:ae.propTypes.to,exact:u.a.bool,strict:u.a.bool,location:u.a.object,activeClassName:u.a.string,className:u.a.string,activeStyle:u.a.object,style:u.a.object,isActive:u.a.func,"aria-current":u.a.oneOf(["page","step","location","date","time","true"])},Te.defaultProps={activeClassName:"active","aria-current":"page"};var Ee=Te;var Ce=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.enable=function(e){this.unblock&&this.unblock(),this.unblock=this.context.router.history.block(e)},t.prototype.disable=function(){this.unblock&&(this.unblock(),this.unblock=null)},t.prototype.componentWillMount=function(){p()(this.context.router,"You should not use <Prompt> outside a <Router>"),this.props.when&&this.enable(this.props.message)},t.prototype.componentWillReceiveProps=function(e){e.when?this.props.when&&this.props.message===e.message||this.enable(e.message):this.disable()},t.prototype.componentWillUnmount=function(){this.disable()},t.prototype.render=function(){return null},t}(a.a.Component);Ce.propTypes={when:u.a.bool,message:u.a.oneOfType([u.a.func,u.a.string]).isRequired},Ce.defaultProps={when:!0},Ce.contextTypes={router:u.a.shape({history:u.a.shape({block:u.a.func.isRequired}).isRequired}).isRequired};var _e=Ce,Se={},Pe=0,Oe=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"/",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return"/"===e?e:function(e){var t=e,n=Se[t]||(Se[t]={});if(n[e])return n[e];var r=fe.a.compile(e);return Pe<1e4&&(n[e]=r,Pe++),r}(e)(t,{pretty:!0})},Re=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};var je=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.isStatic=function(){return this.context.router&&this.context.router.staticContext},t.prototype.componentWillMount=function(){p()(this.context.router,"You should not use <Redirect> outside a <Router>"),this.isStatic()&&this.perform()},t.prototype.componentDidMount=function(){this.isStatic()||this.perform()},t.prototype.componentDidUpdate=function(e){var t=C(e.to),n=C(this.props.to);_(t,n)?o()(!1,"You tried to redirect to the same route you're currently on: \""+n.pathname+n.search+'"'):this.perform()},t.prototype.computeTo=function(e){var t=e.computedMatch,n=e.to;return t?"string"==typeof n?Oe(n,t.params):Re({},n,{pathname:Oe(n.pathname,t.params)}):n},t.prototype.perform=function(){var e=this.context.router.history,t=this.props.push,n=this.computeTo(this.props);t?e.push(n):e.replace(n)},t.prototype.render=function(){return null},t}(a.a.Component);je.propTypes={computedMatch:u.a.object,push:u.a.bool,from:u.a.string,to:u.a.oneOfType([u.a.string,u.a.object]).isRequired},je.defaultProps={push:!1},je.contextTypes={router:u.a.shape({history:u.a.shape({push:u.a.func.isRequired,replace:u.a.func.isRequired}).isRequired,staticContext:u.a.object}).isRequired};var Ne=je,Ae=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function Ue(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var Me=function(e){return"/"===e.charAt(0)?e:"/"+e},Ie=function(e,t){return e?Ae({},t,{pathname:Me(e)+t.pathname}):t},Le=function(e){return"string"==typeof e?e:T(e)},De=function(e){return function(){p()(!1,"You cannot %s with <StaticRouter>",e)}},Fe=function(){},ze=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return n=r=Ue(this,e.call.apply(e,[this].concat(i))),r.createHref=function(e){return Me(r.props.basename+Le(e))},r.handlePush=function(e){var t=r.props,n=t.basename,o=t.context;o.action="PUSH",o.location=Ie(n,C(e)),o.url=Le(o.location)},r.handleReplace=function(e){var t=r.props,n=t.basename,o=t.context;o.action="REPLACE",o.location=Ie(n,C(e)),o.url=Le(o.location)},r.handleListen=function(){return Fe},r.handleBlock=function(){return Fe},Ue(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.getChildContext=function(){return{router:{staticContext:this.props.context}}},t.prototype.componentWillMount=function(){o()(!this.props.history,"<StaticRouter> ignores the history prop. To use a custom history, use `import { Router }` instead of `import { StaticRouter as Router }`.")},t.prototype.render=function(){var e=this.props,t=e.basename,n=(e.context,e.location),r=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["basename","context","location"]),o={createHref:this.createHref,action:"POP",location:function(e,t){if(!e)return t;var n=Me(e);return 0!==t.pathname.indexOf(n)?t:Ae({},t,{pathname:t.pathname.substr(n.length)})}(t,C(n)),push:this.handlePush,replace:this.handleReplace,go:De("go"),goBack:De("goBack"),goForward:De("goForward"),listen:this.handleListen,block:this.handleBlock};return a.a.createElement(K,Ae({},r,{history:o}))},t}(a.a.Component);ze.propTypes={basename:u.a.string,context:u.a.object.isRequired,location:u.a.oneOfType([u.a.string,u.a.object])},ze.defaultProps={basename:"",location:"/"},ze.childContextTypes={router:u.a.object.isRequired};var Be=ze;var We=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){p()(this.context.router,"You should not use <Switch> outside a <Router>")},t.prototype.componentWillReceiveProps=function(e){o()(!(e.location&&!this.props.location),'<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.'),o()(!(!e.location&&this.props.location),'<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.')},t.prototype.render=function(){var e=this.context.router.route,t=this.props.children,n=this.props.location||e.location,r=void 0,o=void 0;return a.a.Children.forEach(t,function(t){if(null==r&&a.a.isValidElement(t)){var i=t.props,l=i.path,u=i.exact,c=i.strict,s=i.sensitive,f=i.from,p=l||f;o=t,r=he(n.pathname,{path:p,exact:u,strict:c,sensitive:s},e.match)}}),r?a.a.cloneElement(o,{location:n,computedMatch:r}):null},t}(a.a.Component);We.contextTypes={router:u.a.shape({route:u.a.object.isRequired}).isRequired},We.propTypes={children:u.a.node,location:u.a.object};var He=We,Ve=Oe,$e=he,qe=n(9),Ye=n.n(qe),Ke=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};var Qe=function(e){var t=function(t){var n=t.wrappedComponentRef,r=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(t,["wrappedComponentRef"]);return a.a.createElement(be,{children:function(t){return a.a.createElement(e,Ke({},r,t,{ref:n}))}})};return t.displayName="withRouter("+(e.displayName||e.name)+")",t.WrappedComponent=e,t.propTypes={wrappedComponentRef:u.a.func},Ye()(t,e)};n.d(t,"BrowserRouter",function(){return J}),n.d(t,"HashRouter",function(){return te}),n.d(t,"Link",function(){return ae}),n.d(t,"MemoryRouter",function(){return ce}),n.d(t,"NavLink",function(){return Ee}),n.d(t,"Prompt",function(){return _e}),n.d(t,"Redirect",function(){return Ne}),n.d(t,"Route",function(){return we}),n.d(t,"Router",function(){return Q}),n.d(t,"StaticRouter",function(){return Be}),n.d(t,"Switch",function(){return He}),n.d(t,"generatePath",function(){return Ve}),n.d(t,"matchPath",function(){return $e}),n.d(t,"withRouter",function(){return Qe})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy93YXJuaW5nL3dhcm5pbmcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ludmFyaWFudC9icm93c2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L25vZGVfbW9kdWxlcy93YXJuaW5nL2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9ub2RlX21vZHVsZXMvcGF0aC10by1yZWdleHAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MvZGlzdC9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy5janMuanMiLCJ3ZWJwYWNrOi8vLy4vZXhhbXBsZXMvc3JjL2luZGV4LnRzeCIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL3NyYy9QYWdpbmF0aW9uLnRzeCIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcXVlcnktc3RyaW5nL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHJpY3QtdXJpLWVuY29kZS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGVjb2RlLXVyaS1jb21wb25lbnQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaXNhcnJheS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9zcmMvaW5kZXguc2Nzcz9kZmRmIiwid2VicGFjazovLy8uL2V4YW1wbGVzL3NyYy9pbmRleC5zY3NzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL3VybHMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2luYXRpb24uc2Nzcz8zMDcyIiwid2VicGFjazovLy8uL3NyYy9wYWdpbmF0aW9uLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Jlc29sdmUtcGF0aG5hbWUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3ZhbHVlLWVxdWFsL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL1BhdGhVdGlscy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGlzdG9yeS9lcy9Mb2NhdGlvblV0aWxzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL2NyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL0RPTVV0aWxzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL2NyZWF0ZUJyb3dzZXJIaXN0b3J5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL2NyZWF0ZUhhc2hIaXN0b3J5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL2NyZWF0ZU1lbW9yeUhpc3RvcnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9lcy9Sb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvUm91dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzL0Jyb3dzZXJSb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvSGFzaFJvdXRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lcy9MaW5rLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvTWVtb3J5Um91dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzL01lbW9yeVJvdXRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzL21hdGNoUGF0aC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzL1JvdXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzL1JvdXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzL05hdkxpbmsuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9lcy9Qcm9tcHQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvUHJvbXB0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvZ2VuZXJhdGVQYXRoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvUmVkaXJlY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvUmVkaXJlY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9lcy9TdGF0aWNSb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvU3RhdGljUm91dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvU3dpdGNoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzL1N3aXRjaC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lcy9nZW5lcmF0ZVBhdGguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvbWF0Y2hQYXRoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvd2l0aFJvdXRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lcy93aXRoUm91dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwid2FybmluZyIsImNvbmRpdGlvbiIsImZvcm1hdCIsImEiLCJiIiwiZSIsImYiLCJlcnJvciIsInVuZGVmaW5lZCIsIkVycm9yIiwiYXJncyIsImFyZ0luZGV4IiwicmVwbGFjZSIsImZyYW1lc1RvUG9wIiwiaXNhcnJheSIsInBhdGhUb1JlZ2V4cCIsInBhcnNlIiwiY29tcGlsZSIsInN0ciIsIm9wdGlvbnMiLCJ0b2tlbnNUb0Z1bmN0aW9uIiwidG9rZW5zVG9SZWdFeHAiLCJQQVRIX1JFR0VYUCIsIlJlZ0V4cCIsImpvaW4iLCJyZXMiLCJ0b2tlbnMiLCJpbmRleCIsInBhdGgiLCJkZWZhdWx0RGVsaW1pdGVyIiwiZGVsaW1pdGVyIiwiZXhlYyIsImVzY2FwZWQiLCJvZmZzZXQiLCJzbGljZSIsImxlbmd0aCIsIm5leHQiLCJwcmVmaXgiLCJjYXB0dXJlIiwiZ3JvdXAiLCJtb2RpZmllciIsImFzdGVyaXNrIiwicHVzaCIsInBhcnRpYWwiLCJyZXBlYXQiLCJvcHRpb25hbCIsInBhdHRlcm4iLCJlc2NhcGVHcm91cCIsImVzY2FwZVN0cmluZyIsInN1YnN0ciIsImVuY29kZVVSSUNvbXBvbmVudFByZXR0eSIsImVuY29kZVVSSSIsImNoYXJDb2RlQXQiLCJ0b1N0cmluZyIsInRvVXBwZXJDYXNlIiwiZW5jb2RlQXN0ZXJpc2siLCJtYXRjaGVzIiwiQXJyYXkiLCJvYmoiLCJvcHRzIiwiZGF0YSIsImVuY29kZSIsInByZXR0eSIsImVuY29kZVVSSUNvbXBvbmVudCIsInRva2VuIiwic2VnbWVudCIsIlR5cGVFcnJvciIsIkpTT04iLCJzdHJpbmdpZnkiLCJqIiwidGVzdCIsImF0dGFjaEtleXMiLCJyZSIsImtleXMiLCJmbGFncyIsInNlbnNpdGl2ZSIsInN0cmljdCIsImVuZCIsInJvdXRlIiwiZW5kc1dpdGhEZWxpbWl0ZXIiLCJncm91cHMiLCJzb3VyY2UiLCJtYXRjaCIsInJlZ2V4cFRvUmVnZXhwIiwicGFydHMiLCJhcnJheVRvUmVnZXhwIiwic3RyaW5nVG9SZWdleHAiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJwcm9wSXNFbnVtZXJhYmxlIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJhc3NpZ24iLCJ0ZXN0MSIsIlN0cmluZyIsImdldE93blByb3BlcnR5TmFtZXMiLCJ0ZXN0MiIsImZyb21DaGFyQ29kZSIsIm1hcCIsInRlc3QzIiwic3BsaXQiLCJmb3JFYWNoIiwibGV0dGVyIiwiZXJyIiwic2hvdWxkVXNlTmF0aXZlIiwidGFyZ2V0IiwiZnJvbSIsInN5bWJvbHMiLCJ0byIsInZhbCIsInRvT2JqZWN0IiwiYXJndW1lbnRzIiwidXNlU291cmNlTWFwIiwibGlzdCIsInRoaXMiLCJpdGVtIiwiY29udGVudCIsImNzc01hcHBpbmciLCJidG9hIiwic291cmNlTWFwcGluZyIsInNvdXJjZU1hcCIsInVuZXNjYXBlIiwidG9Db21tZW50Iiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2VSb290IiwiY29uY2F0IiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsIm1lZGlhUXVlcnkiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiaWQiLCJzdHlsZXNJbkRvbSIsImlzT2xkSUUiLCJmbiIsIm1lbW8iLCJhcHBseSIsIm1lbW9pemUiLCJ3aW5kb3ciLCJkb2N1bWVudCIsImFsbCIsImF0b2IiLCJnZXRFbGVtZW50IiwicGFyZW50Iiwic3R5bGVUYXJnZXQiLCJxdWVyeVNlbGVjdG9yIiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwic2luZ2xldG9uIiwic2luZ2xldG9uQ291bnRlciIsInN0eWxlc0luc2VydGVkQXRUb3AiLCJmaXhVcmxzIiwiYWRkU3R5bGVzVG9Eb20iLCJzdHlsZXMiLCJkb21TdHlsZSIsInJlZnMiLCJhZGRTdHlsZSIsImxpc3RUb1N0eWxlcyIsIm5ld1N0eWxlcyIsImJhc2UiLCJwYXJ0IiwiY3NzIiwibWVkaWEiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZSIsImluc2VydEludG8iLCJsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCIsImluc2VydEF0IiwibmV4dFNpYmxpbmciLCJpbnNlcnRCZWZvcmUiLCJhcHBlbmRDaGlsZCIsImZpcnN0Q2hpbGQiLCJiZWZvcmUiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJpZHgiLCJpbmRleE9mIiwic3BsaWNlIiwiY3JlYXRlU3R5bGVFbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsImF0dHJzIiwidHlwZSIsIm5vbmNlIiwibmMiLCJnZXROb25jZSIsImFkZEF0dHJzIiwiZWwiLCJzZXRBdHRyaWJ1dGUiLCJ1cGRhdGUiLCJyZW1vdmUiLCJyZXN1bHQiLCJ0cmFuc2Zvcm0iLCJkZWZhdWx0Iiwic3R5bGVJbmRleCIsImFwcGx5VG9TaW5nbGV0b25UYWciLCJVUkwiLCJjcmVhdGVPYmplY3RVUkwiLCJyZXZva2VPYmplY3RVUkwiLCJCbG9iIiwibGluayIsInJlbCIsImNyZWF0ZUxpbmtFbGVtZW50IiwiYXV0b0ZpeFVybHMiLCJjb252ZXJ0VG9BYnNvbHV0ZVVybHMiLCJibG9iIiwib2xkU3JjIiwiaHJlZiIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiY3JlYXRlVGV4dE5vZGUiLCJuZXdPYmoiLCJERUJVRyIsIm5ld0xpc3QiLCJtYXlSZW1vdmUiLCJyZXBsYWNlVGV4dCIsInRleHRTdG9yZSIsInJlcGxhY2VtZW50IiwiZmlsdGVyIiwiQm9vbGVhbiIsImNzc05vZGUiLCJjaGlsZE5vZGVzIiwiUkVBQ1RfU1RBVElDUyIsImNoaWxkQ29udGV4dFR5cGVzIiwiY29udGV4dFR5cGVzIiwiZGVmYXVsdFByb3BzIiwiZGlzcGxheU5hbWUiLCJnZXREZWZhdWx0UHJvcHMiLCJnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMiLCJtaXhpbnMiLCJwcm9wVHlwZXMiLCJLTk9XTl9TVEFUSUNTIiwiY2FsbGVyIiwiY2FsbGVlIiwiYXJpdHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJnZXRQcm90b3R5cGVPZiIsIm9iamVjdFByb3RvdHlwZSIsImhvaXN0Tm9uUmVhY3RTdGF0aWNzIiwidGFyZ2V0Q29tcG9uZW50Iiwic291cmNlQ29tcG9uZW50IiwiYmxhY2tsaXN0IiwiaW5oZXJpdGVkQ29tcG9uZW50IiwiZGVzY3JpcHRvciIsInJlYWN0XzEiLCJfX2ltcG9ydERlZmF1bHQiLCJyZWFjdF9kb21fMSIsIlBhZ2luYXRpb25fMSIsInJlYWN0X3JvdXRlcl9kb21fMSIsIkFwcCIsIl9zdXBlciIsInByb3BzIiwiX3RoaXMiLCJzdGF0ZSIsImN1clBhZ2UiLCJ0b3RhbEl0ZW1zIiwicGFnZVNpemUiLCJjaGFuZ2VQYWdlIiwicGFnZU51bWJlciIsInNldFN0YXRlIiwicmVuZGVyUGFnZSIsIl9hIiwibG9jYXRpb24iLCJoaXN0b3J5IiwiRnJhZ21lbnQiLCJjbGFzc05hbWUiLCJwYWdlQ291bnQiLCJpdG0iLCJvbkNoYW5nZSIsIm1hcmdpblRvcCIsImJ0bkdyb3VwTGVuZ3RoIiwiX19leHRlbmRzIiwicmVuZGVyIiwiQnJvd3NlclJvdXRlciIsIlJvdXRlIiwiZXhhY3QiLCJjb21wb25lbnQiLCJDb21wb25lbnQiLCJnZXRFbGVtZW50QnlJZCIsImsiLCJmb3IiLCJxIiwidSIsInYiLCJ3IiwieCIsInkiLCJ6IiwiQSIsIkIiLCJDIiwiaXRlcmF0b3IiLCJEIiwiZyIsImgiLCJhYSIsIkUiLCJpc01vdW50ZWQiLCJlbnF1ZXVlRm9yY2VVcGRhdGUiLCJlbnF1ZXVlUmVwbGFjZVN0YXRlIiwiZW5xdWV1ZVNldFN0YXRlIiwiRiIsIkciLCJjb250ZXh0IiwidXBkYXRlciIsIkgiLCJJIiwiaXNSZWFjdENvbXBvbmVudCIsImZvcmNlVXBkYXRlIiwiSiIsImNvbnN0cnVjdG9yIiwiaXNQdXJlUmVhY3RDb21wb25lbnQiLCJLIiwiY3VycmVudCIsImN1cnJlbnREaXNwYXRjaGVyIiwiTCIsIk0iLCJyZWYiLCJfX3NlbGYiLCJfX3NvdXJjZSIsIk4iLCJjaGlsZHJlbiIsIiQkdHlwZW9mIiwiX293bmVyIiwiTyIsIlAiLCJRIiwiUiIsInBvcCIsImtleVByZWZpeCIsImZ1bmMiLCJjb3VudCIsIlMiLCJWIiwiVCIsIlUiLCJpc0FycmF5IiwiZG9uZSIsIj0iLCI6IiwiZXNjYXBlIiwiY2EiLCJkYSIsIlciLCJiYSIsIlgiLCJDaGlsZHJlbiIsInRvQXJyYXkiLCJvbmx5IiwiY3JlYXRlUmVmIiwiUHVyZUNvbXBvbmVudCIsImNyZWF0ZUNvbnRleHQiLCJfY2FsY3VsYXRlQ2hhbmdlZEJpdHMiLCJfY3VycmVudFZhbHVlIiwiX2N1cnJlbnRWYWx1ZTIiLCJQcm92aWRlciIsIkNvbnN1bWVyIiwiX2NvbnRleHQiLCJmb3J3YXJkUmVmIiwibGF6eSIsIl9jdG9yIiwiX3N0YXR1cyIsIl9yZXN1bHQiLCJjb21wYXJlIiwiU3RyaWN0TW9kZSIsInVuc3RhYmxlX0NvbmN1cnJlbnRNb2RlIiwiU3VzcGVuc2UiLCJ1bnN0YWJsZV9Qcm9maWxlciIsImNsb25lRWxlbWVudCIsImNyZWF0ZUZhY3RvcnkiLCJpc1ZhbGlkRWxlbWVudCIsInZlcnNpb24iLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsIlJlYWN0Q3VycmVudE93bmVyIiwiWSIsIloiLCJjaGVja0RDRSIsIl9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyIsImNvbnNvbGUiLCJlYSIsImhhIiwiaWEiLCJqYSIsImthIiwibGEiLCJvbkVycm9yIiwibWEiLCJvYSIsInBhIiwicWEiLCJyYSIsImV4dHJhY3RFdmVudHMiLCJldmVudFR5cGVzIiwic2EiLCJwaGFzZWRSZWdpc3RyYXRpb25OYW1lcyIsInRhIiwicmVnaXN0cmF0aW9uTmFtZSIsInVhIiwidmEiLCJkZXBlbmRlbmNpZXMiLCJ3YSIsInhhIiwieWEiLCJ6YSIsImN1cnJlbnRUYXJnZXQiLCJuYSIsIkFhIiwiQmEiLCJDYSIsIkRhIiwiX2Rpc3BhdGNoTGlzdGVuZXJzIiwiX2Rpc3BhdGNoSW5zdGFuY2VzIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJpc1BlcnNpc3RlbnQiLCJyZWxlYXNlIiwiRWEiLCJGYSIsIkdhIiwiaW5qZWN0RXZlbnRQbHVnaW5PcmRlciIsImluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSIsIkhhIiwic3RhdGVOb2RlIiwiZGlzYWJsZWQiLCJJYSIsIkthIiwiTWF0aCIsInJhbmRvbSIsIkxhIiwiTWEiLCJOYSIsInRhZyIsIk9hIiwiUGEiLCJRYSIsIlJhIiwicmV0dXJuIiwiU2EiLCJkaXNwYXRjaENvbmZpZyIsIlRhIiwiX3RhcmdldEluc3QiLCJVYSIsIlZhIiwiV2EiLCJYYSIsIllhIiwidG9Mb3dlckNhc2UiLCJaYSIsImFuaW1hdGlvbmVuZCIsImFuaW1hdGlvbml0ZXJhdGlvbiIsImFuaW1hdGlvbnN0YXJ0IiwidHJhbnNpdGlvbmVuZCIsIiRhIiwiYWIiLCJiYiIsImFuaW1hdGlvbiIsInRyYW5zaXRpb24iLCJjYiIsImliIiwiamIiLCJrYiIsImxiIiwibWIiLCJuYiIsIm9iIiwicGIiLCJ0ZXh0Q29udGVudCIsInFiIiwicmIiLCJuYXRpdmVFdmVudCIsIkludGVyZmFjZSIsImlzRGVmYXVsdFByZXZlbnRlZCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJyZXR1cm5WYWx1ZSIsInRiIiwiZXZlbnRQb29sIiwidWIiLCJkZXN0cnVjdG9yIiwic2IiLCJnZXRQb29sZWQiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJldmVudFBoYXNlIiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJ0aW1lU3RhbXAiLCJEYXRlIiwibm93IiwiaXNUcnVzdGVkIiwiZXh0ZW5kIiwidmIiLCJ3YiIsInhiIiwieWIiLCJ6YiIsImRvY3VtZW50TW9kZSIsIkFiIiwiQmIiLCJDYiIsIkRiIiwiYmVmb3JlSW5wdXQiLCJidWJibGVkIiwiY2FwdHVyZWQiLCJjb21wb3NpdGlvbkVuZCIsImNvbXBvc2l0aW9uU3RhcnQiLCJjb21wb3NpdGlvblVwZGF0ZSIsIkViIiwiRmIiLCJrZXlDb2RlIiwiR2IiLCJkZXRhaWwiLCJIYiIsIk1iIiwibG9jYWxlIiwid2hpY2giLCJLYiIsImN0cmxLZXkiLCJhbHRLZXkiLCJtZXRhS2V5IiwiY2hhciIsIkxiIiwiTmIiLCJPYiIsIlBiIiwiVmIiLCJXYiIsIlhiIiwiWWIiLCJaYiIsIiRiIiwiYWMiLCJiYyIsImNjIiwiY29sb3IiLCJkYXRlIiwiZGF0ZXRpbWUiLCJkYXRldGltZS1sb2NhbCIsImVtYWlsIiwibW9udGgiLCJudW1iZXIiLCJwYXNzd29yZCIsInJhbmdlIiwic2VhcmNoIiwidGVsIiwidGV4dCIsInRpbWUiLCJ1cmwiLCJ3ZWVrIiwiZGMiLCJub2RlTmFtZSIsImVjIiwic3JjRWxlbWVudCIsImNvcnJlc3BvbmRpbmdVc2VFbGVtZW50Iiwibm9kZVR5cGUiLCJmYyIsImdjIiwiaWMiLCJfdmFsdWVUcmFja2VyIiwic2V0IiwiY29uZmlndXJhYmxlIiwiZ2V0VmFsdWUiLCJzZXRWYWx1ZSIsInN0b3BUcmFja2luZyIsImhjIiwiamMiLCJjaGVja2VkIiwia2MiLCJsYyIsIm1jIiwib2MiLCJwYyIsInFjIiwicmMiLCJzYyIsInRjIiwidWMiLCJ2YyIsIndjIiwieGMiLCJ5YyIsInpjIiwiQWMiLCJCYyIsIl9kZWJ1Z093bmVyIiwiX2RlYnVnU291cmNlIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwiQ2MiLCJEYyIsIkVjIiwiRmMiLCJhY2NlcHRzQm9vbGVhbnMiLCJhdHRyaWJ1dGVOYW1lIiwiYXR0cmlidXRlTmFtZXNwYWNlIiwibXVzdFVzZVByb3BlcnR5IiwicHJvcGVydHlOYW1lIiwiTWMiLCJOYyIsIk9jIiwiSGMiLCJpc05hTiIsIkljIiwiR2MiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGVOUyIsIlBjIiwiUWMiLCJkZWZhdWx0Q2hlY2tlZCIsImRlZmF1bHRWYWx1ZSIsIl93cmFwcGVyU3RhdGUiLCJpbml0aWFsQ2hlY2tlZCIsIlJjIiwiaW5pdGlhbFZhbHVlIiwiY29udHJvbGxlZCIsIlNjIiwiVGMiLCJVYyIsImJkIiwib3duZXJEb2N1bWVudCIsImFjdGl2ZUVsZW1lbnQiLCJ0YWJJbmRleCIsImNkIiwiY2hhbmdlIiwiZGQiLCJlZCIsImZkIiwiZ2QiLCJoZCIsImpkIiwia2QiLCJkZXRhY2hFdmVudCIsImxkIiwibWQiLCJhdHRhY2hFdmVudCIsIm5kIiwib2QiLCJwZCIsInFkIiwiX2lzSW5wdXRFdmVudFN1cHBvcnRlZCIsInJkIiwidmlldyIsInNkIiwiQWx0IiwiQ29udHJvbCIsIk1ldGEiLCJTaGlmdCIsInRkIiwiZ2V0TW9kaWZpZXJTdGF0ZSIsInVkIiwidmQiLCJ3ZCIsInhkIiwieWQiLCJ6ZCIsInNjcmVlblgiLCJzY3JlZW5ZIiwiY2xpZW50WCIsImNsaWVudFkiLCJwYWdlWCIsInBhZ2VZIiwic2hpZnRLZXkiLCJidXR0b24iLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwiQWQiLCJwb2ludGVySWQiLCJ3aWR0aCIsImhlaWdodCIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCJCZCIsIm1vdXNlRW50ZXIiLCJtb3VzZUxlYXZlIiwicG9pbnRlckVudGVyIiwicG9pbnRlckxlYXZlIiwiQ2QiLCJkZWZhdWx0VmlldyIsInBhcmVudFdpbmRvdyIsImFsdGVybmF0ZSIsIkRkIiwiRWQiLCJGZCIsIkdkIiwiZWZmZWN0VGFnIiwiSGQiLCJKZCIsImNoaWxkIiwic2libGluZyIsIklkIiwiS2QiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwiTGQiLCJjbGlwYm9hcmREYXRhIiwiTWQiLCJOZCIsImNoYXJDb2RlIiwiT2QiLCJFc2MiLCJTcGFjZWJhciIsIkxlZnQiLCJVcCIsIlJpZ2h0IiwiRG93biIsIkRlbCIsIldpbiIsIk1lbnUiLCJBcHBzIiwiU2Nyb2xsIiwiTW96UHJpbnRhYmxlS2V5IiwiUGQiLCI4IiwiOSIsIjEyIiwiMTMiLCIxNiIsIjE3IiwiMTgiLCIxOSIsIjIwIiwiMjciLCIzMiIsIjMzIiwiMzQiLCIzNSIsIjM2IiwiMzciLCIzOCIsIjM5IiwiNDAiLCI0NSIsIjQ2IiwiMTEyIiwiMTEzIiwiMTE0IiwiMTE1IiwiMTE2IiwiMTE3IiwiMTE4IiwiMTE5IiwiMTIwIiwiMTIxIiwiMTIyIiwiMTIzIiwiMTQ0IiwiMTQ1IiwiMjI0IiwiUWQiLCJSZCIsImRhdGFUcmFuc2ZlciIsIlNkIiwidG91Y2hlcyIsInRhcmdldFRvdWNoZXMiLCJjaGFuZ2VkVG91Y2hlcyIsIlRkIiwiVWQiLCJkZWx0YVgiLCJ3aGVlbERlbHRhWCIsImRlbHRhWSIsIndoZWVsRGVsdGFZIiwid2hlZWxEZWx0YSIsImRlbHRhWiIsImRlbHRhTW9kZSIsIlZkIiwiV2QiLCJYZCIsIllkIiwiaXNJbnRlcmFjdGl2ZSIsIlpkIiwiaXNJbnRlcmFjdGl2ZVRvcExldmVsRXZlbnRUeXBlIiwiJGQiLCJhZSIsImJlIiwidGFyZ2V0SW5zdCIsImFuY2VzdG9ycyIsImNvbnRhaW5lckluZm8iLCJ0b3BMZXZlbFR5cGUiLCJjZSIsImRlIiwiZWUiLCJhZGRFdmVudExpc3RlbmVyIiwiZ2UiLCJoZSIsImllIiwiamUiLCJrZSIsImxlIiwiYm9keSIsIm1lIiwibmUiLCJub2RlIiwicGUiLCJxZSIsImNvbnRlbnRFZGl0YWJsZSIsInNlIiwic2VsZWN0IiwidGUiLCJ1ZSIsIkhlIiwiSWUiLCJKZSIsInN0YXJ0Iiwic2VsZWN0aW9uU3RhcnQiLCJzZWxlY3Rpb25FbmQiLCJhbmNob3JOb2RlIiwiZ2V0U2VsZWN0aW9uIiwiYW5jaG9yT2Zmc2V0IiwiZm9jdXNOb2RlIiwiZm9jdXNPZmZzZXQiLCJLZSIsIm9uU2VsZWN0IiwiTWUiLCJMZSIsIk5lIiwic2VsZWN0ZWQiLCJkZWZhdWx0U2VsZWN0ZWQiLCJPZSIsImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIiwiUGUiLCJRZSIsIlJlIiwiU2ltcGxlRXZlbnRQbHVnaW4iLCJFbnRlckxlYXZlRXZlbnRQbHVnaW4iLCJDaGFuZ2VFdmVudFBsdWdpbiIsIlNlbGVjdEV2ZW50UGx1Z2luIiwiQmVmb3JlSW5wdXRFdmVudFBsdWdpbiIsIlNlIiwiaHRtbCIsIm1hdGhtbCIsInN2ZyIsIlRlIiwiVWUiLCJWZSIsIldlIiwiTVNBcHAiLCJleGVjVW5zYWZlTG9jYWxGdW5jdGlvbiIsIm5hbWVzcGFjZVVSSSIsImlubmVySFRNTCIsIlhlIiwibGFzdENoaWxkIiwibm9kZVZhbHVlIiwiWWUiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRBcmVhIiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3BhbiIsImdyaWRSb3dTdGFydCIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblNwYW4iLCJncmlkQ29sdW1uU3RhcnQiLCJmb250V2VpZ2h0IiwibGluZUNsYW1wIiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsIlplIiwiJGUiLCJ0cmltIiwic2V0UHJvcGVydHkiLCJjaGFyQXQiLCJzdWJzdHJpbmciLCJhZiIsIm1lbnVpdGVtIiwiYXJlYSIsImJyIiwiY29sIiwiZW1iZWQiLCJociIsImltZyIsImlucHV0Iiwia2V5Z2VuIiwibWV0YSIsInBhcmFtIiwidHJhY2siLCJ3YnIiLCJiZiIsImNmIiwiaXMiLCJkZiIsImJsdXIiLCJmb2N1cyIsImVmIiwiZmYiLCJnZiIsImhmIiwiYXV0b0ZvY3VzIiwiamYiLCJfX2h0bWwiLCJrZiIsInNldFRpbWVvdXQiLCJsZiIsImNsZWFyVGltZW91dCIsIm1mIiwibmYiLCJTZXQiLCJvZiIsInBmIiwicWYiLCJyZiIsInNmIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0IiwidGYiLCJ1ZiIsInZmIiwid2YiLCJnZXRDaGlsZENvbnRleHQiLCJ4ZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwieWYiLCJ6ZiIsIkFmIiwiQmYiLCJlbGVtZW50VHlwZSIsInBlbmRpbmdQcm9wcyIsImZpcnN0Q29udGV4dERlcGVuZGVuY3kiLCJtZW1vaXplZFN0YXRlIiwidXBkYXRlUXVldWUiLCJtZW1vaXplZFByb3BzIiwibGFzdEVmZmVjdCIsImZpcnN0RWZmZWN0IiwibmV4dEVmZmVjdCIsImNoaWxkRXhwaXJhdGlvblRpbWUiLCJleHBpcmF0aW9uVGltZSIsIkVmIiwiR2YiLCJIZiIsIklmIiwiSmYiLCJLZiIsIkxmIiwicGVuZGluZ0NoaWxkcmVuIiwiaW1wbGVtZW50YXRpb24iLCJNZiIsImRpZEVycm9yIiwiZWFybGllc3RQZW5kaW5nVGltZSIsImxhdGVzdFBlbmRpbmdUaW1lIiwiTmYiLCJPZiIsImxhdGVzdFBpbmdlZFRpbWUiLCJlYXJsaWVzdFN1c3BlbmRlZFRpbWUiLCJsYXRlc3RTdXNwZW5kZWRUaW1lIiwiUGYiLCJuZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbiIsIlFmIiwiUmYiLCJiYXNlU3RhdGUiLCJmaXJzdFVwZGF0ZSIsImxhc3RVcGRhdGUiLCJmaXJzdENhcHR1cmVkVXBkYXRlIiwibGFzdENhcHR1cmVkVXBkYXRlIiwiZmlyc3RDYXB0dXJlZEVmZmVjdCIsImxhc3RDYXB0dXJlZEVmZmVjdCIsIlNmIiwiVGYiLCJwYXlsb2FkIiwiY2FsbGJhY2siLCJVZiIsIlZmIiwiV2YiLCJYZiIsIllmIiwiWmYiLCIkZiIsImFnIiwiYmciLCJzdGFjayIsImNnIiwiZGciLCJlZyIsImZnIiwiZ2ciLCJoZyIsImlnIiwiamciLCJvYnNlcnZlZEJpdHMiLCJrZyIsImxnIiwibWciLCJuZyIsIm9nIiwiZG9jdW1lbnRFbGVtZW50IiwidGFnTmFtZSIsInBnIiwicWciLCJyZyIsInNnIiwidGciLCJ1ZyIsInlnIiwiX3JlYWN0SW50ZXJuYWxGaWJlciIsInZnIiwid2ciLCJ4ZyIsInpnIiwic2hvdWxkQ29tcG9uZW50VXBkYXRlIiwiQWciLCJjb250ZXh0VHlwZSIsInJlYWRDb250ZXh0IiwiQmciLCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJDZyIsImdldFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudERpZE1vdW50IiwiRGciLCJFZyIsIl9zdHJpbmdSZWYiLCJGZyIsIkdnIiwiTWFwIiwiZGVsZXRlIiwiSGciLCJJZyIsIkpnIiwiS2ciLCJMZyIsIk1nIiwiTmciLCJPZyIsIlBnIiwiUWciLCJSZyIsIlRnIiwiVWciLCJWZyIsIldnIiwiWGciLCJZZyIsIlpnIiwiJGciLCJVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnREaWRVcGRhdGUiLCJhaCIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsImJoIiwicGVuZGluZ0NvbnRleHQiLCJjaCIsImRoIiwiYWxyZWFkeUNhcHR1cmVkIiwiZGlkVGltZW91dCIsInRpbWVkT3V0QXQiLCJmYWxsYmFjayIsImVoIiwidGhlbiIsIlNnIiwiRmYiLCJlbGVtZW50IiwiaHlkcmF0ZSIsImhpZGRlbiIsInVuc3RhYmxlX29ic2VydmVkQml0cyIsInpoIiwiQWgiLCJCaCIsIkNoIiwiRGgiLCJFaCIsIkZoIiwiR2giLCJIaCIsImNvbXBvbmVudFdpbGxVbm1vdW50IiwiSWgiLCJKaCIsIktoIiwiX3JlYWN0Um9vdENvbnRhaW5lciIsIm9uY2xpY2siLCJMaCIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJNaCIsIk5oIiwiT2giLCJjb21wb25lbnREaWRDYXRjaCIsIlBoIiwiYWRkIiwiY29tcG9uZW50U3RhY2siLCJRaCIsIm9uQ2xpY2siLCJSaCIsIlNoIiwiVGgiLCJVaCIsIlZoIiwiV2giLCJYaCIsIlloIiwiWmgiLCIkaCIsImNyZWF0ZUVsZW1lbnROUyIsImFpIiwiYmkiLCJwZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWUiLCJjaSIsIm1heER1cmF0aW9uIiwiZGkiLCJoYXMiLCJmaW5pc2hlZFdvcmsiLCJlaSIsImZpIiwiZ2kiLCJoaSIsImlpIiwiamkiLCJraSIsImxpIiwibWkiLCJuaSIsIm9pIiwicGkiLCJxaSIsInJpIiwic2kiLCJ0aSIsInVpIiwidW5zdGFibGVfbm93IiwidmkiLCJ3aSIsInhpIiwieWkiLCJ6aSIsIkFpIiwidW5zdGFibGVfY2FuY2VsQ2FsbGJhY2siLCJ1bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrIiwiQmkiLCJ0aW1lb3V0IiwidGltZW91dEhhbmRsZSIsIkRpIiwiRWkiLCJuZXh0U2NoZWR1bGVkUm9vdCIsIkZpIiwiR2kiLCJfb25Db21wbGV0ZSIsIkhpIiwiZmlyc3RCYXRjaCIsIl9leHBpcmF0aW9uVGltZSIsIl9kZWZlciIsInJhbmdlQ291bnQiLCJmZSIsImRiIiwiSWIiLCJKYyIsIktjIiwiTmkiLCJPaSIsIkpiIiwiTGMiLCJmaCIsImZvY3VzZWRFbGVtIiwic2VsZWN0aW9uUmFuZ2UiLCJnaCIsImhoIiwidmUiLCJRYiIsIlppIiwiJGkiLCJWYyIsImFqIiwiX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUiLCJpaCIsImpoIiwid2UiLCJraCIsIldjIiwibGgiLCJSYiIsIm1oIiwiYmoiLCJlYiIsIm9lIiwiY29udGFpbnMiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsIm5oIiwieGUiLCJtaW4iLCJ5ZSIsIm9oIiwiZmIiLCJTYiIsImNqIiwiVGIiLCJKYSIsIlhjIiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwiemUiLCJnYiIsImxlZnQiLCJzY3JvbGxMZWZ0IiwidG9wIiwic2Nyb2xsVG9wIiwiQWUiLCJZYyIsInBoIiwicWgiLCJyaCIsIlpjIiwiaGIiLCJlaiIsImZqIiwidGgiLCJ1aCIsIkJlIiwiZ2oiLCJ2aCIsIlViIiwiaGoiLCJDZSIsIkRlIiwid2giLCJpaiIsImRpc3BsYXkiLCJqaiIsIiRjIiwia2oiLCJhZCIsInhoIiwiRWUiLCJsaiIsIkZlIiwiR2UiLCJ5aCIsInRpbWVSZW1haW5pbmciLCJJaSIsIkppIiwiS2kiLCJMaSIsIk1pIiwiUGkiLCJSaSIsIl9yb290IiwiX2NhbGxiYWNrcyIsIl9uZXh0IiwiX2hhc0NoaWxkcmVuIiwiX2RpZENvbXBsZXRlIiwiX2NoaWxkcmVuIiwiU2kiLCJfZGlkQ29tbWl0IiwiX29uQ29tbWl0IiwiVGkiLCJfaW50ZXJuYWxSb290IiwiVWkiLCJXaSIsImxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsImhhc0F0dHJpYnV0ZSIsIlZpIiwiWGkiLCJRaSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JtIiwiY29tbWl0IiwidW5tb3VudCIsImNyZWF0ZUJhdGNoIiwiWWkiLCJjcmVhdGVQb3J0YWwiLCJmaW5kRE9NTm9kZSIsInVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwidW5tb3VudENvbXBvbmVudEF0Tm9kZSIsInVuc3RhYmxlX2NyZWF0ZVBvcnRhbCIsInVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzIiwidW5zdGFibGVfaW50ZXJhY3RpdmVVcGRhdGVzIiwiZmx1c2hTeW5jIiwidW5zdGFibGVfZmx1c2hDb250cm9sbGVkIiwiRXZlbnRzIiwidW5zdGFibGVfY3JlYXRlUm9vdCIsImZpbmRGaWJlckJ5SG9zdEluc3RhbmNlIiwiaXNEaXNhYmxlZCIsInN1cHBvcnRzRmliZXIiLCJpbmplY3QiLCJvbkNvbW1pdEZpYmVyUm9vdCIsIm9uQ29tbWl0RmliZXJVbm1vdW50IiwiQ2YiLCJmaW5kSG9zdEluc3RhbmNlQnlGaWJlciIsImJ1bmRsZVR5cGUiLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwibWoiLCJuaiIsInBlcmZvcm1hbmNlIiwicHJldmlvdXMiLCJwcmlvcml0eUxldmVsIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJfc2NoZWRNb2NrIiwiSW5maW5pdHkiLCJwb3N0TWVzc2FnZSIsInVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5IiwidW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkiLCJ1bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSIsInVuc3RhYmxlX0lkbGVQcmlvcml0eSIsInVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSIsInVuc3RhYmxlX3dyYXBDYWxsYmFjayIsInVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsIiwiX19pbXBvcnRTdGFyIiwicXVlcnlfc3RyaW5nXzEiLCJQYWdpbmF0aW9uIiwiZGVmYXVsdEN1cnJQYWdlIiwiY2hhbmdlQ3VyIiwiY3VyUGFnZUluZGV4IiwidXBkYXRlQXJyc1ZpcyIsInVwZGF0ZUhpc3RvcnkiLCJzZWFyY2hPYmoiLCJfX2Fzc2lnbiIsInBhZ2UiLCJnb1RvIiwiZGlyZWN0aW9uIiwibmV3SW5kZXgiLCJnb1RvUHJldiIsImdvVG9OZXh0IiwiY3VySW5kZXgiLCJzaG93TGVmdEFyciIsInNob3dSaWdodEFyciIsInJlbmRlckJ0biIsImJ0biIsInJlbmRlckRvdHNCb3giLCJyZW5kZXJCdXR0b25zIiwiYnV0dG9uTm9kZXMiLCJtYXhWaWV3QnRuTGVuZ3RoIiwiY3VySW5kZXhfMSIsImJ0bnNMZW5ndGhfMSIsImxhc3RCdG5Hcm91cEluZGV4XzEiLCJsYXN0QnRuSW5kZXhfMSIsImNlbnRyYWxCdG5Hcm91cEdhcF8xIiwiZmxvb3IiLCJwYWdlcyIsImNlaWwiLCJsZWZ0QnRuVHh0IiwicmlnaHRCdG5UeHQiLCJ2aXNpYmlsaXR5Iiwic3RyaWN0VXJpRW5jb2RlIiwib2JqZWN0QXNzaWduIiwiZGVjb2RlQ29tcG9uZW50IiwiZXh0cmFjdCIsInF1ZXJ5U3RhcnQiLCJmb3JtYXR0ZXIiLCJhcnJheUZvcm1hdCIsImFjY3VtdWxhdG9yIiwicGFyc2VyRm9yQXJyYXlGb3JtYXQiLCJyZXQiLCJzaGlmdCIsInNvcnQiLCJyZWR1Y2UiLCJrZXlzU29ydGVyIiwiTnVtYmVyIiwiZW5jb2RlckZvckFycmF5Rm9ybWF0IiwidmFsMiIsInBhcnNlVXJsIiwicXVlcnkiLCJzaW5nbGVNYXRjaGVyIiwibXVsdGlNYXRjaGVyIiwiZGVjb2RlQ29tcG9uZW50cyIsImNvbXBvbmVudHMiLCJkZWNvZGVVUklDb21wb25lbnQiLCJyaWdodCIsImRlY29kZSIsImVuY29kZWRVUkkiLCJyZXBsYWNlTWFwIiwiJUZFJUZGIiwiJUZGJUZFIiwiZW50cmllcyIsImN1c3RvbURlY29kZVVSSUNvbXBvbmVudCIsIlJlYWN0UHJvcFR5cGVzU2VjcmV0IiwiZW1wdHlGdW5jdGlvbiIsInNoaW0iLCJwcm9wTmFtZSIsImNvbXBvbmVudE5hbWUiLCJwcm9wRnVsbE5hbWUiLCJzZWNyZXQiLCJnZXRTaGltIiwiaXNSZXF1aXJlZCIsIlJlYWN0UHJvcFR5cGVzIiwiYXJyYXkiLCJib29sIiwic3RyaW5nIiwic3ltYm9sIiwiYW55IiwiYXJyYXlPZiIsImluc3RhbmNlT2YiLCJvYmplY3RPZiIsIm9uZU9mIiwib25lT2ZUeXBlIiwic2hhcGUiLCJjaGVja1Byb3BUeXBlcyIsIlByb3BUeXBlcyIsImFyciIsImhtciIsImxvY2FscyIsImJhc2VVcmwiLCJwcm90b2NvbCIsImhvc3QiLCJjdXJyZW50RGlyIiwicGF0aG5hbWUiLCJmdWxsTWF0Y2giLCJvcmlnVXJsIiwibmV3VXJsIiwidW5xdW90ZWRPcmlnVXJsIiwiJDEiLCJpc0Fic29sdXRlIiwic3BsaWNlT25lIiwicmVzb2x2ZV9wYXRobmFtZSIsInRvUGFydHMiLCJmcm9tUGFydHMiLCJpc1RvQWJzIiwiaXNGcm9tQWJzIiwibXVzdEVuZEFicyIsImhhc1RyYWlsaW5nU2xhc2giLCJsYXN0IiwidXAiLCJ1bnNoaWZ0IiwiX3R5cGVvZiIsInZhbHVlX2VxdWFsIiwidmFsdWVFcXVhbCIsImV2ZXJ5IiwiYVR5cGUiLCJhVmFsdWUiLCJ2YWx1ZU9mIiwiYlZhbHVlIiwiYUtleXMiLCJiS2V5cyIsImFkZExlYWRpbmdTbGFzaCIsInN0cmlwTGVhZGluZ1NsYXNoIiwiaGFzQmFzZW5hbWUiLCJzdHJpcEJhc2VuYW1lIiwic3RyaXBUcmFpbGluZ1NsYXNoIiwiY3JlYXRlUGF0aCIsImhhc2giLCJfZXh0ZW5kcyIsIkxvY2F0aW9uVXRpbHNfY3JlYXRlTG9jYXRpb24iLCJjdXJyZW50TG9jYXRpb24iLCJoYXNoSW5kZXgiLCJzZWFyY2hJbmRleCIsInBhcnNlUGF0aCIsImRlY29kZVVSSSIsIlVSSUVycm9yIiwiTG9jYXRpb25VdGlsc19sb2NhdGlvbnNBcmVFcXVhbCIsImVzX2NyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyIiwicHJvbXB0IiwibGlzdGVuZXJzIiwic2V0UHJvbXB0IiwibmV4dFByb21wdCIsImJyb3dzZXJfZGVmYXVsdCIsImNvbmZpcm1UcmFuc2l0aW9uVG8iLCJhY3Rpb24iLCJnZXRVc2VyQ29uZmlybWF0aW9uIiwiYXBwZW5kTGlzdGVuZXIiLCJpc0FjdGl2ZSIsImxpc3RlbmVyIiwibm90aWZ5TGlzdGVuZXJzIiwiX2xlbiIsIl9rZXkiLCJjYW5Vc2VET00iLCJldmVudCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJnZXRDb25maXJtYXRpb24iLCJtZXNzYWdlIiwiY29uZmlybSIsImNyZWF0ZUJyb3dzZXJIaXN0b3J5X3R5cGVvZiIsImNyZWF0ZUJyb3dzZXJIaXN0b3J5X2V4dGVuZHMiLCJnZXRIaXN0b3J5U3RhdGUiLCJlc19jcmVhdGVCcm93c2VySGlzdG9yeSIsImludmFyaWFudF9icm93c2VyX2RlZmF1bHQiLCJnbG9iYWxIaXN0b3J5IiwiY2FuVXNlSGlzdG9yeSIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsInN1cHBvcnRzSGlzdG9yeSIsIm5lZWRzSGFzaENoYW5nZUxpc3RlbmVyIiwiX3Byb3BzJGZvcmNlUmVmcmVzaCIsImZvcmNlUmVmcmVzaCIsIl9wcm9wcyRnZXRVc2VyQ29uZmlybSIsIl9wcm9wcyRrZXlMZW5ndGgiLCJrZXlMZW5ndGgiLCJiYXNlbmFtZSIsImdldERPTUxvY2F0aW9uIiwiaGlzdG9yeVN0YXRlIiwiX3JlZiIsIl93aW5kb3ckbG9jYXRpb24iLCJjcmVhdGVLZXkiLCJ0cmFuc2l0aW9uTWFuYWdlciIsIm5leHRTdGF0ZSIsImhhbmRsZVBvcFN0YXRlIiwiaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudCIsImhhbmRsZVBvcCIsImhhbmRsZUhhc2hDaGFuZ2UiLCJmb3JjZU5leHRQb3AiLCJvayIsInJldmVydFBvcCIsImZyb21Mb2NhdGlvbiIsInRvTG9jYXRpb24iLCJ0b0luZGV4IiwiYWxsS2V5cyIsImZyb21JbmRleCIsImRlbHRhIiwiZ28iLCJpbml0aWFsTG9jYXRpb24iLCJjcmVhdGVIcmVmIiwibGlzdGVuZXJDb3VudCIsImNoZWNrRE9NTGlzdGVuZXJzIiwiaXNCbG9ja2VkIiwicHVzaFN0YXRlIiwicHJldkluZGV4IiwibmV4dEtleXMiLCJyZXBsYWNlU3RhdGUiLCJnb0JhY2siLCJnb0ZvcndhcmQiLCJibG9jayIsInVuYmxvY2siLCJsaXN0ZW4iLCJ1bmxpc3RlbiIsImNyZWF0ZUhhc2hIaXN0b3J5X2V4dGVuZHMiLCJIYXNoUGF0aENvZGVycyIsImhhc2hiYW5nIiwiZW5jb2RlUGF0aCIsImRlY29kZVBhdGgiLCJub3NsYXNoIiwic2xhc2giLCJnZXRIYXNoUGF0aCIsInJlcGxhY2VIYXNoUGF0aCIsImVzX2NyZWF0ZUhhc2hIaXN0b3J5IiwiY2FuR29XaXRob3V0UmVsb2FkIiwiX3Byb3BzJGhhc2hUeXBlIiwiaGFzaFR5cGUiLCJfSGFzaFBhdGhDb2RlcnMkaGFzaFQiLCJpZ25vcmVQYXRoIiwiZW5jb2RlZFBhdGgiLCJwcmV2TG9jYXRpb24iLCJhbGxQYXRocyIsImxhc3RJbmRleE9mIiwicHVzaEhhc2hQYXRoIiwibmV4dFBhdGhzIiwiY3JlYXRlTWVtb3J5SGlzdG9yeV90eXBlb2YiLCJjcmVhdGVNZW1vcnlIaXN0b3J5X2V4dGVuZHMiLCJjbGFtcCIsImxvd2VyQm91bmQiLCJ1cHBlckJvdW5kIiwibWF4IiwiZXNfY3JlYXRlTWVtb3J5SGlzdG9yeSIsIl9wcm9wcyRpbml0aWFsRW50cmllcyIsImluaXRpYWxFbnRyaWVzIiwiX3Byb3BzJGluaXRpYWxJbmRleCIsImluaXRpYWxJbmRleCIsImVudHJ5IiwibmV4dEluZGV4IiwibmV4dEVudHJpZXMiLCJjYW5HbyIsIlJvdXRlcl9leHRlbmRzIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJzZWxmIiwiUmVmZXJlbmNlRXJyb3IiLCJSb3V0ZXJfUm91dGVyIiwiX1JlYWN0JENvbXBvbmVudCIsIlJvdXRlciIsIl90ZW1wIiwiaW5zdGFuY2UiLCJDb25zdHJ1Y3RvciIsIl9jbGFzc0NhbGxDaGVjayIsImNvbXB1dGVNYXRjaCIsInN1YkNsYXNzIiwic3VwZXJDbGFzcyIsIndyaXRhYmxlIiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJfaW5oZXJpdHMiLCJyb3V0ZXIiLCJwYXJhbXMiLCJpc0V4YWN0IiwiX3RoaXMyIiwiX3Byb3BzIiwicmVhY3RfZGVmYXVsdCIsIm5leHRQcm9wcyIsIndhcm5pbmdfZGVmYXVsdCIsInByb3BfdHlwZXNfZGVmYXVsdCIsImVzX1JvdXRlciIsInJlYWN0X3JvdXRlcl9kb21fZXNfUm91dGVyIiwiQnJvd3NlclJvdXRlcl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiQnJvd3NlclJvdXRlcl9Ccm93c2VyUm91dGVyIiwiQnJvd3NlclJvdXRlcl9jbGFzc0NhbGxDaGVjayIsIkJyb3dzZXJSb3V0ZXJfaW5oZXJpdHMiLCJlc19Ccm93c2VyUm91dGVyIiwiSGFzaFJvdXRlcl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiSGFzaFJvdXRlcl9IYXNoUm91dGVyIiwiSGFzaFJvdXRlciIsIkhhc2hSb3V0ZXJfY2xhc3NDYWxsQ2hlY2siLCJIYXNoUm91dGVyX2luaGVyaXRzIiwiZXNfSGFzaFJvdXRlciIsIkxpbmtfZXh0ZW5kcyIsIkxpbmtfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsImlzTW9kaWZpZWRFdmVudCIsIkxpbmtfTGluayIsIkxpbmsiLCJMaW5rX2NsYXNzQ2FsbENoZWNrIiwiaGFuZGxlQ2xpY2siLCJfdGhpcyRwcm9wcyIsIkxpbmtfaW5oZXJpdHMiLCJpbm5lclJlZiIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllcyIsImVzX0xpbmsiLCJNZW1vcnlSb3V0ZXJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIk1lbW9yeVJvdXRlcl9NZW1vcnlSb3V0ZXIiLCJNZW1vcnlSb3V0ZXIiLCJNZW1vcnlSb3V0ZXJfY2xhc3NDYWxsQ2hlY2siLCJNZW1vcnlSb3V0ZXJfaW5oZXJpdHMiLCJyZWFjdF9yb3V0ZXJfZG9tX2VzX01lbW9yeVJvdXRlciIsInBhdHRlcm5DYWNoZSIsImNhY2hlQ291bnQiLCJlc19tYXRjaFBhdGgiLCJfb3B0aW9ucyIsIl9vcHRpb25zJGV4YWN0IiwiX29wdGlvbnMkc3RyaWN0IiwiX29wdGlvbnMkc2Vuc2l0aXZlIiwiX2NvbXBpbGVQYXRoIiwiY2FjaGVLZXkiLCJjYWNoZSIsImNvbXBpbGVkUGF0dGVybiIsInBhdGhfdG9fcmVnZXhwX2RlZmF1bHQiLCJtYXRjaFBhdGhfY29tcGlsZVBhdGgiLCJ2YWx1ZXMiLCJSb3V0ZV9leHRlbmRzIiwiUm91dGVfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIlJvdXRlX2lzRW1wdHlDaGlsZHJlbiIsIlJvdXRlX1JvdXRlIiwiUm91dGVfY2xhc3NDYWxsQ2hlY2siLCJSb3V0ZV9pbmhlcml0cyIsImNvbXB1dGVkTWF0Y2giLCJuZXh0Q29udGV4dCIsIl9jb250ZXh0JHJvdXRlciIsInN0YXRpY0NvbnRleHQiLCJlc19Sb3V0ZSIsInJlYWN0X3JvdXRlcl9kb21fZXNfUm91dGUiLCJOYXZMaW5rX2V4dGVuZHMiLCJOYXZMaW5rX3R5cGVvZiIsIk5hdkxpbmtfTmF2TGluayIsImFjdGl2ZUNsYXNzTmFtZSIsImFjdGl2ZVN0eWxlIiwiZ2V0SXNBY3RpdmUiLCJhcmlhQ3VycmVudCIsInJlc3QiLCJOYXZMaW5rX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIiwiZXNjYXBlZFBhdGgiLCJfcmVmMiIsImFyaWEtY3VycmVudCIsImVzX05hdkxpbmsiLCJQcm9tcHRfUHJvbXB0IiwiUHJvbXB0IiwiUHJvbXB0X2NsYXNzQ2FsbENoZWNrIiwiUHJvbXB0X3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJQcm9tcHRfaW5oZXJpdHMiLCJlbmFibGUiLCJkaXNhYmxlIiwid2hlbiIsInJlYWN0X3JvdXRlcl9kb21fZXNfUHJvbXB0IiwiZ2VuZXJhdGVQYXRoX3BhdHRlcm5DYWNoZSIsImdlbmVyYXRlUGF0aF9jYWNoZUNvdW50IiwiZXNfZ2VuZXJhdGVQYXRoIiwiY29tcGlsZWRHZW5lcmF0b3IiLCJnZW5lcmF0ZVBhdGhfY29tcGlsZUdlbmVyYXRvciIsImdlbmVyYXRvciIsIlJlZGlyZWN0X2V4dGVuZHMiLCJSZWRpcmVjdF9SZWRpcmVjdCIsIlJlZGlyZWN0IiwiUmVkaXJlY3RfY2xhc3NDYWxsQ2hlY2siLCJSZWRpcmVjdF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiUmVkaXJlY3RfaW5oZXJpdHMiLCJpc1N0YXRpYyIsInBlcmZvcm0iLCJwcmV2UHJvcHMiLCJwcmV2VG8iLCJuZXh0VG8iLCJjb21wdXRlVG8iLCJyZWFjdF9yb3V0ZXJfZG9tX2VzX1JlZGlyZWN0IiwiU3RhdGljUm91dGVyX2V4dGVuZHMiLCJTdGF0aWNSb3V0ZXJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIlN0YXRpY1JvdXRlcl9hZGRMZWFkaW5nU2xhc2giLCJhZGRCYXNlbmFtZSIsIlN0YXRpY1JvdXRlcl9jcmVhdGVVUkwiLCJTdGF0aWNSb3V0ZXJfc3RhdGljSGFuZGxlciIsIm1ldGhvZE5hbWUiLCJub29wIiwiU3RhdGljUm91dGVyX1N0YXRpY1JvdXRlciIsIlN0YXRpY1JvdXRlciIsIlN0YXRpY1JvdXRlcl9jbGFzc0NhbGxDaGVjayIsImhhbmRsZVB1c2giLCJoYW5kbGVSZXBsYWNlIiwiX3RoaXMkcHJvcHMyIiwiaGFuZGxlTGlzdGVuIiwiaGFuZGxlQmxvY2siLCJTdGF0aWNSb3V0ZXJfaW5oZXJpdHMiLCJTdGF0aWNSb3V0ZXJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiLCJTdGF0aWNSb3V0ZXJfc3RyaXBCYXNlbmFtZSIsInJlYWN0X3JvdXRlcl9kb21fZXNfU3RhdGljUm91dGVyIiwiU3dpdGNoX1N3aXRjaCIsIlN3aXRjaCIsIlN3aXRjaF9jbGFzc0NhbGxDaGVjayIsIlN3aXRjaF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiU3dpdGNoX2luaGVyaXRzIiwiX2VsZW1lbnQkcHJvcHMiLCJwYXRoUHJvcCIsInJlYWN0X3JvdXRlcl9kb21fZXNfU3dpdGNoIiwicmVhY3Rfcm91dGVyX2RvbV9lc19nZW5lcmF0ZVBhdGgiLCJyZWFjdF9yb3V0ZXJfZG9tX2VzX21hdGNoUGF0aCIsIndpdGhSb3V0ZXJfZXh0ZW5kcyIsInJlYWN0X3JvdXRlcl9kb21fZXNfd2l0aFJvdXRlciIsIndyYXBwZWRDb21wb25lbnRSZWYiLCJyZW1haW5pbmdQcm9wcyIsIndpdGhSb3V0ZXJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiLCJyb3V0ZUNvbXBvbmVudFByb3BzIiwiV3JhcHBlZENvbXBvbmVudCIsImhvaXN0X25vbl9yZWFjdF9zdGF0aWNzX2Nqc19kZWZhdWx0IiwiX193ZWJwYWNrX2V4cG9ydHNfXyJdLCJtYXBwaW5ncyI6ImFBQ0EsSUFBQUEsS0FHQSxTQUFBQyxFQUFBQyxHQUdBLEdBQUFGLEVBQUFFLEdBQ0EsT0FBQUYsRUFBQUUsR0FBQUMsUUFHQSxJQUFBQyxFQUFBSixFQUFBRSxJQUNBRyxFQUFBSCxFQUNBSSxHQUFBLEVBQ0FILFlBVUEsT0FOQUksRUFBQUwsR0FBQU0sS0FBQUosRUFBQUQsUUFBQUMsSUFBQUQsUUFBQUYsR0FHQUcsRUFBQUUsR0FBQSxFQUdBRixFQUFBRCxRQUtBRixFQUFBUSxFQUFBRixFQUdBTixFQUFBUyxFQUFBVixFQUdBQyxFQUFBVSxFQUFBLFNBQUFSLEVBQUFTLEVBQUFDLEdBQ0FaLEVBQUFhLEVBQUFYLEVBQUFTLElBQ0FHLE9BQUFDLGVBQUFiLEVBQUFTLEdBQTBDSyxZQUFBLEVBQUFDLElBQUFMLEtBSzFDWixFQUFBa0IsRUFBQSxTQUFBaEIsR0FDQSxvQkFBQWlCLGVBQUFDLGFBQ0FOLE9BQUFDLGVBQUFiLEVBQUFpQixPQUFBQyxhQUF3REMsTUFBQSxXQUV4RFAsT0FBQUMsZUFBQWIsRUFBQSxjQUFpRG1CLE9BQUEsS0FRakRyQixFQUFBc0IsRUFBQSxTQUFBRCxFQUFBRSxHQUVBLEdBREEsRUFBQUEsSUFBQUYsRUFBQXJCLEVBQUFxQixJQUNBLEVBQUFFLEVBQUEsT0FBQUYsRUFDQSxL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bGUiOiJidW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMTApO1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUkVBQ1RfRUxFTUVOVF9UWVBFID0gKHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiZcbiAgICBTeW1ib2wuZm9yICYmXG4gICAgU3ltYm9sLmZvcigncmVhY3QuZWxlbWVudCcpKSB8fFxuICAgIDB4ZWFjNztcblxuICB2YXIgaXNWYWxpZEVsZW1lbnQgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICByZXR1cm4gdHlwZW9mIG9iamVjdCA9PT0gJ29iamVjdCcgJiZcbiAgICAgIG9iamVjdCAhPT0gbnVsbCAmJlxuICAgICAgb2JqZWN0LiQkdHlwZW9mID09PSBSRUFDVF9FTEVNRU5UX1RZUEU7XG4gIH07XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShpc1ZhbGlkRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNC1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBTaW1pbGFyIHRvIGludmFyaWFudCBidXQgb25seSBsb2dzIGEgd2FybmluZyBpZiB0aGUgY29uZGl0aW9uIGlzIG5vdCBtZXQuXG4gKiBUaGlzIGNhbiBiZSB1c2VkIHRvIGxvZyBpc3N1ZXMgaW4gZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnRzIGluIGNyaXRpY2FsXG4gKiBwYXRocy4gUmVtb3ZpbmcgdGhlIGxvZ2dpbmcgY29kZSBmb3IgcHJvZHVjdGlvbiBlbnZpcm9ubWVudHMgd2lsbCBrZWVwIHRoZVxuICogc2FtZSBsb2dpYyBhbmQgZm9sbG93IHRoZSBzYW1lIGNvZGUgcGF0aHMuXG4gKi9cblxudmFyIF9fREVWX18gPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nO1xuXG52YXIgd2FybmluZyA9IGZ1bmN0aW9uKCkge307XG5cbmlmIChfX0RFVl9fKSB7XG4gIHZhciBwcmludFdhcm5pbmcgPSBmdW5jdGlvbiBwcmludFdhcm5pbmcoZm9ybWF0LCBhcmdzKSB7XG4gICAgdmFyIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgYXJncyA9IG5ldyBBcnJheShsZW4gPiAyID8gbGVuIC0gMiA6IDApO1xuICAgIGZvciAodmFyIGtleSA9IDI7IGtleSA8IGxlbjsga2V5KyspIHtcbiAgICAgIGFyZ3Nba2V5IC0gMl0gPSBhcmd1bWVudHNba2V5XTtcbiAgICB9XG4gICAgdmFyIGFyZ0luZGV4ID0gMDtcbiAgICB2YXIgbWVzc2FnZSA9ICdXYXJuaW5nOiAnICtcbiAgICAgIGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107XG4gICAgICB9KTtcbiAgICBpZiAodHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjb25zb2xlLmVycm9yKG1lc3NhZ2UpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgLy8gLS0tIFdlbGNvbWUgdG8gZGVidWdnaW5nIFJlYWN0IC0tLVxuICAgICAgLy8gVGhpcyBlcnJvciB3YXMgdGhyb3duIGFzIGEgY29udmVuaWVuY2Ugc28gdGhhdCB5b3UgY2FuIHVzZSB0aGlzIHN0YWNrXG4gICAgICAvLyB0byBmaW5kIHRoZSBjYWxsc2l0ZSB0aGF0IGNhdXNlZCB0aGlzIHdhcm5pbmcgdG8gZmlyZS5cbiAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgICB9IGNhdGNoICh4KSB7fVxuICB9XG5cbiAgd2FybmluZyA9IGZ1bmN0aW9uKGNvbmRpdGlvbiwgZm9ybWF0LCBhcmdzKSB7XG4gICAgdmFyIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgYXJncyA9IG5ldyBBcnJheShsZW4gPiAyID8gbGVuIC0gMiA6IDApO1xuICAgIGZvciAodmFyIGtleSA9IDI7IGtleSA8IGxlbjsga2V5KyspIHtcbiAgICAgIGFyZ3Nba2V5IC0gMl0gPSBhcmd1bWVudHNba2V5XTtcbiAgICB9XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgJ2B3YXJuaW5nKGNvbmRpdGlvbiwgZm9ybWF0LCAuLi5hcmdzKWAgcmVxdWlyZXMgYSB3YXJuaW5nICcgK1xuICAgICAgICAgICdtZXNzYWdlIGFyZ3VtZW50J1xuICAgICAgKTtcbiAgICB9XG4gICAgaWYgKCFjb25kaXRpb24pIHtcbiAgICAgIHByaW50V2FybmluZy5hcHBseShudWxsLCBbZm9ybWF0XS5jb25jYXQoYXJncykpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB3YXJuaW5nO1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogVXNlIGludmFyaWFudCgpIHRvIGFzc2VydCBzdGF0ZSB3aGljaCB5b3VyIHByb2dyYW0gYXNzdW1lcyB0byBiZSB0cnVlLlxuICpcbiAqIFByb3ZpZGUgc3ByaW50Zi1zdHlsZSBmb3JtYXQgKG9ubHkgJXMgaXMgc3VwcG9ydGVkKSBhbmQgYXJndW1lbnRzXG4gKiB0byBwcm92aWRlIGluZm9ybWF0aW9uIGFib3V0IHdoYXQgYnJva2UgYW5kIHdoYXQgeW91IHdlcmVcbiAqIGV4cGVjdGluZy5cbiAqXG4gKiBUaGUgaW52YXJpYW50IG1lc3NhZ2Ugd2lsbCBiZSBzdHJpcHBlZCBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGludmFyaWFudFxuICogd2lsbCByZW1haW4gdG8gZW5zdXJlIGxvZ2ljIGRvZXMgbm90IGRpZmZlciBpbiBwcm9kdWN0aW9uLlxuICovXG5cbnZhciBpbnZhcmlhbnQgPSBmdW5jdGlvbihjb25kaXRpb24sIGZvcm1hdCwgYSwgYiwgYywgZCwgZSwgZikge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhcmlhbnQgcmVxdWlyZXMgYW4gZXJyb3IgbWVzc2FnZSBhcmd1bWVudCcpO1xuICAgIH1cbiAgfVxuXG4gIGlmICghY29uZGl0aW9uKSB7XG4gICAgdmFyIGVycm9yO1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoXG4gICAgICAgICdNaW5pZmllZCBleGNlcHRpb24gb2NjdXJyZWQ7IHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCAnICtcbiAgICAgICAgJ2ZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuJ1xuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFyZ3MgPSBbYSwgYiwgYywgZCwgZSwgZl07XG4gICAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoXG4gICAgICAgIGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbigpIHsgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107IH0pXG4gICAgICApO1xuICAgICAgZXJyb3IubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB9XG5cbiAgICBlcnJvci5mcmFtZXNUb1BvcCA9IDE7IC8vIHdlIGRvbid0IGNhcmUgYWJvdXQgaW52YXJpYW50J3Mgb3duIGZyYW1lXG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gaW52YXJpYW50O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgMjAxNC0yMDE1LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFNpbWlsYXIgdG8gaW52YXJpYW50IGJ1dCBvbmx5IGxvZ3MgYSB3YXJuaW5nIGlmIHRoZSBjb25kaXRpb24gaXMgbm90IG1ldC5cbiAqIFRoaXMgY2FuIGJlIHVzZWQgdG8gbG9nIGlzc3VlcyBpbiBkZXZlbG9wbWVudCBlbnZpcm9ubWVudHMgaW4gY3JpdGljYWxcbiAqIHBhdGhzLiBSZW1vdmluZyB0aGUgbG9nZ2luZyBjb2RlIGZvciBwcm9kdWN0aW9uIGVudmlyb25tZW50cyB3aWxsIGtlZXAgdGhlXG4gKiBzYW1lIGxvZ2ljIGFuZCBmb2xsb3cgdGhlIHNhbWUgY29kZSBwYXRocy5cbiAqL1xuXG52YXIgd2FybmluZyA9IGZ1bmN0aW9uKCkge307XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHdhcm5pbmcgPSBmdW5jdGlvbihjb25kaXRpb24sIGZvcm1hdCwgYXJncykge1xuICAgIHZhciBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIGFyZ3MgPSBuZXcgQXJyYXkobGVuID4gMiA/IGxlbiAtIDIgOiAwKTtcbiAgICBmb3IgKHZhciBrZXkgPSAyOyBrZXkgPCBsZW47IGtleSsrKSB7XG4gICAgICBhcmdzW2tleSAtIDJdID0gYXJndW1lbnRzW2tleV07XG4gICAgfVxuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAnYHdhcm5pbmcoY29uZGl0aW9uLCBmb3JtYXQsIC4uLmFyZ3MpYCByZXF1aXJlcyBhIHdhcm5pbmcgJyArXG4gICAgICAgICdtZXNzYWdlIGFyZ3VtZW50J1xuICAgICAgKTtcbiAgICB9XG5cbiAgICBpZiAoZm9ybWF0Lmxlbmd0aCA8IDEwIHx8ICgvXltzXFxXXSokLykudGVzdChmb3JtYXQpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdUaGUgd2FybmluZyBmb3JtYXQgc2hvdWxkIGJlIGFibGUgdG8gdW5pcXVlbHkgaWRlbnRpZnkgdGhpcyAnICtcbiAgICAgICAgJ3dhcm5pbmcuIFBsZWFzZSwgdXNlIGEgbW9yZSBkZXNjcmlwdGl2ZSBmb3JtYXQgdGhhbjogJyArIGZvcm1hdFxuICAgICAgKTtcbiAgICB9XG5cbiAgICBpZiAoIWNvbmRpdGlvbikge1xuICAgICAgdmFyIGFyZ0luZGV4ID0gMDtcbiAgICAgIHZhciBtZXNzYWdlID0gJ1dhcm5pbmc6ICcgK1xuICAgICAgICBmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107XG4gICAgICAgIH0pO1xuICAgICAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBjb25zb2xlLmVycm9yKG1lc3NhZ2UpO1xuICAgICAgfVxuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyBlcnJvciB3YXMgdGhyb3duIGFzIGEgY29udmVuaWVuY2Ugc28gdGhhdCB5b3UgY2FuIHVzZSB0aGlzIHN0YWNrXG4gICAgICAgIC8vIHRvIGZpbmQgdGhlIGNhbGxzaXRlIHRoYXQgY2F1c2VkIHRoaXMgd2FybmluZyB0byBmaXJlLlxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG4gICAgICB9IGNhdGNoKHgpIHt9XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHdhcm5pbmc7XG4iLCJ2YXIgaXNhcnJheSA9IHJlcXVpcmUoJ2lzYXJyYXknKVxuXG4vKipcbiAqIEV4cG9zZSBgcGF0aFRvUmVnZXhwYC5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBwYXRoVG9SZWdleHBcbm1vZHVsZS5leHBvcnRzLnBhcnNlID0gcGFyc2Vcbm1vZHVsZS5leHBvcnRzLmNvbXBpbGUgPSBjb21waWxlXG5tb2R1bGUuZXhwb3J0cy50b2tlbnNUb0Z1bmN0aW9uID0gdG9rZW5zVG9GdW5jdGlvblxubW9kdWxlLmV4cG9ydHMudG9rZW5zVG9SZWdFeHAgPSB0b2tlbnNUb1JlZ0V4cFxuXG4vKipcbiAqIFRoZSBtYWluIHBhdGggbWF0Y2hpbmcgcmVnZXhwIHV0aWxpdHkuXG4gKlxuICogQHR5cGUge1JlZ0V4cH1cbiAqL1xudmFyIFBBVEhfUkVHRVhQID0gbmV3IFJlZ0V4cChbXG4gIC8vIE1hdGNoIGVzY2FwZWQgY2hhcmFjdGVycyB0aGF0IHdvdWxkIG90aGVyd2lzZSBhcHBlYXIgaW4gZnV0dXJlIG1hdGNoZXMuXG4gIC8vIFRoaXMgYWxsb3dzIHRoZSB1c2VyIHRvIGVzY2FwZSBzcGVjaWFsIGNoYXJhY3RlcnMgdGhhdCB3b24ndCB0cmFuc2Zvcm0uXG4gICcoXFxcXFxcXFwuKScsXG4gIC8vIE1hdGNoIEV4cHJlc3Mtc3R5bGUgcGFyYW1ldGVycyBhbmQgdW4tbmFtZWQgcGFyYW1ldGVycyB3aXRoIGEgcHJlZml4XG4gIC8vIGFuZCBvcHRpb25hbCBzdWZmaXhlcy4gTWF0Y2hlcyBhcHBlYXIgYXM6XG4gIC8vXG4gIC8vIFwiLzp0ZXN0KFxcXFxkKyk/XCIgPT4gW1wiL1wiLCBcInRlc3RcIiwgXCJcXGQrXCIsIHVuZGVmaW5lZCwgXCI/XCIsIHVuZGVmaW5lZF1cbiAgLy8gXCIvcm91dGUoXFxcXGQrKVwiICA9PiBbdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgXCJcXGQrXCIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkXVxuICAvLyBcIi8qXCIgICAgICAgICAgICA9PiBbXCIvXCIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgXCIqXCJdXG4gICcoW1xcXFwvLl0pPyg/Oig/OlxcXFw6KFxcXFx3KykoPzpcXFxcKCgoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpXSkrKVxcXFwpKT98XFxcXCgoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKV0pKylcXFxcKSkoWysqP10pP3woXFxcXCopKSdcbl0uam9pbignfCcpLCAnZycpXG5cbi8qKlxuICogUGFyc2UgYSBzdHJpbmcgZm9yIHRoZSByYXcgdG9rZW5zLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gIHN0clxuICogQHBhcmFtICB7T2JqZWN0PX0gb3B0aW9uc1xuICogQHJldHVybiB7IUFycmF5fVxuICovXG5mdW5jdGlvbiBwYXJzZSAoc3RyLCBvcHRpb25zKSB7XG4gIHZhciB0b2tlbnMgPSBbXVxuICB2YXIga2V5ID0gMFxuICB2YXIgaW5kZXggPSAwXG4gIHZhciBwYXRoID0gJydcbiAgdmFyIGRlZmF1bHREZWxpbWl0ZXIgPSBvcHRpb25zICYmIG9wdGlvbnMuZGVsaW1pdGVyIHx8ICcvJ1xuICB2YXIgcmVzXG5cbiAgd2hpbGUgKChyZXMgPSBQQVRIX1JFR0VYUC5leGVjKHN0cikpICE9IG51bGwpIHtcbiAgICB2YXIgbSA9IHJlc1swXVxuICAgIHZhciBlc2NhcGVkID0gcmVzWzFdXG4gICAgdmFyIG9mZnNldCA9IHJlcy5pbmRleFxuICAgIHBhdGggKz0gc3RyLnNsaWNlKGluZGV4LCBvZmZzZXQpXG4gICAgaW5kZXggPSBvZmZzZXQgKyBtLmxlbmd0aFxuXG4gICAgLy8gSWdub3JlIGFscmVhZHkgZXNjYXBlZCBzZXF1ZW5jZXMuXG4gICAgaWYgKGVzY2FwZWQpIHtcbiAgICAgIHBhdGggKz0gZXNjYXBlZFsxXVxuICAgICAgY29udGludWVcbiAgICB9XG5cbiAgICB2YXIgbmV4dCA9IHN0cltpbmRleF1cbiAgICB2YXIgcHJlZml4ID0gcmVzWzJdXG4gICAgdmFyIG5hbWUgPSByZXNbM11cbiAgICB2YXIgY2FwdHVyZSA9IHJlc1s0XVxuICAgIHZhciBncm91cCA9IHJlc1s1XVxuICAgIHZhciBtb2RpZmllciA9IHJlc1s2XVxuICAgIHZhciBhc3RlcmlzayA9IHJlc1s3XVxuXG4gICAgLy8gUHVzaCB0aGUgY3VycmVudCBwYXRoIG9udG8gdGhlIHRva2Vucy5cbiAgICBpZiAocGF0aCkge1xuICAgICAgdG9rZW5zLnB1c2gocGF0aClcbiAgICAgIHBhdGggPSAnJ1xuICAgIH1cblxuICAgIHZhciBwYXJ0aWFsID0gcHJlZml4ICE9IG51bGwgJiYgbmV4dCAhPSBudWxsICYmIG5leHQgIT09IHByZWZpeFxuICAgIHZhciByZXBlYXQgPSBtb2RpZmllciA9PT0gJysnIHx8IG1vZGlmaWVyID09PSAnKidcbiAgICB2YXIgb3B0aW9uYWwgPSBtb2RpZmllciA9PT0gJz8nIHx8IG1vZGlmaWVyID09PSAnKidcbiAgICB2YXIgZGVsaW1pdGVyID0gcmVzWzJdIHx8IGRlZmF1bHREZWxpbWl0ZXJcbiAgICB2YXIgcGF0dGVybiA9IGNhcHR1cmUgfHwgZ3JvdXBcblxuICAgIHRva2Vucy5wdXNoKHtcbiAgICAgIG5hbWU6IG5hbWUgfHwga2V5KyssXG4gICAgICBwcmVmaXg6IHByZWZpeCB8fCAnJyxcbiAgICAgIGRlbGltaXRlcjogZGVsaW1pdGVyLFxuICAgICAgb3B0aW9uYWw6IG9wdGlvbmFsLFxuICAgICAgcmVwZWF0OiByZXBlYXQsXG4gICAgICBwYXJ0aWFsOiBwYXJ0aWFsLFxuICAgICAgYXN0ZXJpc2s6ICEhYXN0ZXJpc2ssXG4gICAgICBwYXR0ZXJuOiBwYXR0ZXJuID8gZXNjYXBlR3JvdXAocGF0dGVybikgOiAoYXN0ZXJpc2sgPyAnLionIDogJ1teJyArIGVzY2FwZVN0cmluZyhkZWxpbWl0ZXIpICsgJ10rPycpXG4gICAgfSlcbiAgfVxuXG4gIC8vIE1hdGNoIGFueSBjaGFyYWN0ZXJzIHN0aWxsIHJlbWFpbmluZy5cbiAgaWYgKGluZGV4IDwgc3RyLmxlbmd0aCkge1xuICAgIHBhdGggKz0gc3RyLnN1YnN0cihpbmRleClcbiAgfVxuXG4gIC8vIElmIHRoZSBwYXRoIGV4aXN0cywgcHVzaCBpdCBvbnRvIHRoZSBlbmQuXG4gIGlmIChwYXRoKSB7XG4gICAgdG9rZW5zLnB1c2gocGF0aClcbiAgfVxuXG4gIHJldHVybiB0b2tlbnNcbn1cblxuLyoqXG4gKiBDb21waWxlIGEgc3RyaW5nIHRvIGEgdGVtcGxhdGUgZnVuY3Rpb24gZm9yIHRoZSBwYXRoLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gICAgICAgICAgICAgc3RyXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFmdW5jdGlvbihPYmplY3Q9LCBPYmplY3Q9KX1cbiAqL1xuZnVuY3Rpb24gY29tcGlsZSAoc3RyLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b2tlbnNUb0Z1bmN0aW9uKHBhcnNlKHN0ciwgb3B0aW9ucykpXG59XG5cbi8qKlxuICogUHJldHRpZXIgZW5jb2Rpbmcgb2YgVVJJIHBhdGggc2VnbWVudHMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlbmNvZGVVUklDb21wb25lbnRQcmV0dHkgKHN0cikge1xuICByZXR1cm4gZW5jb2RlVVJJKHN0cikucmVwbGFjZSgvW1xcLz8jXS9nLCBmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiAnJScgKyBjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKClcbiAgfSlcbn1cblxuLyoqXG4gKiBFbmNvZGUgdGhlIGFzdGVyaXNrIHBhcmFtZXRlci4gU2ltaWxhciB0byBgcHJldHR5YCwgYnV0IGFsbG93cyBzbGFzaGVzLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ31cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZW5jb2RlQXN0ZXJpc2sgKHN0cikge1xuICByZXR1cm4gZW5jb2RlVVJJKHN0cikucmVwbGFjZSgvWz8jXS9nLCBmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiAnJScgKyBjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKClcbiAgfSlcbn1cblxuLyoqXG4gKiBFeHBvc2UgYSBtZXRob2QgZm9yIHRyYW5zZm9ybWluZyB0b2tlbnMgaW50byB0aGUgcGF0aCBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gdG9rZW5zVG9GdW5jdGlvbiAodG9rZW5zKSB7XG4gIC8vIENvbXBpbGUgYWxsIHRoZSB0b2tlbnMgaW50byByZWdleHBzLlxuICB2YXIgbWF0Y2hlcyA9IG5ldyBBcnJheSh0b2tlbnMubGVuZ3RoKVxuXG4gIC8vIENvbXBpbGUgYWxsIHRoZSBwYXR0ZXJucyBiZWZvcmUgY29tcGlsYXRpb24uXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHR5cGVvZiB0b2tlbnNbaV0gPT09ICdvYmplY3QnKSB7XG4gICAgICBtYXRjaGVzW2ldID0gbmV3IFJlZ0V4cCgnXig/OicgKyB0b2tlbnNbaV0ucGF0dGVybiArICcpJCcpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChvYmosIG9wdHMpIHtcbiAgICB2YXIgcGF0aCA9ICcnXG4gICAgdmFyIGRhdGEgPSBvYmogfHwge31cbiAgICB2YXIgb3B0aW9ucyA9IG9wdHMgfHwge31cbiAgICB2YXIgZW5jb2RlID0gb3B0aW9ucy5wcmV0dHkgPyBlbmNvZGVVUklDb21wb25lbnRQcmV0dHkgOiBlbmNvZGVVUklDb21wb25lbnRcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV1cblxuICAgICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcGF0aCArPSB0b2tlblxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHZhciB2YWx1ZSA9IGRhdGFbdG9rZW4ubmFtZV1cbiAgICAgIHZhciBzZWdtZW50XG5cbiAgICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICAgIC8vIFByZXBlbmQgcGFydGlhbCBzZWdtZW50IHByZWZpeGVzLlxuICAgICAgICAgIGlmICh0b2tlbi5wYXJ0aWFsKSB7XG4gICAgICAgICAgICBwYXRoICs9IHRva2VuLnByZWZpeFxuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBiZSBkZWZpbmVkJylcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoaXNhcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgaWYgKCF0b2tlbi5yZXBlYXQpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG5vdCByZXBlYXQsIGJ1dCByZWNlaXZlZCBgJyArIEpTT04uc3RyaW5naWZ5KHZhbHVlKSArICdgJylcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbm90IGJlIGVtcHR5JylcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHZhbHVlLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgc2VnbWVudCA9IGVuY29kZSh2YWx1ZVtqXSlcblxuICAgICAgICAgIGlmICghbWF0Y2hlc1tpXS50ZXN0KHNlZ21lbnQpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBhbGwgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeShzZWdtZW50KSArICdgJylcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBwYXRoICs9IChqID09PSAwID8gdG9rZW4ucHJlZml4IDogdG9rZW4uZGVsaW1pdGVyKSArIHNlZ21lbnRcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHNlZ21lbnQgPSB0b2tlbi5hc3RlcmlzayA/IGVuY29kZUFzdGVyaXNrKHZhbHVlKSA6IGVuY29kZSh2YWx1ZSlcblxuICAgICAgaWYgKCFtYXRjaGVzW2ldLnRlc3Qoc2VnbWVudCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgXCInICsgc2VnbWVudCArICdcIicpXG4gICAgICB9XG5cbiAgICAgIHBhdGggKz0gdG9rZW4ucHJlZml4ICsgc2VnbWVudFxuICAgIH1cblxuICAgIHJldHVybiBwYXRoXG4gIH1cbn1cblxuLyoqXG4gKiBFc2NhcGUgYSByZWd1bGFyIGV4cHJlc3Npb24gc3RyaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gc3RyXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVzY2FwZVN0cmluZyAoc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvKFsuKyo/PV4hOiR7fSgpW1xcXXxcXC9cXFxcXSkvZywgJ1xcXFwkMScpXG59XG5cbi8qKlxuICogRXNjYXBlIHRoZSBjYXB0dXJpbmcgZ3JvdXAgYnkgZXNjYXBpbmcgc3BlY2lhbCBjaGFyYWN0ZXJzIGFuZCBtZWFuaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gZ3JvdXBcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZXNjYXBlR3JvdXAgKGdyb3VwKSB7XG4gIHJldHVybiBncm91cC5yZXBsYWNlKC8oWz0hOiRcXC8oKV0pL2csICdcXFxcJDEnKVxufVxuXG4vKipcbiAqIEF0dGFjaCB0aGUga2V5cyBhcyBhIHByb3BlcnR5IG9mIHRoZSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IVJlZ0V4cH0gcmVcbiAqIEBwYXJhbSAge0FycmF5fSAgIGtleXNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIGF0dGFjaEtleXMgKHJlLCBrZXlzKSB7XG4gIHJlLmtleXMgPSBrZXlzXG4gIHJldHVybiByZVxufVxuXG4vKipcbiAqIEdldCB0aGUgZmxhZ3MgZm9yIGEgcmVnZXhwIGZyb20gdGhlIG9wdGlvbnMuXG4gKlxuICogQHBhcmFtICB7T2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGZsYWdzIChvcHRpb25zKSB7XG4gIHJldHVybiBvcHRpb25zLnNlbnNpdGl2ZSA/ICcnIDogJ2knXG59XG5cbi8qKlxuICogUHVsbCBvdXQga2V5cyBmcm9tIGEgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFSZWdFeHB9IHBhdGhcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHJlZ2V4cFRvUmVnZXhwIChwYXRoLCBrZXlzKSB7XG4gIC8vIFVzZSBhIG5lZ2F0aXZlIGxvb2thaGVhZCB0byBtYXRjaCBvbmx5IGNhcHR1cmluZyBncm91cHMuXG4gIHZhciBncm91cHMgPSBwYXRoLnNvdXJjZS5tYXRjaCgvXFwoKD8hXFw/KS9nKVxuXG4gIGlmIChncm91cHMpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGdyb3Vwcy5sZW5ndGg7IGkrKykge1xuICAgICAga2V5cy5wdXNoKHtcbiAgICAgICAgbmFtZTogaSxcbiAgICAgICAgcHJlZml4OiBudWxsLFxuICAgICAgICBkZWxpbWl0ZXI6IG51bGwsXG4gICAgICAgIG9wdGlvbmFsOiBmYWxzZSxcbiAgICAgICAgcmVwZWF0OiBmYWxzZSxcbiAgICAgICAgcGFydGlhbDogZmFsc2UsXG4gICAgICAgIGFzdGVyaXNrOiBmYWxzZSxcbiAgICAgICAgcGF0dGVybjogbnVsbFxuICAgICAgfSlcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYXR0YWNoS2V5cyhwYXRoLCBrZXlzKVxufVxuXG4vKipcbiAqIFRyYW5zZm9ybSBhbiBhcnJheSBpbnRvIGEgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFBcnJheX0gIHBhdGhcbiAqIEBwYXJhbSAge0FycmF5fSAgIGtleXNcbiAqIEBwYXJhbSAgeyFPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIGFycmF5VG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgdmFyIHBhcnRzID0gW11cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHBhdGgubGVuZ3RoOyBpKyspIHtcbiAgICBwYXJ0cy5wdXNoKHBhdGhUb1JlZ2V4cChwYXRoW2ldLCBrZXlzLCBvcHRpb25zKS5zb3VyY2UpXG4gIH1cblxuICB2YXIgcmVnZXhwID0gbmV3IFJlZ0V4cCgnKD86JyArIHBhcnRzLmpvaW4oJ3wnKSArICcpJywgZmxhZ3Mob3B0aW9ucykpXG5cbiAgcmV0dXJuIGF0dGFjaEtleXMocmVnZXhwLCBrZXlzKVxufVxuXG4vKipcbiAqIENyZWF0ZSBhIHBhdGggcmVnZXhwIGZyb20gc3RyaW5nIGlucHV0LlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gIHBhdGhcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcbiAqIEBwYXJhbSAgeyFPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHN0cmluZ1RvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b2tlbnNUb1JlZ0V4cChwYXJzZShwYXRoLCBvcHRpb25zKSwga2V5cywgb3B0aW9ucylcbn1cblxuLyoqXG4gKiBFeHBvc2UgYSBmdW5jdGlvbiBmb3IgdGFraW5nIHRva2VucyBhbmQgcmV0dXJuaW5nIGEgUmVnRXhwLlxuICpcbiAqIEBwYXJhbSAgeyFBcnJheX0gICAgICAgICAgdG9rZW5zXG4gKiBAcGFyYW0gIHsoQXJyYXl8T2JqZWN0KT19IGtleXNcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gdG9rZW5zVG9SZWdFeHAgKHRva2Vucywga2V5cywgb3B0aW9ucykge1xuICBpZiAoIWlzYXJyYXkoa2V5cykpIHtcbiAgICBvcHRpb25zID0gLyoqIEB0eXBlIHshT2JqZWN0fSAqLyAoa2V5cyB8fCBvcHRpb25zKVxuICAgIGtleXMgPSBbXVxuICB9XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge31cblxuICB2YXIgc3RyaWN0ID0gb3B0aW9ucy5zdHJpY3RcbiAgdmFyIGVuZCA9IG9wdGlvbnMuZW5kICE9PSBmYWxzZVxuICB2YXIgcm91dGUgPSAnJ1xuXG4gIC8vIEl0ZXJhdGUgb3ZlciB0aGUgdG9rZW5zIGFuZCBjcmVhdGUgb3VyIHJlZ2V4cCBzdHJpbmcuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHRva2VuID0gdG9rZW5zW2ldXG5cbiAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xuICAgICAgcm91dGUgKz0gZXNjYXBlU3RyaW5nKHRva2VuKVxuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgcHJlZml4ID0gZXNjYXBlU3RyaW5nKHRva2VuLnByZWZpeClcbiAgICAgIHZhciBjYXB0dXJlID0gJyg/OicgKyB0b2tlbi5wYXR0ZXJuICsgJyknXG5cbiAgICAgIGtleXMucHVzaCh0b2tlbilcblxuICAgICAgaWYgKHRva2VuLnJlcGVhdCkge1xuICAgICAgICBjYXB0dXJlICs9ICcoPzonICsgcHJlZml4ICsgY2FwdHVyZSArICcpKidcbiAgICAgIH1cblxuICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgIGlmICghdG9rZW4ucGFydGlhbCkge1xuICAgICAgICAgIGNhcHR1cmUgPSAnKD86JyArIHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKSk/J1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNhcHR1cmUgPSBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJyk/J1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjYXB0dXJlID0gcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpJ1xuICAgICAgfVxuXG4gICAgICByb3V0ZSArPSBjYXB0dXJlXG4gICAgfVxuICB9XG5cbiAgdmFyIGRlbGltaXRlciA9IGVzY2FwZVN0cmluZyhvcHRpb25zLmRlbGltaXRlciB8fCAnLycpXG4gIHZhciBlbmRzV2l0aERlbGltaXRlciA9IHJvdXRlLnNsaWNlKC1kZWxpbWl0ZXIubGVuZ3RoKSA9PT0gZGVsaW1pdGVyXG5cbiAgLy8gSW4gbm9uLXN0cmljdCBtb2RlIHdlIGFsbG93IGEgc2xhc2ggYXQgdGhlIGVuZCBvZiBtYXRjaC4gSWYgdGhlIHBhdGggdG9cbiAgLy8gbWF0Y2ggYWxyZWFkeSBlbmRzIHdpdGggYSBzbGFzaCwgd2UgcmVtb3ZlIGl0IGZvciBjb25zaXN0ZW5jeS4gVGhlIHNsYXNoXG4gIC8vIGlzIHZhbGlkIGF0IHRoZSBlbmQgb2YgYSBwYXRoIG1hdGNoLCBub3QgaW4gdGhlIG1pZGRsZS4gVGhpcyBpcyBpbXBvcnRhbnRcbiAgLy8gaW4gbm9uLWVuZGluZyBtb2RlLCB3aGVyZSBcIi90ZXN0L1wiIHNob3VsZG4ndCBtYXRjaCBcIi90ZXN0Ly9yb3V0ZVwiLlxuICBpZiAoIXN0cmljdCkge1xuICAgIHJvdXRlID0gKGVuZHNXaXRoRGVsaW1pdGVyID8gcm91dGUuc2xpY2UoMCwgLWRlbGltaXRlci5sZW5ndGgpIDogcm91dGUpICsgJyg/OicgKyBkZWxpbWl0ZXIgKyAnKD89JCkpPydcbiAgfVxuXG4gIGlmIChlbmQpIHtcbiAgICByb3V0ZSArPSAnJCdcbiAgfSBlbHNlIHtcbiAgICAvLyBJbiBub24tZW5kaW5nIG1vZGUsIHdlIG5lZWQgdGhlIGNhcHR1cmluZyBncm91cHMgdG8gbWF0Y2ggYXMgbXVjaCBhc1xuICAgIC8vIHBvc3NpYmxlIGJ5IHVzaW5nIGEgcG9zaXRpdmUgbG9va2FoZWFkIHRvIHRoZSBlbmQgb3IgbmV4dCBwYXRoIHNlZ21lbnQuXG4gICAgcm91dGUgKz0gc3RyaWN0ICYmIGVuZHNXaXRoRGVsaW1pdGVyID8gJycgOiAnKD89JyArIGRlbGltaXRlciArICd8JCknXG4gIH1cblxuICByZXR1cm4gYXR0YWNoS2V5cyhuZXcgUmVnRXhwKCdeJyArIHJvdXRlLCBmbGFncyhvcHRpb25zKSksIGtleXMpXG59XG5cbi8qKlxuICogTm9ybWFsaXplIHRoZSBnaXZlbiBwYXRoIHN0cmluZywgcmV0dXJuaW5nIGEgcmVndWxhciBleHByZXNzaW9uLlxuICpcbiAqIEFuIGVtcHR5IGFycmF5IGNhbiBiZSBwYXNzZWQgaW4gZm9yIHRoZSBrZXlzLCB3aGljaCB3aWxsIGhvbGQgdGhlXG4gKiBwbGFjZWhvbGRlciBrZXkgZGVzY3JpcHRpb25zLiBGb3IgZXhhbXBsZSwgdXNpbmcgYC91c2VyLzppZGAsIGBrZXlzYCB3aWxsXG4gKiBjb250YWluIGBbeyBuYW1lOiAnaWQnLCBkZWxpbWl0ZXI6ICcvJywgb3B0aW9uYWw6IGZhbHNlLCByZXBlYXQ6IGZhbHNlIH1dYC5cbiAqXG4gKiBAcGFyYW0gIHsoc3RyaW5nfFJlZ0V4cHxBcnJheSl9IHBhdGhcbiAqIEBwYXJhbSAgeyhBcnJheXxPYmplY3QpPX0gICAgICAga2V5c1xuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBwYXRoVG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgaWYgKCFpc2FycmF5KGtleXMpKSB7XG4gICAgb3B0aW9ucyA9IC8qKiBAdHlwZSB7IU9iamVjdH0gKi8gKGtleXMgfHwgb3B0aW9ucylcbiAgICBrZXlzID0gW11cbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG5cbiAgaWYgKHBhdGggaW5zdGFuY2VvZiBSZWdFeHApIHtcbiAgICByZXR1cm4gcmVnZXhwVG9SZWdleHAocGF0aCwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSlcbiAgfVxuXG4gIGlmIChpc2FycmF5KHBhdGgpKSB7XG4gICAgcmV0dXJuIGFycmF5VG9SZWdleHAoLyoqIEB0eXBlIHshQXJyYXl9ICovIChwYXRoKSwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSwgb3B0aW9ucylcbiAgfVxuXG4gIHJldHVybiBzdHJpbmdUb1JlZ2V4cCgvKiogQHR5cGUge3N0cmluZ30gKi8gKHBhdGgpLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpLCBvcHRpb25zKVxufVxuIiwiLypcbm9iamVjdC1hc3NpZ25cbihjKSBTaW5kcmUgU29yaHVzXG5AbGljZW5zZSBNSVRcbiovXG5cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIHRvT2JqZWN0KHZhbCkge1xuXHRpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xuXHR0cnkge1xuXHRcdGlmICghT2JqZWN0LmFzc2lnbikge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIERldGVjdCBidWdneSBwcm9wZXJ0eSBlbnVtZXJhdGlvbiBvcmRlciBpbiBvbGRlciBWOCB2ZXJzaW9ucy5cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcblx0XHR2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXG5cdFx0dGVzdDFbNV0gPSAnZGUnO1xuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDIgPSB7fTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcblx0XHRcdHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcblx0XHR9XG5cdFx0dmFyIG9yZGVyMiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24gKG4pIHtcblx0XHRcdHJldHVybiB0ZXN0MltuXTtcblx0XHR9KTtcblx0XHRpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QzID0ge307XG5cdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XG5cdFx0XHR0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xuXHRcdH0pO1xuXHRcdGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PVxuXHRcdFx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hvdWxkVXNlTmF0aXZlKCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG5cdHZhciBmcm9tO1xuXHR2YXIgdG8gPSB0b09iamVjdCh0YXJnZXQpO1xuXHR2YXIgc3ltYm9scztcblxuXHRmb3IgKHZhciBzID0gMTsgcyA8IGFyZ3VtZW50cy5sZW5ndGg7IHMrKykge1xuXHRcdGZyb20gPSBPYmplY3QoYXJndW1lbnRzW3NdKTtcblxuXHRcdGZvciAodmFyIGtleSBpbiBmcm9tKSB7XG5cdFx0XHRpZiAoaGFzT3duUHJvcGVydHkuY2FsbChmcm9tLCBrZXkpKSB7XG5cdFx0XHRcdHRvW2tleV0gPSBmcm9tW2tleV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdFx0c3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9scyhmcm9tKTtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAocHJvcElzRW51bWVyYWJsZS5jYWxsKGZyb20sIHN5bWJvbHNbaV0pKSB7XG5cdFx0XHRcdFx0dG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvO1xufTtcbiIsIi8qXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG5cdEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG4vLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih1c2VTb3VyY2VNYXApIHtcblx0dmFyIGxpc3QgPSBbXTtcblxuXHQvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cdGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcblx0XHRyZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcblx0XHRcdHZhciBjb250ZW50ID0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApO1xuXHRcdFx0aWYoaXRlbVsyXSkge1xuXHRcdFx0XHRyZXR1cm4gXCJAbWVkaWEgXCIgKyBpdGVtWzJdICsgXCJ7XCIgKyBjb250ZW50ICsgXCJ9XCI7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRyZXR1cm4gY29udGVudDtcblx0XHRcdH1cblx0XHR9KS5qb2luKFwiXCIpO1xuXHR9O1xuXG5cdC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cdGxpc3QuaSA9IGZ1bmN0aW9uKG1vZHVsZXMsIG1lZGlhUXVlcnkpIHtcblx0XHRpZih0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIilcblx0XHRcdG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIFwiXCJdXTtcblx0XHR2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaWQgPSB0aGlzW2ldWzBdO1xuXHRcdFx0aWYodHlwZW9mIGlkID09PSBcIm51bWJlclwiKVxuXHRcdFx0XHRhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG5cdFx0fVxuXHRcdGZvcihpID0gMDsgaSA8IG1vZHVsZXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpdGVtID0gbW9kdWxlc1tpXTtcblx0XHRcdC8vIHNraXAgYWxyZWFkeSBpbXBvcnRlZCBtb2R1bGVcblx0XHRcdC8vIHRoaXMgaW1wbGVtZW50YXRpb24gaXMgbm90IDEwMCUgcGVyZmVjdCBmb3Igd2VpcmQgbWVkaWEgcXVlcnkgY29tYmluYXRpb25zXG5cdFx0XHQvLyAgd2hlbiBhIG1vZHVsZSBpcyBpbXBvcnRlZCBtdWx0aXBsZSB0aW1lcyB3aXRoIGRpZmZlcmVudCBtZWRpYSBxdWVyaWVzLlxuXHRcdFx0Ly8gIEkgaG9wZSB0aGlzIHdpbGwgbmV2ZXIgb2NjdXIgKEhleSB0aGlzIHdheSB3ZSBoYXZlIHNtYWxsZXIgYnVuZGxlcylcblx0XHRcdGlmKHR5cGVvZiBpdGVtWzBdICE9PSBcIm51bWJlclwiIHx8ICFhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG5cdFx0XHRcdGlmKG1lZGlhUXVlcnkgJiYgIWl0ZW1bMl0pIHtcblx0XHRcdFx0XHRpdGVtWzJdID0gbWVkaWFRdWVyeTtcblx0XHRcdFx0fSBlbHNlIGlmKG1lZGlhUXVlcnkpIHtcblx0XHRcdFx0XHRpdGVtWzJdID0gXCIoXCIgKyBpdGVtWzJdICsgXCIpIGFuZCAoXCIgKyBtZWRpYVF1ZXJ5ICsgXCIpXCI7XG5cdFx0XHRcdH1cblx0XHRcdFx0bGlzdC5wdXNoKGl0ZW0pO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcblx0cmV0dXJuIGxpc3Q7XG59O1xuXG5mdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCkge1xuXHR2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgJyc7XG5cdHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblx0aWYgKCFjc3NNYXBwaW5nKSB7XG5cdFx0cmV0dXJuIGNvbnRlbnQ7XG5cdH1cblxuXHRpZiAodXNlU291cmNlTWFwICYmIHR5cGVvZiBidG9hID09PSAnZnVuY3Rpb24nKSB7XG5cdFx0dmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG5cdFx0dmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcblx0XHRcdHJldHVybiAnLyojIHNvdXJjZVVSTD0nICsgY3NzTWFwcGluZy5zb3VyY2VSb290ICsgc291cmNlICsgJyAqLydcblx0XHR9KTtcblxuXHRcdHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oJ1xcbicpO1xuXHR9XG5cblx0cmV0dXJuIFtjb250ZW50XS5qb2luKCdcXG4nKTtcbn1cblxuLy8gQWRhcHRlZCBmcm9tIGNvbnZlcnQtc291cmNlLW1hcCAoTUlUKVxuZnVuY3Rpb24gdG9Db21tZW50KHNvdXJjZU1hcCkge1xuXHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcblx0dmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSk7XG5cdHZhciBkYXRhID0gJ3NvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LCcgKyBiYXNlNjQ7XG5cblx0cmV0dXJuICcvKiMgJyArIGRhdGEgKyAnICovJztcbn1cbiIsIi8qXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG5cdEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5cbnZhciBzdHlsZXNJbkRvbSA9IHt9O1xuXG52YXJcdG1lbW9pemUgPSBmdW5jdGlvbiAoZm4pIHtcblx0dmFyIG1lbW87XG5cblx0cmV0dXJuIGZ1bmN0aW9uICgpIHtcblx0XHRpZiAodHlwZW9mIG1lbW8gPT09IFwidW5kZWZpbmVkXCIpIG1lbW8gPSBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXHRcdHJldHVybiBtZW1vO1xuXHR9O1xufTtcblxudmFyIGlzT2xkSUUgPSBtZW1vaXplKGZ1bmN0aW9uICgpIHtcblx0Ly8gVGVzdCBmb3IgSUUgPD0gOSBhcyBwcm9wb3NlZCBieSBCcm93c2VyaGFja3Ncblx0Ly8gQHNlZSBodHRwOi8vYnJvd3NlcmhhY2tzLmNvbS8jaGFjay1lNzFkODY5MmY2NTMzNDE3M2ZlZTcxNWMyMjJjYjgwNVxuXHQvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG5cdC8vIHRvIG9wZXJhdGUgY29ycmVjdGx5IGludG8gbm9uLXN0YW5kYXJkIGVudmlyb25tZW50c1xuXHQvLyBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyL2lzc3Vlcy8xNzdcblx0cmV0dXJuIHdpbmRvdyAmJiBkb2N1bWVudCAmJiBkb2N1bWVudC5hbGwgJiYgIXdpbmRvdy5hdG9iO1xufSk7XG5cbnZhciBnZXRUYXJnZXQgPSBmdW5jdGlvbiAodGFyZ2V0LCBwYXJlbnQpIHtcbiAgaWYgKHBhcmVudCl7XG4gICAgcmV0dXJuIHBhcmVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG4gIH1cbiAgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcbn07XG5cbnZhciBnZXRFbGVtZW50ID0gKGZ1bmN0aW9uIChmbikge1xuXHR2YXIgbWVtbyA9IHt9O1xuXG5cdHJldHVybiBmdW5jdGlvbih0YXJnZXQsIHBhcmVudCkge1xuICAgICAgICAgICAgICAgIC8vIElmIHBhc3NpbmcgZnVuY3Rpb24gaW4gb3B0aW9ucywgdGhlbiB1c2UgaXQgZm9yIHJlc29sdmUgXCJoZWFkXCIgZWxlbWVudC5cbiAgICAgICAgICAgICAgICAvLyBVc2VmdWwgZm9yIFNoYWRvdyBSb290IHN0eWxlIGkuZVxuICAgICAgICAgICAgICAgIC8vIHtcbiAgICAgICAgICAgICAgICAvLyAgIGluc2VydEludG86IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZm9vXCIpLnNoYWRvd1Jvb3QgfVxuICAgICAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHRhcmdldCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRhcmdldCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuXHRcdFx0dmFyIHN0eWxlVGFyZ2V0ID0gZ2V0VGFyZ2V0LmNhbGwodGhpcywgdGFyZ2V0LCBwYXJlbnQpO1xuXHRcdFx0Ly8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblx0XHRcdGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHQvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuXHRcdFx0XHRcdC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG5cdFx0XHRcdFx0c3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcblx0XHRcdFx0fSBjYXRjaChlKSB7XG5cdFx0XHRcdFx0c3R5bGVUYXJnZXQgPSBudWxsO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcblx0XHR9XG5cdFx0cmV0dXJuIG1lbW9bdGFyZ2V0XVxuXHR9O1xufSkoKTtcblxudmFyIHNpbmdsZXRvbiA9IG51bGw7XG52YXJcdHNpbmdsZXRvbkNvdW50ZXIgPSAwO1xudmFyXHRzdHlsZXNJbnNlcnRlZEF0VG9wID0gW107XG5cbnZhclx0Zml4VXJscyA9IHJlcXVpcmUoXCIuL3VybHNcIik7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obGlzdCwgb3B0aW9ucykge1xuXHRpZiAodHlwZW9mIERFQlVHICE9PSBcInVuZGVmaW5lZFwiICYmIERFQlVHKSB7XG5cdFx0aWYgKHR5cGVvZiBkb2N1bWVudCAhPT0gXCJvYmplY3RcIikgdGhyb3cgbmV3IEVycm9yKFwiVGhlIHN0eWxlLWxvYWRlciBjYW5ub3QgYmUgdXNlZCBpbiBhIG5vbi1icm93c2VyIGVudmlyb25tZW50XCIpO1xuXHR9XG5cblx0b3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cblx0b3B0aW9ucy5hdHRycyA9IHR5cGVvZiBvcHRpb25zLmF0dHJzID09PSBcIm9iamVjdFwiID8gb3B0aW9ucy5hdHRycyA6IHt9O1xuXG5cdC8vIEZvcmNlIHNpbmdsZS10YWcgc29sdXRpb24gb24gSUU2LTksIHdoaWNoIGhhcyBhIGhhcmQgbGltaXQgb24gdGhlICMgb2YgPHN0eWxlPlxuXHQvLyB0YWdzIGl0IHdpbGwgYWxsb3cgb24gYSBwYWdlXG5cdGlmICghb3B0aW9ucy5zaW5nbGV0b24gJiYgdHlwZW9mIG9wdGlvbnMuc2luZ2xldG9uICE9PSBcImJvb2xlYW5cIikgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XG5cblx0Ly8gQnkgZGVmYXVsdCwgYWRkIDxzdHlsZT4gdGFncyB0byB0aGUgPGhlYWQ+IGVsZW1lbnRcbiAgICAgICAgaWYgKCFvcHRpb25zLmluc2VydEludG8pIG9wdGlvbnMuaW5zZXJ0SW50byA9IFwiaGVhZFwiO1xuXG5cdC8vIEJ5IGRlZmF1bHQsIGFkZCA8c3R5bGU+IHRhZ3MgdG8gdGhlIGJvdHRvbSBvZiB0aGUgdGFyZ2V0XG5cdGlmICghb3B0aW9ucy5pbnNlcnRBdCkgb3B0aW9ucy5pbnNlcnRBdCA9IFwiYm90dG9tXCI7XG5cblx0dmFyIHN0eWxlcyA9IGxpc3RUb1N0eWxlcyhsaXN0LCBvcHRpb25zKTtcblxuXHRhZGRTdHlsZXNUb0RvbShzdHlsZXMsIG9wdGlvbnMpO1xuXG5cdHJldHVybiBmdW5jdGlvbiB1cGRhdGUgKG5ld0xpc3QpIHtcblx0XHR2YXIgbWF5UmVtb3ZlID0gW107XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGl0ZW0gPSBzdHlsZXNbaV07XG5cdFx0XHR2YXIgZG9tU3R5bGUgPSBzdHlsZXNJbkRvbVtpdGVtLmlkXTtcblxuXHRcdFx0ZG9tU3R5bGUucmVmcy0tO1xuXHRcdFx0bWF5UmVtb3ZlLnB1c2goZG9tU3R5bGUpO1xuXHRcdH1cblxuXHRcdGlmKG5ld0xpc3QpIHtcblx0XHRcdHZhciBuZXdTdHlsZXMgPSBsaXN0VG9TdHlsZXMobmV3TGlzdCwgb3B0aW9ucyk7XG5cdFx0XHRhZGRTdHlsZXNUb0RvbShuZXdTdHlsZXMsIG9wdGlvbnMpO1xuXHRcdH1cblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgbWF5UmVtb3ZlLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgZG9tU3R5bGUgPSBtYXlSZW1vdmVbaV07XG5cblx0XHRcdGlmKGRvbVN0eWxlLnJlZnMgPT09IDApIHtcblx0XHRcdFx0Zm9yICh2YXIgaiA9IDA7IGogPCBkb21TdHlsZS5wYXJ0cy5sZW5ndGg7IGorKykgZG9tU3R5bGUucGFydHNbal0oKTtcblxuXHRcdFx0XHRkZWxldGUgc3R5bGVzSW5Eb21bZG9tU3R5bGUuaWRdO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcbn07XG5cbmZ1bmN0aW9uIGFkZFN0eWxlc1RvRG9tIChzdHlsZXMsIG9wdGlvbnMpIHtcblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgaXRlbSA9IHN0eWxlc1tpXTtcblx0XHR2YXIgZG9tU3R5bGUgPSBzdHlsZXNJbkRvbVtpdGVtLmlkXTtcblxuXHRcdGlmKGRvbVN0eWxlKSB7XG5cdFx0XHRkb21TdHlsZS5yZWZzKys7XG5cblx0XHRcdGZvcih2YXIgaiA9IDA7IGogPCBkb21TdHlsZS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRkb21TdHlsZS5wYXJ0c1tqXShpdGVtLnBhcnRzW2pdKTtcblx0XHRcdH1cblxuXHRcdFx0Zm9yKDsgaiA8IGl0ZW0ucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0ZG9tU3R5bGUucGFydHMucHVzaChhZGRTdHlsZShpdGVtLnBhcnRzW2pdLCBvcHRpb25zKSk7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdHZhciBwYXJ0cyA9IFtdO1xuXG5cdFx0XHRmb3IodmFyIGogPSAwOyBqIDwgaXRlbS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRwYXJ0cy5wdXNoKGFkZFN0eWxlKGl0ZW0ucGFydHNbal0sIG9wdGlvbnMpKTtcblx0XHRcdH1cblxuXHRcdFx0c3R5bGVzSW5Eb21baXRlbS5pZF0gPSB7aWQ6IGl0ZW0uaWQsIHJlZnM6IDEsIHBhcnRzOiBwYXJ0c307XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGxpc3RUb1N0eWxlcyAobGlzdCwgb3B0aW9ucykge1xuXHR2YXIgc3R5bGVzID0gW107XG5cdHZhciBuZXdTdHlsZXMgPSB7fTtcblxuXHRmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgaXRlbSA9IGxpc3RbaV07XG5cdFx0dmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG5cdFx0dmFyIGNzcyA9IGl0ZW1bMV07XG5cdFx0dmFyIG1lZGlhID0gaXRlbVsyXTtcblx0XHR2YXIgc291cmNlTWFwID0gaXRlbVszXTtcblx0XHR2YXIgcGFydCA9IHtjc3M6IGNzcywgbWVkaWE6IG1lZGlhLCBzb3VyY2VNYXA6IHNvdXJjZU1hcH07XG5cblx0XHRpZighbmV3U3R5bGVzW2lkXSkgc3R5bGVzLnB1c2gobmV3U3R5bGVzW2lkXSA9IHtpZDogaWQsIHBhcnRzOiBbcGFydF19KTtcblx0XHRlbHNlIG5ld1N0eWxlc1tpZF0ucGFydHMucHVzaChwYXJ0KTtcblx0fVxuXG5cdHJldHVybiBzdHlsZXM7XG59XG5cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudCAob3B0aW9ucywgc3R5bGUpIHtcblx0dmFyIHRhcmdldCA9IGdldEVsZW1lbnQob3B0aW9ucy5pbnNlcnRJbnRvKVxuXG5cdGlmICghdGFyZ2V0KSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnRJbnRvJyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG5cdH1cblxuXHR2YXIgbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AgPSBzdHlsZXNJbnNlcnRlZEF0VG9wW3N0eWxlc0luc2VydGVkQXRUb3AubGVuZ3RoIC0gMV07XG5cblx0aWYgKG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwidG9wXCIpIHtcblx0XHRpZiAoIWxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wKSB7XG5cdFx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCB0YXJnZXQuZmlyc3RDaGlsZCk7XG5cdFx0fSBlbHNlIGlmIChsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcC5uZXh0U2libGluZykge1xuXHRcdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AubmV4dFNpYmxpbmcpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuXHRcdH1cblx0XHRzdHlsZXNJbnNlcnRlZEF0VG9wLnB1c2goc3R5bGUpO1xuXHR9IGVsc2UgaWYgKG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwiYm90dG9tXCIpIHtcblx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuXHR9IGVsc2UgaWYgKHR5cGVvZiBvcHRpb25zLmluc2VydEF0ID09PSBcIm9iamVjdFwiICYmIG9wdGlvbnMuaW5zZXJ0QXQuYmVmb3JlKSB7XG5cdFx0dmFyIG5leHRTaWJsaW5nID0gZ2V0RWxlbWVudChvcHRpb25zLmluc2VydEF0LmJlZm9yZSwgdGFyZ2V0KTtcblx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCBuZXh0U2libGluZyk7XG5cdH0gZWxzZSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiW1N0eWxlIExvYWRlcl1cXG5cXG4gSW52YWxpZCB2YWx1ZSBmb3IgcGFyYW1ldGVyICdpbnNlcnRBdCcgKCdvcHRpb25zLmluc2VydEF0JykgZm91bmQuXFxuIE11c3QgYmUgJ3RvcCcsICdib3R0b20nLCBvciBPYmplY3QuXFxuIChodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlciNpbnNlcnRhdClcXG5cIik7XG5cdH1cbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50IChzdHlsZSkge1xuXHRpZiAoc3R5bGUucGFyZW50Tm9kZSA9PT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuXHRzdHlsZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlKTtcblxuXHR2YXIgaWR4ID0gc3R5bGVzSW5zZXJ0ZWRBdFRvcC5pbmRleE9mKHN0eWxlKTtcblx0aWYoaWR4ID49IDApIHtcblx0XHRzdHlsZXNJbnNlcnRlZEF0VG9wLnNwbGljZShpZHgsIDEpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVN0eWxlRWxlbWVudCAob3B0aW9ucykge1xuXHR2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG5cblx0aWYob3B0aW9ucy5hdHRycy50eXBlID09PSB1bmRlZmluZWQpIHtcblx0XHRvcHRpb25zLmF0dHJzLnR5cGUgPSBcInRleHQvY3NzXCI7XG5cdH1cblxuXHRpZihvcHRpb25zLmF0dHJzLm5vbmNlID09PSB1bmRlZmluZWQpIHtcblx0XHR2YXIgbm9uY2UgPSBnZXROb25jZSgpO1xuXHRcdGlmIChub25jZSkge1xuXHRcdFx0b3B0aW9ucy5hdHRycy5ub25jZSA9IG5vbmNlO1xuXHRcdH1cblx0fVxuXG5cdGFkZEF0dHJzKHN0eWxlLCBvcHRpb25zLmF0dHJzKTtcblx0aW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMsIHN0eWxlKTtcblxuXHRyZXR1cm4gc3R5bGU7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUxpbmtFbGVtZW50IChvcHRpb25zKSB7XG5cdHZhciBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpbmtcIik7XG5cblx0aWYob3B0aW9ucy5hdHRycy50eXBlID09PSB1bmRlZmluZWQpIHtcblx0XHRvcHRpb25zLmF0dHJzLnR5cGUgPSBcInRleHQvY3NzXCI7XG5cdH1cblx0b3B0aW9ucy5hdHRycy5yZWwgPSBcInN0eWxlc2hlZXRcIjtcblxuXHRhZGRBdHRycyhsaW5rLCBvcHRpb25zLmF0dHJzKTtcblx0aW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMsIGxpbmspO1xuXG5cdHJldHVybiBsaW5rO1xufVxuXG5mdW5jdGlvbiBhZGRBdHRycyAoZWwsIGF0dHJzKSB7XG5cdE9iamVjdC5rZXlzKGF0dHJzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcblx0XHRlbC5zZXRBdHRyaWJ1dGUoa2V5LCBhdHRyc1trZXldKTtcblx0fSk7XG59XG5cbmZ1bmN0aW9uIGdldE5vbmNlKCkge1xuXHRpZiAodHlwZW9mIF9fd2VicGFja19ub25jZV9fID09PSAndW5kZWZpbmVkJykge1xuXHRcdHJldHVybiBudWxsO1xuXHR9XG5cblx0cmV0dXJuIF9fd2VicGFja19ub25jZV9fO1xufVxuXG5mdW5jdGlvbiBhZGRTdHlsZSAob2JqLCBvcHRpb25zKSB7XG5cdHZhciBzdHlsZSwgdXBkYXRlLCByZW1vdmUsIHJlc3VsdDtcblxuXHQvLyBJZiBhIHRyYW5zZm9ybSBmdW5jdGlvbiB3YXMgZGVmaW5lZCwgcnVuIGl0IG9uIHRoZSBjc3Ncblx0aWYgKG9wdGlvbnMudHJhbnNmb3JtICYmIG9iai5jc3MpIHtcblx0ICAgIHJlc3VsdCA9IHR5cGVvZiBvcHRpb25zLnRyYW5zZm9ybSA9PT0gJ2Z1bmN0aW9uJ1xuXHRcdCA/IG9wdGlvbnMudHJhbnNmb3JtKG9iai5jc3MpIFxuXHRcdCA6IG9wdGlvbnMudHJhbnNmb3JtLmRlZmF1bHQob2JqLmNzcyk7XG5cblx0ICAgIGlmIChyZXN1bHQpIHtcblx0ICAgIFx0Ly8gSWYgdHJhbnNmb3JtIHJldHVybnMgYSB2YWx1ZSwgdXNlIHRoYXQgaW5zdGVhZCBvZiB0aGUgb3JpZ2luYWwgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBydW5uaW5nIHJ1bnRpbWUgdHJhbnNmb3JtYXRpb25zIG9uIHRoZSBjc3MuXG5cdCAgICBcdG9iai5jc3MgPSByZXN1bHQ7XG5cdCAgICB9IGVsc2Uge1xuXHQgICAgXHQvLyBJZiB0aGUgdHJhbnNmb3JtIGZ1bmN0aW9uIHJldHVybnMgYSBmYWxzeSB2YWx1ZSwgZG9uJ3QgYWRkIHRoaXMgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBjb25kaXRpb25hbCBsb2FkaW5nIG9mIGNzc1xuXHQgICAgXHRyZXR1cm4gZnVuY3Rpb24oKSB7XG5cdCAgICBcdFx0Ly8gbm9vcFxuXHQgICAgXHR9O1xuXHQgICAgfVxuXHR9XG5cblx0aWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG5cdFx0dmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG5cblx0XHRzdHlsZSA9IHNpbmdsZXRvbiB8fCAoc2luZ2xldG9uID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpKTtcblxuXHRcdHVwZGF0ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgZmFsc2UpO1xuXHRcdHJlbW92ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgdHJ1ZSk7XG5cblx0fSBlbHNlIGlmIChcblx0XHRvYmouc291cmNlTWFwICYmXG5cdFx0dHlwZW9mIFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIFVSTC5jcmVhdGVPYmplY3RVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBVUkwucmV2b2tlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgQmxvYiA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIlxuXHQpIHtcblx0XHRzdHlsZSA9IGNyZWF0ZUxpbmtFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IHVwZGF0ZUxpbmsuYmluZChudWxsLCBzdHlsZSwgb3B0aW9ucyk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblxuXHRcdFx0aWYoc3R5bGUuaHJlZikgVVJMLnJldm9rZU9iamVjdFVSTChzdHlsZS5ocmVmKTtcblx0XHR9O1xuXHR9IGVsc2Uge1xuXHRcdHN0eWxlID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IGFwcGx5VG9UYWcuYmluZChudWxsLCBzdHlsZSk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblx0XHR9O1xuXHR9XG5cblx0dXBkYXRlKG9iaik7XG5cblx0cmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZVN0eWxlIChuZXdPYmopIHtcblx0XHRpZiAobmV3T2JqKSB7XG5cdFx0XHRpZiAoXG5cdFx0XHRcdG5ld09iai5jc3MgPT09IG9iai5jc3MgJiZcblx0XHRcdFx0bmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiZcblx0XHRcdFx0bmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcFxuXHRcdFx0KSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0dXBkYXRlKG9iaiA9IG5ld09iaik7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJlbW92ZSgpO1xuXHRcdH1cblx0fTtcbn1cblxudmFyIHJlcGxhY2VUZXh0ID0gKGZ1bmN0aW9uICgpIHtcblx0dmFyIHRleHRTdG9yZSA9IFtdO1xuXG5cdHJldHVybiBmdW5jdGlvbiAoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG5cdFx0dGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuXG5cdFx0cmV0dXJuIHRleHRTdG9yZS5maWx0ZXIoQm9vbGVhbikuam9pbignXFxuJyk7XG5cdH07XG59KSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnIChzdHlsZSwgaW5kZXgsIHJlbW92ZSwgb2JqKSB7XG5cdHZhciBjc3MgPSByZW1vdmUgPyBcIlwiIDogb2JqLmNzcztcblxuXHRpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuXHR9IGVsc2Uge1xuXHRcdHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcblx0XHR2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cblx0XHRpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcblxuXHRcdGlmIChjaGlsZE5vZGVzLmxlbmd0aCkge1xuXHRcdFx0c3R5bGUuaW5zZXJ0QmVmb3JlKGNzc05vZGUsIGNoaWxkTm9kZXNbaW5kZXhdKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0c3R5bGUuYXBwZW5kQ2hpbGQoY3NzTm9kZSk7XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGFwcGx5VG9UYWcgKHN0eWxlLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBtZWRpYSA9IG9iai5tZWRpYTtcblxuXHRpZihtZWRpYSkge1xuXHRcdHN0eWxlLnNldEF0dHJpYnV0ZShcIm1lZGlhXCIsIG1lZGlhKVxuXHR9XG5cblx0aWYoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcblx0fSBlbHNlIHtcblx0XHR3aGlsZShzdHlsZS5maXJzdENoaWxkKSB7XG5cdFx0XHRzdHlsZS5yZW1vdmVDaGlsZChzdHlsZS5maXJzdENoaWxkKTtcblx0XHR9XG5cblx0XHRzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcblx0fVxufVxuXG5mdW5jdGlvbiB1cGRhdGVMaW5rIChsaW5rLCBvcHRpb25zLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG5cdC8qXG5cdFx0SWYgY29udmVydFRvQWJzb2x1dGVVcmxzIGlzbid0IGRlZmluZWQsIGJ1dCBzb3VyY2VtYXBzIGFyZSBlbmFibGVkXG5cdFx0YW5kIHRoZXJlIGlzIG5vIHB1YmxpY1BhdGggZGVmaW5lZCB0aGVuIGxldHMgdHVybiBjb252ZXJ0VG9BYnNvbHV0ZVVybHNcblx0XHRvbiBieSBkZWZhdWx0LiAgT3RoZXJ3aXNlIGRlZmF1bHQgdG8gdGhlIGNvbnZlcnRUb0Fic29sdXRlVXJscyBvcHRpb25cblx0XHRkaXJlY3RseVxuXHQqL1xuXHR2YXIgYXV0b0ZpeFVybHMgPSBvcHRpb25zLmNvbnZlcnRUb0Fic29sdXRlVXJscyA9PT0gdW5kZWZpbmVkICYmIHNvdXJjZU1hcDtcblxuXHRpZiAob3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgfHwgYXV0b0ZpeFVybHMpIHtcblx0XHRjc3MgPSBmaXhVcmxzKGNzcyk7XG5cdH1cblxuXHRpZiAoc291cmNlTWFwKSB7XG5cdFx0Ly8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMjY2MDM4NzVcblx0XHRjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiICsgYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSArIFwiICovXCI7XG5cdH1cblxuXHR2YXIgYmxvYiA9IG5ldyBCbG9iKFtjc3NdLCB7IHR5cGU6IFwidGV4dC9jc3NcIiB9KTtcblxuXHR2YXIgb2xkU3JjID0gbGluay5ocmVmO1xuXG5cdGxpbmsuaHJlZiA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7XG5cblx0aWYob2xkU3JjKSBVUkwucmV2b2tlT2JqZWN0VVJMKG9sZFNyYyk7XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ29weXJpZ2h0IDIwMTUsIFlhaG9vISBJbmMuXG4gKiBDb3B5cmlnaHRzIGxpY2Vuc2VkIHVuZGVyIHRoZSBOZXcgQlNEIExpY2Vuc2UuIFNlZSB0aGUgYWNjb21wYW55aW5nIExJQ0VOU0UgZmlsZSBmb3IgdGVybXMuXG4gKi9cbnZhciBSRUFDVF9TVEFUSUNTID0ge1xuICAgIGNoaWxkQ29udGV4dFR5cGVzOiB0cnVlLFxuICAgIGNvbnRleHRUeXBlczogdHJ1ZSxcbiAgICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gICAgZGlzcGxheU5hbWU6IHRydWUsXG4gICAgZ2V0RGVmYXVsdFByb3BzOiB0cnVlLFxuICAgIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczogdHJ1ZSxcbiAgICBtaXhpbnM6IHRydWUsXG4gICAgcHJvcFR5cGVzOiB0cnVlLFxuICAgIHR5cGU6IHRydWVcbn07XG5cbnZhciBLTk9XTl9TVEFUSUNTID0ge1xuICAgIG5hbWU6IHRydWUsXG4gICAgbGVuZ3RoOiB0cnVlLFxuICAgIHByb3RvdHlwZTogdHJ1ZSxcbiAgICBjYWxsZXI6IHRydWUsXG4gICAgY2FsbGVlOiB0cnVlLFxuICAgIGFyZ3VtZW50czogdHJ1ZSxcbiAgICBhcml0eTogdHJ1ZVxufTtcblxudmFyIGRlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIGdldE93blByb3BlcnR5TmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcztcbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Y7XG52YXIgb2JqZWN0UHJvdG90eXBlID0gZ2V0UHJvdG90eXBlT2YgJiYgZ2V0UHJvdG90eXBlT2YoT2JqZWN0KTtcblxuZnVuY3Rpb24gaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBzb3VyY2VDb21wb25lbnQsIGJsYWNrbGlzdCkge1xuICAgIGlmICh0eXBlb2Ygc291cmNlQ29tcG9uZW50ICE9PSAnc3RyaW5nJykgeyAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuXG4gICAgICAgIGlmIChvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgICAgICAgIHZhciBpbmhlcml0ZWRDb21wb25lbnQgPSBnZXRQcm90b3R5cGVPZihzb3VyY2VDb21wb25lbnQpO1xuICAgICAgICAgICAgaWYgKGluaGVyaXRlZENvbXBvbmVudCAmJiBpbmhlcml0ZWRDb21wb25lbnQgIT09IG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgICAgICAgICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgaW5oZXJpdGVkQ29tcG9uZW50LCBibGFja2xpc3QpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGtleXMgPSBnZXRPd25Qcm9wZXJ0eU5hbWVzKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICAgICAgaWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAgICAgICAga2V5cyA9IGtleXMuY29uY2F0KGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgICAgICAgdmFyIGtleSA9IGtleXNbaV07XG4gICAgICAgICAgICBpZiAoIVJFQUNUX1NUQVRJQ1Nba2V5XSAmJiAhS05PV05fU1RBVElDU1trZXldICYmICghYmxhY2tsaXN0IHx8ICFibGFja2xpc3Rba2V5XSkpIHtcbiAgICAgICAgICAgICAgICB2YXIgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2VDb21wb25lbnQsIGtleSk7XG4gICAgICAgICAgICAgICAgdHJ5IHsgLy8gQXZvaWQgZmFpbHVyZXMgZnJvbSByZWFkLW9ubHkgcHJvcGVydGllc1xuICAgICAgICAgICAgICAgICAgICBkZWZpbmVQcm9wZXJ0eSh0YXJnZXRDb21wb25lbnQsIGtleSwgZGVzY3JpcHRvcik7XG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRhcmdldENvbXBvbmVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBob2lzdE5vblJlYWN0U3RhdGljcztcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcbmltcG9ydCBQYWdpbmF0aW9uIGZyb20gJy4uLy4uL3NyYy9QYWdpbmF0aW9uJztcbmltcG9ydCB7IFJvdXRlQ29tcG9uZW50UHJvcHMsIFJvdXRlLCBCcm93c2VyUm91dGVyIGFzIFJvdXRlciB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0ICcuL2luZGV4LnNjc3MnO1xuaW1wb3J0ICcuLi8uLi9zcmMvcGFnaW5hdGlvbi5zY3NzJztcblxuaW50ZXJmYWNlIFN0YXRlIHtcbiAgY3VyUGFnZTogbnVtYmVyO1xufVxuXG5jbGFzcyBBcHAgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQ8e30sIFN0YXRlPiB7XG4gIHN0YXRlID0ge1xuICAgIGN1clBhZ2U6IDAsXG4gIH07XG5cbiAgdG90YWxJdGVtcyA9IDEwMDtcbiAgcGFnZVNpemUgPSAyMDtcbiAgcGFnZUNvdW50OiBudW1iZXI7XG5cbiAgY29uc3RydWN0b3IocHJvcHM6IHt9KSB7XG4gICAgc3VwZXIocHJvcHMpO1xuXG4gICAgdGhpcy5wYWdlQ291bnQgPSB0aGlzLnRvdGFsSXRlbXMgLyB0aGlzLnBhZ2VTaXplO1xuICB9XG5cbiAgY2hhbmdlUGFnZSA9IChwYWdlTnVtYmVyOiBudW1iZXIpID0+IHtcbiAgICB0aGlzLnNldFN0YXRlKHsgY3VyUGFnZTogcGFnZU51bWJlciAtIDEgfSk7XG4gIH1cblxuICByZW5kZXJQYWdlID0gKHsgbG9jYXRpb24sIGhpc3RvcnkgfTogUm91dGVDb21wb25lbnRQcm9wczxhbnk+KSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgIDw+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwYWdlcy1jb250YWluZXJcIj5cbiAgICAgICAgICAgIHtBcnJheS5mcm9tKHsgbGVuZ3RoOiB0aGlzLnBhZ2VDb3VudCB9LCAoaXRtLCBpKSA9PiAoXG4gICAgICAgICAgICAgIDxkaXYga2V5PXtpfSBjbGFzc05hbWU9e2BwYWdlICR7dGhpcy5zdGF0ZS5jdXJQYWdlID09PSBpID8gJ2N1cicgOiAnJ31gfT5cbiAgICAgICAgICAgICAgICBQYWdlICN7aSArIDF9XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKSl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPFBhZ2luYXRpb25cbiAgICAgICAgICAgIGhpc3Rvcnk9e2hpc3Rvcnl9XG4gICAgICAgICAgICBsb2NhdGlvbj17bG9jYXRpb259XG4gICAgICAgICAgICB0b3RhbEl0ZW1zPXt0aGlzLnRvdGFsSXRlbXN9XG4gICAgICAgICAgICBwYWdlU2l6ZT17dGhpcy5wYWdlU2l6ZX1cbiAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLmNoYW5nZVBhZ2V9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxoMj5QYWdpbmF0aW9uIHdpdGggbW9yZSB0aGVuIDEwIHBhZ2VzOjwvaDI+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPFBhZ2luYXRpb25cbiAgICAgICAgICAgIG1hcmdpblRvcD17NDB9XG4gICAgICAgICAgICBoaXN0b3J5PXtoaXN0b3J5fVxuICAgICAgICAgICAgbG9jYXRpb249e2xvY2F0aW9ufVxuICAgICAgICAgICAgdG90YWxJdGVtcz17MzAwfVxuICAgICAgICAgICAgcGFnZVNpemU9ezIwfVxuICAgICAgICAgICAgb25DaGFuZ2U9eyhuKSA9PiB7fX1cbiAgICAgICAgICAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGgyPlBhZ2luYXRpb24gd2l0aCBtb3JlIHRoZW4gMTAgcGFnZXMgYW5kIGV4dGVuZGVkIGNlbnRlciBidXR0b24gZ3JvdXA6PC9oMj5cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICA8UGFnaW5hdGlvblxuICAgICAgICAgICAgbWFyZ2luVG9wPXs0MH1cbiAgICAgICAgICAgIGhpc3Rvcnk9e2hpc3Rvcnl9XG4gICAgICAgICAgICBsb2NhdGlvbj17bG9jYXRpb259XG4gICAgICAgICAgICBidG5Hcm91cExlbmd0aD17OX1cbiAgICAgICAgICAgIHRvdGFsSXRlbXM9ezQwMH1cbiAgICAgICAgICAgIHBhZ2VTaXplPXsyMH1cbiAgICAgICAgICAgIG9uQ2hhbmdlPXsobikgPT4ge319XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8Lz5cbiAgICApO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybihcbiAgICAgIDxSb3V0ZXI+XG4gICAgICAgIDxSb3V0ZSBleGFjdCBwYXRoPVwiL1wiIGNvbXBvbmVudD17dGhpcy5yZW5kZXJQYWdlfSAvPlxuICAgICAgPC9Sb3V0ZXI+XG4gICAgKTtcbiAgfVxufVxuXG5SZWFjdERPTS5yZW5kZXIoPEFwcCAvPiwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jvb3QnKSBhcyBIVE1MRWxlbWVudCk7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjYuMFxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGs9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLHA9bj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxxPW4/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixyPW4/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LHQ9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsdT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCx2PW4/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LHc9bj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCx4PW4/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSx5PW4/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHo9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMsQT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOlxuNjAxMTUsQj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LEM9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIGFhKGEsYixlLGMsZCxnLGgsZil7aWYoIWEpe2E9dm9pZCAwO2lmKHZvaWQgMD09PWIpYT1FcnJvcihcIk1pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCIpO2Vsc2V7dmFyIGw9W2UsYyxkLGcsaCxmXSxtPTA7YT1FcnJvcihiLnJlcGxhY2UoLyVzL2csZnVuY3Rpb24oKXtyZXR1cm4gbFttKytdfSkpO2EubmFtZT1cIkludmFyaWFudCBWaW9sYXRpb25cIn1hLmZyYW1lc1RvUG9wPTE7dGhyb3cgYTt9fVxuZnVuY3Rpb24gRChhKXtmb3IodmFyIGI9YXJndW1lbnRzLmxlbmd0aC0xLGU9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MDtjPGI7YysrKWUrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2MrMV0pO2FhKCExLFwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0ICVzIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4gXCIsZSl9dmFyIEU9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEY9e307XG5mdW5jdGlvbiBHKGEsYixlKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUY7dGhpcy51cGRhdGVyPWV8fEV9Ry5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtHLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe1wib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWE/RChcIjg1XCIpOnZvaWQgMDt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0cucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O2Z1bmN0aW9uIEgoKXt9SC5wcm90b3R5cGU9Ry5wcm90b3R5cGU7ZnVuY3Rpb24gSShhLGIsZSl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1GO3RoaXMudXBkYXRlcj1lfHxFfXZhciBKPUkucHJvdG90eXBlPW5ldyBIO1xuSi5jb25zdHJ1Y3Rvcj1JO2soSixHLnByb3RvdHlwZSk7Si5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgSz17Y3VycmVudDpudWxsLGN1cnJlbnREaXNwYXRjaGVyOm51bGx9LEw9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxNPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBOKGEsYixlKXt2YXIgYz12b2lkIDAsZD17fSxnPW51bGwsaD1udWxsO2lmKG51bGwhPWIpZm9yKGMgaW4gdm9pZCAwIT09Yi5yZWYmJihoPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSksYilMLmNhbGwoYixjKSYmIU0uaGFzT3duUHJvcGVydHkoYykmJihkW2NdPWJbY10pO3ZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZilkLmNoaWxkcmVuPWU7ZWxzZSBpZigxPGYpe2Zvcih2YXIgbD1BcnJheShmKSxtPTA7bTxmO20rKylsW21dPWFyZ3VtZW50c1ttKzJdO2QuY2hpbGRyZW49bH1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoYyBpbiBmPWEuZGVmYXVsdFByb3BzLGYpdm9pZCAwPT09ZFtjXSYmKGRbY109ZltjXSk7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLGtleTpnLHJlZjpoLHByb3BzOmQsX293bmVyOksuY3VycmVudH19XG5mdW5jdGlvbiBiYShhLGIpe3JldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn19ZnVuY3Rpb24gTyhhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09cH1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiKyhcIlwiK2EpLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBQPS9cXC8rL2csUT1bXTtmdW5jdGlvbiBSKGEsYixlLGMpe2lmKFEubGVuZ3RoKXt2YXIgZD1RLnBvcCgpO2QucmVzdWx0PWE7ZC5rZXlQcmVmaXg9YjtkLmZ1bmM9ZTtkLmNvbnRleHQ9YztkLmNvdW50PTA7cmV0dXJuIGR9cmV0dXJue3Jlc3VsdDphLGtleVByZWZpeDpiLGZ1bmM6ZSxjb250ZXh0OmMsY291bnQ6MH19XG5mdW5jdGlvbiBTKGEpe2EucmVzdWx0PW51bGw7YS5rZXlQcmVmaXg9bnVsbDthLmZ1bmM9bnVsbDthLmNvbnRleHQ9bnVsbDthLmNvdW50PTA7MTA+US5sZW5ndGgmJlEucHVzaChhKX1cbmZ1bmN0aW9uIFQoYSxiLGUsYyl7dmFyIGQ9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWR8fFwiYm9vbGVhblwiPT09ZClhPW51bGw7dmFyIGc9ITE7aWYobnVsbD09PWEpZz0hMDtlbHNlIHN3aXRjaChkKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmc9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHA6Y2FzZSBxOmc9ITB9fWlmKGcpcmV0dXJuIGUoYyxhLFwiXCI9PT1iP1wiLlwiK1UoYSwwKTpiKSwxO2c9MDtiPVwiXCI9PT1iP1wiLlwiOmIrXCI6XCI7aWYoQXJyYXkuaXNBcnJheShhKSlmb3IodmFyIGg9MDtoPGEubGVuZ3RoO2grKyl7ZD1hW2hdO3ZhciBmPWIrVShkLGgpO2crPVQoZCxmLGUsYyl9ZWxzZSBpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhP2Y9bnVsbDooZj1DJiZhW0NdfHxhW1wiQEBpdGVyYXRvclwiXSxmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBmP2Y6bnVsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLGg9XG4wOyEoZD1hLm5leHQoKSkuZG9uZTspZD1kLnZhbHVlLGY9YitVKGQsaCsrKSxnKz1UKGQsZixlLGMpO2Vsc2VcIm9iamVjdFwiPT09ZCYmKGU9XCJcIithLEQoXCIzMVwiLFwiW29iamVjdCBPYmplY3RdXCI9PT1lP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmUsXCJcIikpO3JldHVybiBnfWZ1bmN0aW9uIFYoYSxiLGUpe3JldHVybiBudWxsPT1hPzA6VChhLFwiXCIsYixlKX1mdW5jdGlvbiBVKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKGEua2V5KTpiLnRvU3RyaW5nKDM2KX1mdW5jdGlvbiBjYShhLGIpe2EuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyl9XG5mdW5jdGlvbiBkYShhLGIsZSl7dmFyIGM9YS5yZXN1bHQsZD1hLmtleVByZWZpeDthPWEuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyk7QXJyYXkuaXNBcnJheShhKT9XKGEsYyxlLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk6bnVsbCE9YSYmKE8oYSkmJihhPWJhKGEsZCsoIWEua2V5fHxiJiZiLmtleT09PWEua2V5P1wiXCI6KFwiXCIrYS5rZXkpLnJlcGxhY2UoUCxcIiQmL1wiKStcIi9cIikrZSkpLGMucHVzaChhKSl9ZnVuY3Rpb24gVyhhLGIsZSxjLGQpe3ZhciBnPVwiXCI7bnVsbCE9ZSYmKGc9KFwiXCIrZSkucmVwbGFjZShQLFwiJCYvXCIpK1wiL1wiKTtiPVIoYixnLGMsZCk7VihhLGRhLGIpO1MoYil9XG52YXIgWD17Q2hpbGRyZW46e21hcDpmdW5jdGlvbihhLGIsZSl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgYz1bXTtXKGEsYyxudWxsLGIsZSk7cmV0dXJuIGN9LGZvckVhY2g6ZnVuY3Rpb24oYSxiLGUpe2lmKG51bGw9PWEpcmV0dXJuIGE7Yj1SKG51bGwsbnVsbCxiLGUpO1YoYSxjYSxiKTtTKGIpfSxjb3VudDpmdW5jdGlvbihhKXtyZXR1cm4gVihhLGZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LG51bGwpfSx0b0FycmF5OmZ1bmN0aW9uKGEpe3ZhciBiPVtdO1coYSxiLG51bGwsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTtyZXR1cm4gYn0sb25seTpmdW5jdGlvbihhKXtPKGEpP3ZvaWQgMDpEKFwiMTQzXCIpO3JldHVybiBhfX0sY3JlYXRlUmVmOmZ1bmN0aW9uKCl7cmV0dXJue2N1cnJlbnQ6bnVsbH19LENvbXBvbmVudDpHLFB1cmVDb21wb25lbnQ6SSxjcmVhdGVDb250ZXh0OmZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9bnVsbCk7YT17JCR0eXBlb2Y6dyxfY2FsY3VsYXRlQ2hhbmdlZEJpdHM6Yixcbl9jdXJyZW50VmFsdWU6YSxfY3VycmVudFZhbHVlMjphLFByb3ZpZGVyOm51bGwsQ29uc3VtZXI6bnVsbH07YS5Qcm92aWRlcj17JCR0eXBlb2Y6dixfY29udGV4dDphfTtyZXR1cm4gYS5Db25zdW1lcj1hfSxmb3J3YXJkUmVmOmZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp5LHJlbmRlcjphfX0sbGF6eTpmdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6QixfY3RvcjphLF9zdGF0dXM6LTEsX3Jlc3VsdDpudWxsfX0sbWVtbzpmdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjpBLHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX0sRnJhZ21lbnQ6cixTdHJpY3RNb2RlOnQsdW5zdGFibGVfQ29uY3VycmVudE1vZGU6eCxTdXNwZW5zZTp6LHVuc3RhYmxlX1Byb2ZpbGVyOnUsY3JlYXRlRWxlbWVudDpOLGNsb25lRWxlbWVudDpmdW5jdGlvbihhLGIsZSl7bnVsbD09PWF8fHZvaWQgMD09PWE/RChcIjI2N1wiLGEpOnZvaWQgMDt2YXIgYz12b2lkIDAsZD1rKHt9LGEucHJvcHMpLFxuZz1hLmtleSxoPWEucmVmLGY9YS5fb3duZXI7aWYobnVsbCE9Yil7dm9pZCAwIT09Yi5yZWYmJihoPWIucmVmLGY9Sy5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSk7dmFyIGw9dm9pZCAwO2EudHlwZSYmYS50eXBlLmRlZmF1bHRQcm9wcyYmKGw9YS50eXBlLmRlZmF1bHRQcm9wcyk7Zm9yKGMgaW4gYilMLmNhbGwoYixjKSYmIU0uaGFzT3duUHJvcGVydHkoYykmJihkW2NdPXZvaWQgMD09PWJbY10mJnZvaWQgMCE9PWw/bFtjXTpiW2NdKX1jPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09YylkLmNoaWxkcmVuPWU7ZWxzZSBpZigxPGMpe2w9QXJyYXkoYyk7Zm9yKHZhciBtPTA7bTxjO20rKylsW21dPWFyZ3VtZW50c1ttKzJdO2QuY2hpbGRyZW49bH1yZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxrZXk6ZyxyZWY6aCxwcm9wczpkLF9vd25lcjpmfX0sY3JlYXRlRmFjdG9yeTpmdW5jdGlvbihhKXt2YXIgYj1OLmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn0sXG5pc1ZhbGlkRWxlbWVudDpPLHZlcnNpb246XCIxNi42LjBcIixfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDp7UmVhY3RDdXJyZW50T3duZXI6Syxhc3NpZ246a319LFk9e2RlZmF1bHQ6WH0sWj1ZJiZYfHxZO21vZHVsZS5leHBvcnRzPVouZGVmYXVsdHx8WjtcbiIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY2hlY2tEQ0UoKSB7XG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbiAgaWYgKFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gPT09ICd1bmRlZmluZWQnIHx8XG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuNi4wXG4gKiByZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4vKlxuIE1vZGVybml6ciAzLjAuMHByZSAoQ3VzdG9tIEJ1aWxkKSB8IE1JVFxuKi9cbid1c2Ugc3RyaWN0Jzt2YXIgYWE9cmVxdWlyZShcInJlYWN0XCIpLG49cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksZGE9cmVxdWlyZShcInNjaGVkdWxlclwiKTtmdW5jdGlvbiBlYShhLGIsYyxkLGUsZixnLGgpe2lmKCFhKXthPXZvaWQgMDtpZih2b2lkIDA9PT1iKWE9RXJyb3IoXCJNaW5pZmllZCBleGNlcHRpb24gb2NjdXJyZWQ7IHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwiKTtlbHNle3ZhciBrPVtjLGQsZSxmLGcsaF0sbD0wO2E9RXJyb3IoYi5yZXBsYWNlKC8lcy9nLGZ1bmN0aW9uKCl7cmV0dXJuIGtbbCsrXX0pKTthLm5hbWU9XCJJbnZhcmlhbnQgVmlvbGF0aW9uXCJ9YS5mcmFtZXNUb1BvcD0xO3Rocm93IGE7fX1cbmZ1bmN0aW9uIHIoYSl7Zm9yKHZhciBiPWFyZ3VtZW50cy5sZW5ndGgtMSxjPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxkPTA7ZDxiO2QrKyljKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tkKzFdKTtlYSghMSxcIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCAlcyBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuIFwiLGMpfWFhP3ZvaWQgMDpyKFwiMjI3XCIpO2Z1bmN0aW9uIGZhKGEsYixjLGQsZSxmLGcsaCxrKXt2YXIgbD1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMyk7dHJ5e2IuYXBwbHkoYyxsKX1jYXRjaChtKXt0aGlzLm9uRXJyb3IobSl9fVxudmFyIGhhPSExLGlhPW51bGwsamE9ITEsa2E9bnVsbCxsYT17b25FcnJvcjpmdW5jdGlvbihhKXtoYT0hMDtpYT1hfX07ZnVuY3Rpb24gbWEoYSxiLGMsZCxlLGYsZyxoLGspe2hhPSExO2lhPW51bGw7ZmEuYXBwbHkobGEsYXJndW1lbnRzKX1mdW5jdGlvbiBuYShhLGIsYyxkLGUsZixnLGgsayl7bWEuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKGhhKXtpZihoYSl7dmFyIGw9aWE7aGE9ITE7aWE9bnVsbH1lbHNlIHIoXCIxOThcIiksbD12b2lkIDA7amF8fChqYT0hMCxrYT1sKX19dmFyIG9hPW51bGwscGE9e307XG5mdW5jdGlvbiBxYSgpe2lmKG9hKWZvcih2YXIgYSBpbiBwYSl7dmFyIGI9cGFbYV0sYz1vYS5pbmRleE9mKGEpOy0xPGM/dm9pZCAwOnIoXCI5NlwiLGEpO2lmKCFyYVtjXSl7Yi5leHRyYWN0RXZlbnRzP3ZvaWQgMDpyKFwiOTdcIixhKTtyYVtjXT1iO2M9Yi5ldmVudFR5cGVzO2Zvcih2YXIgZCBpbiBjKXt2YXIgZT12b2lkIDA7dmFyIGY9Y1tkXSxnPWIsaD1kO3NhLmhhc093blByb3BlcnR5KGgpP3IoXCI5OVwiLGgpOnZvaWQgMDtzYVtoXT1mO3ZhciBrPWYucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM7aWYoayl7Zm9yKGUgaW4gaylrLmhhc093blByb3BlcnR5KGUpJiZ0YShrW2VdLGcsaCk7ZT0hMH1lbHNlIGYucmVnaXN0cmF0aW9uTmFtZT8odGEoZi5yZWdpc3RyYXRpb25OYW1lLGcsaCksZT0hMCk6ZT0hMTtlP3ZvaWQgMDpyKFwiOThcIixkLGEpfX19fVxuZnVuY3Rpb24gdGEoYSxiLGMpe3VhW2FdP3IoXCIxMDBcIixhKTp2b2lkIDA7dWFbYV09Yjt2YVthXT1iLmV2ZW50VHlwZXNbY10uZGVwZW5kZW5jaWVzfXZhciByYT1bXSxzYT17fSx1YT17fSx2YT17fSx3YT1udWxsLHhhPW51bGwseWE9bnVsbDtmdW5jdGlvbiB6YShhLGIsYyxkKXtiPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PXlhKGQpO25hKGIsYyx2b2lkIDAsYSk7YS5jdXJyZW50VGFyZ2V0PW51bGx9ZnVuY3Rpb24gQWEoYSxiKXtudWxsPT1iP3IoXCIzMFwiKTp2b2lkIDA7aWYobnVsbD09YSlyZXR1cm4gYjtpZihBcnJheS5pc0FycmF5KGEpKXtpZihBcnJheS5pc0FycmF5KGIpKXJldHVybiBhLnB1c2guYXBwbHkoYSxiKSxhO2EucHVzaChiKTtyZXR1cm4gYX1yZXR1cm4gQXJyYXkuaXNBcnJheShiKT9bYV0uY29uY2F0KGIpOlthLGJdfVxuZnVuY3Rpb24gQmEoYSxiLGMpe0FycmF5LmlzQXJyYXkoYSk/YS5mb3JFYWNoKGIsYyk6YSYmYi5jYWxsKGMsYSl9dmFyIENhPW51bGw7ZnVuY3Rpb24gRGEoYSxiKXtpZihhKXt2YXIgYz1hLl9kaXNwYXRjaExpc3RlbmVycyxkPWEuX2Rpc3BhdGNoSW5zdGFuY2VzO2lmKEFycmF5LmlzQXJyYXkoYykpZm9yKHZhciBlPTA7ZTxjLmxlbmd0aCYmIWEuaXNQcm9wYWdhdGlvblN0b3BwZWQoKTtlKyspemEoYSxiLGNbZV0sZFtlXSk7ZWxzZSBjJiZ6YShhLGIsYyxkKTthLl9kaXNwYXRjaExpc3RlbmVycz1udWxsO2EuX2Rpc3BhdGNoSW5zdGFuY2VzPW51bGw7YS5pc1BlcnNpc3RlbnQoKXx8YS5jb25zdHJ1Y3Rvci5yZWxlYXNlKGEpfX1mdW5jdGlvbiBFYShhKXtyZXR1cm4gRGEoYSwhMCl9ZnVuY3Rpb24gRmEoYSl7cmV0dXJuIERhKGEsITEpfVxudmFyIEdhPXtpbmplY3RFdmVudFBsdWdpbk9yZGVyOmZ1bmN0aW9uKGEpe29hP3IoXCIxMDFcIik6dm9pZCAwO29hPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGEpO3FhKCl9LGluamVjdEV2ZW50UGx1Z2luc0J5TmFtZTpmdW5jdGlvbihhKXt2YXIgYj0hMSxjO2ZvcihjIGluIGEpaWYoYS5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9YVtjXTtwYS5oYXNPd25Qcm9wZXJ0eShjKSYmcGFbY109PT1kfHwocGFbY10/cihcIjEwMlwiLGMpOnZvaWQgMCxwYVtjXT1kLGI9ITApfWImJnFhKCl9fTtcbmZ1bmN0aW9uIEhhKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7aWYoIWMpcmV0dXJuIG51bGw7dmFyIGQ9d2EoYyk7aWYoIWQpcmV0dXJuIG51bGw7Yz1kW2JdO2E6c3dpdGNoKGIpe2Nhc2UgXCJvbkNsaWNrXCI6Y2FzZSBcIm9uQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tcIjpjYXNlIFwib25Eb3VibGVDbGlja0NhcHR1cmVcIjpjYXNlIFwib25Nb3VzZURvd25cIjpjYXNlIFwib25Nb3VzZURvd25DYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlVXBcIjpjYXNlIFwib25Nb3VzZVVwQ2FwdHVyZVwiOihkPSFkLmRpc2FibGVkKXx8KGE9YS50eXBlLGQ9IShcImJ1dHRvblwiPT09YXx8XCJpbnB1dFwiPT09YXx8XCJzZWxlY3RcIj09PWF8fFwidGV4dGFyZWFcIj09PWEpKTthPSFkO2JyZWFrIGE7ZGVmYXVsdDphPSExfWlmKGEpcmV0dXJuIG51bGw7YyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGM/cihcIjIzMVwiLGIsdHlwZW9mIGMpOnZvaWQgMDtcbnJldHVybiBjfWZ1bmN0aW9uIElhKGEsYil7bnVsbCE9PWEmJihDYT1BYShDYSxhKSk7YT1DYTtDYT1udWxsO2lmKGEmJihiP0JhKGEsRWEpOkJhKGEsRmEpLENhP3IoXCI5NVwiKTp2b2lkIDAsamEpKXRocm93IGI9a2EsamE9ITEsa2E9bnVsbCxiO312YXIgS2E9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMiksTGE9XCJfX3JlYWN0SW50ZXJuYWxJbnN0YW5jZSRcIitLYSxNYT1cIl9fcmVhY3RFdmVudEhhbmRsZXJzJFwiK0thO2Z1bmN0aW9uIE5hKGEpe2lmKGFbTGFdKXJldHVybiBhW0xhXTtmb3IoOyFhW0xhXTspaWYoYS5wYXJlbnROb2RlKWE9YS5wYXJlbnROb2RlO2Vsc2UgcmV0dXJuIG51bGw7YT1hW0xhXTtyZXR1cm4gNT09PWEudGFnfHw2PT09YS50YWc/YTpudWxsfWZ1bmN0aW9uIE9hKGEpe2E9YVtMYV07cmV0dXJuIWF8fDUhPT1hLnRhZyYmNiE9PWEudGFnP251bGw6YX1cbmZ1bmN0aW9uIFBhKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhLnN0YXRlTm9kZTtyKFwiMzNcIil9ZnVuY3Rpb24gUWEoYSl7cmV0dXJuIGFbTWFdfHxudWxsfWZ1bmN0aW9uIFJhKGEpe2RvIGE9YS5yZXR1cm47d2hpbGUoYSYmNSE9PWEudGFnKTtyZXR1cm4gYT9hOm51bGx9ZnVuY3Rpb24gU2EoYSxiLGMpe2lmKGI9SGEoYSxjLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzW2JdKSljLl9kaXNwYXRjaExpc3RlbmVycz1BYShjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz1BYShjLl9kaXNwYXRjaEluc3RhbmNlcyxhKX1cbmZ1bmN0aW9uIFRhKGEpe2lmKGEmJmEuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMpe2Zvcih2YXIgYj1hLl90YXJnZXRJbnN0LGM9W107YjspYy5wdXNoKGIpLGI9UmEoYik7Zm9yKGI9Yy5sZW5ndGg7MDxiLS07KVNhKGNbYl0sXCJjYXB0dXJlZFwiLGEpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspU2EoY1tiXSxcImJ1YmJsZWRcIixhKX19ZnVuY3Rpb24gVWEoYSxiLGMpe2EmJmMmJmMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmKGI9SGEoYSxjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUpKSYmKGMuX2Rpc3BhdGNoTGlzdGVuZXJzPUFhKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPUFhKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpKX1mdW5jdGlvbiBWYShhKXthJiZhLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJlVhKGEuX3RhcmdldEluc3QsbnVsbCxhKX1cbmZ1bmN0aW9uIFdhKGEpe0JhKGEsVGEpfXZhciBYYT0hKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHwhd2luZG93LmRvY3VtZW50fHwhd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO2Z1bmN0aW9uIFlhKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7cmV0dXJuIGN9dmFyIFphPXthbmltYXRpb25lbmQ6WWEoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246WWEoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDpZYShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDpZYShcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LCRhPXt9LGFiPXt9O1xuWGEmJihhYj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSBaYS5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSBaYS5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSBaYS5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSBaYS50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO2Z1bmN0aW9uIGJiKGEpe2lmKCRhW2FdKXJldHVybiAkYVthXTtpZighWmFbYV0pcmV0dXJuIGE7dmFyIGI9WmFbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gYWIpcmV0dXJuICRhW2FdPWJbY107cmV0dXJuIGF9XG52YXIgY2I9YmIoXCJhbmltYXRpb25lbmRcIiksaWI9YmIoXCJhbmltYXRpb25pdGVyYXRpb25cIiksamI9YmIoXCJhbmltYXRpb25zdGFydFwiKSxrYj1iYihcInRyYW5zaXRpb25lbmRcIiksbGI9XCJhYm9ydCBjYW5wbGF5IGNhbnBsYXl0aHJvdWdoIGR1cmF0aW9uY2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGxvYWRlZGRhdGEgbG9hZGVkbWV0YWRhdGEgbG9hZHN0YXJ0IHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlY2hhbmdlIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VzcGVuZCB0aW1ldXBkYXRlIHZvbHVtZWNoYW5nZSB3YWl0aW5nXCIuc3BsaXQoXCIgXCIpLG1iPW51bGwsbmI9bnVsbCxvYj1udWxsO1xuZnVuY3Rpb24gcGIoKXtpZihvYilyZXR1cm4gb2I7dmFyIGEsYj1uYixjPWIubGVuZ3RoLGQsZT1cInZhbHVlXCJpbiBtYj9tYi52YWx1ZTptYi50ZXh0Q29udGVudCxmPWUubGVuZ3RoO2ZvcihhPTA7YTxjJiZiW2FdPT09ZVthXTthKyspO3ZhciBnPWMtYTtmb3IoZD0xO2Q8PWcmJmJbYy1kXT09PWVbZi1kXTtkKyspO3JldHVybiBvYj1lLnNsaWNlKGEsMTxkPzEtZDp2b2lkIDApfWZ1bmN0aW9uIHFiKCl7cmV0dXJuITB9ZnVuY3Rpb24gcmIoKXtyZXR1cm4hMX1cbmZ1bmN0aW9uIHkoYSxiLGMsZCl7dGhpcy5kaXNwYXRjaENvbmZpZz1hO3RoaXMuX3RhcmdldEluc3Q9Yjt0aGlzLm5hdGl2ZUV2ZW50PWM7YT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZTtmb3IodmFyIGUgaW4gYSlhLmhhc093blByb3BlcnR5KGUpJiYoKGI9YVtlXSk/dGhpc1tlXT1iKGMpOlwidGFyZ2V0XCI9PT1lP3RoaXMudGFyZ2V0PWQ6dGhpc1tlXT1jW2VdKTt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD0obnVsbCE9Yy5kZWZhdWx0UHJldmVudGVkP2MuZGVmYXVsdFByZXZlbnRlZDohMT09PWMucmV0dXJuVmFsdWUpP3FiOnJiO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9cmI7cmV0dXJuIHRoaXN9XG5uKHkucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiYoYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9cWIpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9cWIpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7dGhpcy5pc1BlcnNpc3RlbnQ9cWJ9LGlzUGVyc2lzdGVudDpyYixkZXN0cnVjdG9yOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2UsXG5iO2ZvcihiIGluIGEpdGhpc1tiXT1udWxsO3RoaXMubmF0aXZlRXZlbnQ9dGhpcy5fdGFyZ2V0SW5zdD10aGlzLmRpc3BhdGNoQ29uZmlnPW51bGw7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD10aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1yYjt0aGlzLl9kaXNwYXRjaEluc3RhbmNlcz10aGlzLl9kaXNwYXRjaExpc3RlbmVycz1udWxsfX0pO3kuSW50ZXJmYWNlPXt0eXBlOm51bGwsdGFyZ2V0Om51bGwsY3VycmVudFRhcmdldDpmdW5jdGlvbigpe3JldHVybiBudWxsfSxldmVudFBoYXNlOm51bGwsYnViYmxlczpudWxsLGNhbmNlbGFibGU6bnVsbCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOm51bGwsaXNUcnVzdGVkOm51bGx9O1xueS5leHRlbmQ9ZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYigpe31mdW5jdGlvbiBjKCl7cmV0dXJuIGQuYXBwbHkodGhpcyxhcmd1bWVudHMpfXZhciBkPXRoaXM7Yi5wcm90b3R5cGU9ZC5wcm90b3R5cGU7dmFyIGU9bmV3IGI7bihlLGMucHJvdG90eXBlKTtjLnByb3RvdHlwZT1lO2MucHJvdG90eXBlLmNvbnN0cnVjdG9yPWM7Yy5JbnRlcmZhY2U9bih7fSxkLkludGVyZmFjZSxhKTtjLmV4dGVuZD1kLmV4dGVuZDtzYihjKTtyZXR1cm4gY307c2IoeSk7ZnVuY3Rpb24gdGIoYSxiLGMsZCl7aWYodGhpcy5ldmVudFBvb2wubGVuZ3RoKXt2YXIgZT10aGlzLmV2ZW50UG9vbC5wb3AoKTt0aGlzLmNhbGwoZSxhLGIsYyxkKTtyZXR1cm4gZX1yZXR1cm4gbmV3IHRoaXMoYSxiLGMsZCl9ZnVuY3Rpb24gdWIoYSl7YSBpbnN0YW5jZW9mIHRoaXM/dm9pZCAwOnIoXCIyNzlcIik7YS5kZXN0cnVjdG9yKCk7MTA+dGhpcy5ldmVudFBvb2wubGVuZ3RoJiZ0aGlzLmV2ZW50UG9vbC5wdXNoKGEpfVxuZnVuY3Rpb24gc2IoYSl7YS5ldmVudFBvb2w9W107YS5nZXRQb29sZWQ9dGI7YS5yZWxlYXNlPXVifXZhciB2Yj15LmV4dGVuZCh7ZGF0YTpudWxsfSksd2I9eS5leHRlbmQoe2RhdGE6bnVsbH0pLHhiPVs5LDEzLDI3LDMyXSx5Yj1YYSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3csemI9bnVsbDtYYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYoemI9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTtcbnZhciBBYj1YYSYmXCJUZXh0RXZlbnRcImluIHdpbmRvdyYmIXpiLEJiPVhhJiYoIXlifHx6YiYmODx6YiYmMTE+PXpiKSxDYj1TdHJpbmcuZnJvbUNoYXJDb2RlKDMyKSxEYj17YmVmb3JlSW5wdXQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25CZWZvcmVJbnB1dFwiLGNhcHR1cmVkOlwib25CZWZvcmVJbnB1dENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltcImNvbXBvc2l0aW9uZW5kXCIsXCJrZXlwcmVzc1wiLFwidGV4dElucHV0XCIsXCJwYXN0ZVwiXX0sY29tcG9zaXRpb25FbmQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvbkVuZFwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvbkVuZENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbmVuZCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25TdGFydDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRcIixcbmNhcHR1cmVkOlwib25Db21wb3NpdGlvblN0YXJ0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uVXBkYXRlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb251cGRhdGUga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9fSxFYj0hMTtcbmZ1bmN0aW9uIEZiKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJrZXl1cFwiOnJldHVybi0xIT09eGIuaW5kZXhPZihiLmtleUNvZGUpO2Nhc2UgXCJrZXlkb3duXCI6cmV0dXJuIDIyOSE9PWIua2V5Q29kZTtjYXNlIFwia2V5cHJlc3NcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcImJsdXJcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiBHYihhKXthPWEuZGV0YWlsO3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmXCJkYXRhXCJpbiBhP2EuZGF0YTpudWxsfXZhciBIYj0hMTtmdW5jdGlvbiBLYihhLGIpe3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gR2IoYik7Y2FzZSBcImtleXByZXNzXCI6aWYoMzIhPT1iLndoaWNoKXJldHVybiBudWxsO0ViPSEwO3JldHVybiBDYjtjYXNlIFwidGV4dElucHV0XCI6cmV0dXJuIGE9Yi5kYXRhLGE9PT1DYiYmRWI/bnVsbDphO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24gTGIoYSxiKXtpZihIYilyZXR1cm5cImNvbXBvc2l0aW9uZW5kXCI9PT1hfHwheWImJkZiKGEsYik/KGE9cGIoKSxvYj1uYj1tYj1udWxsLEhiPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJwYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBCYiYmXCJrb1wiIT09Yi5sb2NhbGU/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgTWI9e2V2ZW50VHlwZXM6RGIsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT12b2lkIDA7dmFyIGY9dm9pZCAwO2lmKHliKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOmU9RGIuY29tcG9zaXRpb25TdGFydDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOmU9RGIuY29tcG9zaXRpb25FbmQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjplPURiLmNvbXBvc2l0aW9uVXBkYXRlO2JyZWFrIGJ9ZT12b2lkIDB9ZWxzZSBIYj9GYihhLGMpJiYoZT1EYi5jb21wb3NpdGlvbkVuZCk6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihlPURiLmNvbXBvc2l0aW9uU3RhcnQpO2U/KEJiJiZcImtvXCIhPT1jLmxvY2FsZSYmKEhifHxlIT09RGIuY29tcG9zaXRpb25TdGFydD9lPT09RGIuY29tcG9zaXRpb25FbmQmJkhiJiYoZj1wYigpKToobWI9ZCxuYj1cInZhbHVlXCJpbiBtYj9tYi52YWx1ZTptYi50ZXh0Q29udGVudCxIYj1cbiEwKSksZT12Yi5nZXRQb29sZWQoZSxiLGMsZCksZj9lLmRhdGE9ZjooZj1HYihjKSxudWxsIT09ZiYmKGUuZGF0YT1mKSksV2EoZSksZj1lKTpmPW51bGw7KGE9QWI/S2IoYSxjKTpMYihhLGMpKT8oYj13Yi5nZXRQb29sZWQoRGIuYmVmb3JlSW5wdXQsYixjLGQpLGIuZGF0YT1hLFdhKGIpKTpiPW51bGw7cmV0dXJuIG51bGw9PT1mP2I6bnVsbD09PWI/ZjpbZixiXX19LE5iPW51bGwsT2I9bnVsbCxQYj1udWxsO2Z1bmN0aW9uIFZiKGEpe2lmKGE9eGEoYSkpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBOYj9yKFwiMjgwXCIpOnZvaWQgMDt2YXIgYj13YShhLnN0YXRlTm9kZSk7TmIoYS5zdGF0ZU5vZGUsYS50eXBlLGIpfX1mdW5jdGlvbiBXYihhKXtPYj9QYj9QYi5wdXNoKGEpOlBiPVthXTpPYj1hfWZ1bmN0aW9uIFhiKCl7aWYoT2Ipe3ZhciBhPU9iLGI9UGI7UGI9T2I9bnVsbDtWYihhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspVmIoYlthXSl9fVxuZnVuY3Rpb24gWWIoYSxiKXtyZXR1cm4gYShiKX1mdW5jdGlvbiBaYihhLGIsYyl7cmV0dXJuIGEoYixjKX1mdW5jdGlvbiAkYigpe312YXIgYWM9ITE7ZnVuY3Rpb24gYmMoYSxiKXtpZihhYylyZXR1cm4gYShiKTthYz0hMDt0cnl7cmV0dXJuIFliKGEsYil9ZmluYWxseXtpZihhYz0hMSxudWxsIT09T2J8fG51bGwhPT1QYikkYigpLFhiKCl9fXZhciBjYz17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiBkYyhhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIWNjW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1cbmZ1bmN0aW9uIGVjKGEpe2E9YS50YXJnZXR8fGEuc3JjRWxlbWVudHx8d2luZG93O2EuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihhPWEuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpO3JldHVybiAzPT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YX1mdW5jdGlvbiBmYyhhKXtpZighWGEpcmV0dXJuITE7YT1cIm9uXCIrYTt2YXIgYj1hIGluIGRvY3VtZW50O2J8fChiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYi5zZXRBdHRyaWJ1dGUoYSxcInJldHVybjtcIiksYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgYlthXSk7cmV0dXJuIGJ9ZnVuY3Rpb24gZ2MoYSl7dmFyIGI9YS50eXBlO3JldHVybihhPWEubm9kZU5hbWUpJiZcImlucHV0XCI9PT1hLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1ifHxcInJhZGlvXCI9PT1iKX1cbmZ1bmN0aW9uIGhjKGEpe3ZhciBiPWdjKGEpP1wiY2hlY2tlZFwiOlwidmFsdWVcIixjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsYiksZD1cIlwiK2FbYl07aWYoIWEuaGFzT3duUHJvcGVydHkoYikmJlwidW5kZWZpbmVkXCIhPT10eXBlb2YgYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5zZXQpe3ZhciBlPWMuZ2V0LGY9Yy5zZXQ7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBlLmNhbGwodGhpcyl9LHNldDpmdW5jdGlvbihhKXtkPVwiXCIrYTtmLmNhbGwodGhpcyxhKX19KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtlbnVtZXJhYmxlOmMuZW51bWVyYWJsZX0pO3JldHVybntnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtkPVwiXCIrYX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKCl7YS5fdmFsdWVUcmFja2VyPVxubnVsbDtkZWxldGUgYVtiXX19fX1mdW5jdGlvbiBpYyhhKXthLl92YWx1ZVRyYWNrZXJ8fChhLl92YWx1ZVRyYWNrZXI9aGMoYSkpfWZ1bmN0aW9uIGpjKGEpe2lmKCFhKXJldHVybiExO3ZhciBiPWEuX3ZhbHVlVHJhY2tlcjtpZighYilyZXR1cm4hMDt2YXIgYz1iLmdldFZhbHVlKCk7dmFyIGQ9XCJcIjthJiYoZD1nYyhhKT9hLmNoZWNrZWQ/XCJ0cnVlXCI6XCJmYWxzZVwiOmEudmFsdWUpO2E9ZDtyZXR1cm4gYSE9PWM/KGIuc2V0VmFsdWUoYSksITApOiExfVxudmFyIGtjPWFhLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVELGxjPS9eKC4qKVtcXFxcXFwvXS8sRD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLG1jPUQ/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsbmM9RD9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LG9jPUQ/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LHBjPUQ/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LHFjPUQ/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LHJjPUQ/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LHNjPUQ/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAsdGM9RD9TeW1ib2wuZm9yKFwicmVhY3QuY29uY3VycmVudF9tb2RlXCIpOjYwMTExLHVjPUQ/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHZjPUQ/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOlxuNjAxMTMsd2M9RD9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSx4Yz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LHljPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiB6YyhhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9eWMmJmFbeWNdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9XG5mdW5jdGlvbiBBYyhhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fG51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKXJldHVybiBhO3N3aXRjaChhKXtjYXNlIHRjOnJldHVyblwiQ29uY3VycmVudE1vZGVcIjtjYXNlIG9jOnJldHVyblwiRnJhZ21lbnRcIjtjYXNlIG5jOnJldHVyblwiUG9ydGFsXCI7Y2FzZSBxYzpyZXR1cm5cIlByb2ZpbGVyXCI7Y2FzZSBwYzpyZXR1cm5cIlN0cmljdE1vZGVcIjtjYXNlIHZjOnJldHVyblwiU3VzcGVuc2VcIn1pZihcIm9iamVjdFwiPT09dHlwZW9mIGEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2Ugc2M6cmV0dXJuXCJDb250ZXh0LkNvbnN1bWVyXCI7Y2FzZSByYzpyZXR1cm5cIkNvbnRleHQuUHJvdmlkZXJcIjtjYXNlIHVjOnZhciBiPWEucmVuZGVyO2I9Yi5kaXNwbGF5TmFtZXx8Yi5uYW1lfHxcIlwiO3JldHVybiBhLmRpc3BsYXlOYW1lfHwoXCJcIiE9PWI/XCJGb3J3YXJkUmVmKFwiK2IrXG5cIilcIjpcIkZvcndhcmRSZWZcIik7Y2FzZSB3YzpyZXR1cm4gQWMoYS50eXBlKTtjYXNlIHhjOmlmKGE9MT09PWEuX3N0YXR1cz9hLl9yZXN1bHQ6bnVsbClyZXR1cm4gQWMoYSl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gQmMoYSl7dmFyIGI9XCJcIjtkb3thOnN3aXRjaChhLnRhZyl7Y2FzZSAyOmNhc2UgMTY6Y2FzZSAwOmNhc2UgMTpjYXNlIDU6Y2FzZSA4OnZhciBjPWEuX2RlYnVnT3duZXIsZD1hLl9kZWJ1Z1NvdXJjZSxlPUFjKGEudHlwZSk7dmFyIGY9bnVsbDtjJiYoZj1BYyhjLnR5cGUpKTtjPWU7ZT1cIlwiO2Q/ZT1cIiAoYXQgXCIrZC5maWxlTmFtZS5yZXBsYWNlKGxjLFwiXCIpK1wiOlwiK2QubGluZU51bWJlcitcIilcIjpmJiYoZT1cIiAoY3JlYXRlZCBieSBcIitmK1wiKVwiKTtmPVwiXFxuICAgIGluIFwiKyhjfHxcIlVua25vd25cIikrZTticmVhayBhO2RlZmF1bHQ6Zj1cIlwifWIrPWY7YT1hLnJldHVybn13aGlsZShhKTtyZXR1cm4gYn1cbnZhciBDYz0vXls6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRF1bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRcXC0uMC05XFx1MDBCN1xcdTAzMDAtXFx1MDM2RlxcdTIwM0YtXFx1MjA0MF0qJC8sRGM9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxFYz17fSxGYz17fTtcbmZ1bmN0aW9uIEdjKGEpe2lmKERjLmNhbGwoRmMsYSkpcmV0dXJuITA7aWYoRGMuY2FsbChFYyxhKSlyZXR1cm4hMTtpZihDYy50ZXN0KGEpKXJldHVybiBGY1thXT0hMDtFY1thXT0hMDtyZXR1cm4hMX1mdW5jdGlvbiBIYyhhLGIsYyxkKXtpZihudWxsIT09YyYmMD09PWMudHlwZSlyZXR1cm4hMTtzd2l0Y2godHlwZW9mIGIpe2Nhc2UgXCJmdW5jdGlvblwiOmNhc2UgXCJzeW1ib2xcIjpyZXR1cm4hMDtjYXNlIFwiYm9vbGVhblwiOmlmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpcmV0dXJuIWMuYWNjZXB0c0Jvb2xlYW5zO2E9YS50b0xvd2VyQ2FzZSgpLnNsaWNlKDAsNSk7cmV0dXJuXCJkYXRhLVwiIT09YSYmXCJhcmlhLVwiIT09YTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIEljKGEsYixjLGQpe2lmKG51bGw9PT1ifHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGJ8fEhjKGEsYixjLGQpKXJldHVybiEwO2lmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpc3dpdGNoKGMudHlwZSl7Y2FzZSAzOnJldHVybiFiO2Nhc2UgNDpyZXR1cm4hMT09PWI7Y2FzZSA1OnJldHVybiBpc05hTihiKTtjYXNlIDY6cmV0dXJuIGlzTmFOKGIpfHwxPmJ9cmV0dXJuITF9ZnVuY3Rpb24gRihhLGIsYyxkLGUpe3RoaXMuYWNjZXB0c0Jvb2xlYW5zPTI9PT1ifHwzPT09Ynx8ND09PWI7dGhpcy5hdHRyaWJ1dGVOYW1lPWQ7dGhpcy5hdHRyaWJ1dGVOYW1lc3BhY2U9ZTt0aGlzLm11c3RVc2VQcm9wZXJ0eT1jO3RoaXMucHJvcGVydHlOYW1lPWE7dGhpcy50eXBlPWJ9dmFyIEc9e307XG5cImNoaWxkcmVuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIGRlZmF1bHRWYWx1ZSBkZWZhdWx0Q2hlY2tlZCBpbm5lckhUTUwgc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nIHN1cHByZXNzSHlkcmF0aW9uV2FybmluZyBzdHlsZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0dbYV09bmV3IEYoYSwwLCExLGEsbnVsbCl9KTtbW1wiYWNjZXB0Q2hhcnNldFwiLFwiYWNjZXB0LWNoYXJzZXRcIl0sW1wiY2xhc3NOYW1lXCIsXCJjbGFzc1wiXSxbXCJodG1sRm9yXCIsXCJmb3JcIl0sW1wiaHR0cEVxdWl2XCIsXCJodHRwLWVxdWl2XCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWFbMF07R1tiXT1uZXcgRihiLDEsITEsYVsxXSxudWxsKX0pO1tcImNvbnRlbnRFZGl0YWJsZVwiLFwiZHJhZ2dhYmxlXCIsXCJzcGVsbENoZWNrXCIsXCJ2YWx1ZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0dbYV09bmV3IEYoYSwyLCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO1xuW1wiYXV0b1JldmVyc2VcIixcImV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWRcIixcImZvY3VzYWJsZVwiLFwicHJlc2VydmVBbHBoYVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0dbYV09bmV3IEYoYSwyLCExLGEsbnVsbCl9KTtcImFsbG93RnVsbFNjcmVlbiBhc3luYyBhdXRvRm9jdXMgYXV0b1BsYXkgY29udHJvbHMgZGVmYXVsdCBkZWZlciBkaXNhYmxlZCBmb3JtTm9WYWxpZGF0ZSBoaWRkZW4gbG9vcCBub01vZHVsZSBub1ZhbGlkYXRlIG9wZW4gcGxheXNJbmxpbmUgcmVhZE9ubHkgcmVxdWlyZWQgcmV2ZXJzZWQgc2NvcGVkIHNlYW1sZXNzIGl0ZW1TY29wZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0dbYV09bmV3IEYoYSwzLCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO1tcImNoZWNrZWRcIixcIm11bHRpcGxlXCIsXCJtdXRlZFwiLFwic2VsZWN0ZWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtHW2FdPW5ldyBGKGEsMywhMCxhLG51bGwpfSk7XG5bXCJjYXB0dXJlXCIsXCJkb3dubG9hZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0dbYV09bmV3IEYoYSw0LCExLGEsbnVsbCl9KTtbXCJjb2xzXCIsXCJyb3dzXCIsXCJzaXplXCIsXCJzcGFuXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7R1thXT1uZXcgRihhLDYsITEsYSxudWxsKX0pO1tcInJvd1NwYW5cIixcInN0YXJ0XCJdLmZvckVhY2goZnVuY3Rpb24oYSl7R1thXT1uZXcgRihhLDUsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7dmFyIE1jPS9bXFwtOl0oW2Etel0pL2c7ZnVuY3Rpb24gTmMoYSl7cmV0dXJuIGFbMV0udG9VcHBlckNhc2UoKX1cblwiYWNjZW50LWhlaWdodCBhbGlnbm1lbnQtYmFzZWxpbmUgYXJhYmljLWZvcm0gYmFzZWxpbmUtc2hpZnQgY2FwLWhlaWdodCBjbGlwLXBhdGggY2xpcC1ydWxlIGNvbG9yLWludGVycG9sYXRpb24gY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzIGNvbG9yLXByb2ZpbGUgY29sb3ItcmVuZGVyaW5nIGRvbWluYW50LWJhc2VsaW5lIGVuYWJsZS1iYWNrZ3JvdW5kIGZpbGwtb3BhY2l0eSBmaWxsLXJ1bGUgZmxvb2QtY29sb3IgZmxvb2Qtb3BhY2l0eSBmb250LWZhbWlseSBmb250LXNpemUgZm9udC1zaXplLWFkanVzdCBmb250LXN0cmV0Y2ggZm9udC1zdHlsZSBmb250LXZhcmlhbnQgZm9udC13ZWlnaHQgZ2x5cGgtbmFtZSBnbHlwaC1vcmllbnRhdGlvbi1ob3Jpem9udGFsIGdseXBoLW9yaWVudGF0aW9uLXZlcnRpY2FsIGhvcml6LWFkdi14IGhvcml6LW9yaWdpbi14IGltYWdlLXJlbmRlcmluZyBsZXR0ZXItc3BhY2luZyBsaWdodGluZy1jb2xvciBtYXJrZXItZW5kIG1hcmtlci1taWQgbWFya2VyLXN0YXJ0IG92ZXJsaW5lLXBvc2l0aW9uIG92ZXJsaW5lLXRoaWNrbmVzcyBwYWludC1vcmRlciBwYW5vc2UtMSBwb2ludGVyLWV2ZW50cyByZW5kZXJpbmctaW50ZW50IHNoYXBlLXJlbmRlcmluZyBzdG9wLWNvbG9yIHN0b3Atb3BhY2l0eSBzdHJpa2V0aHJvdWdoLXBvc2l0aW9uIHN0cmlrZXRocm91Z2gtdGhpY2tuZXNzIHN0cm9rZS1kYXNoYXJyYXkgc3Ryb2tlLWRhc2hvZmZzZXQgc3Ryb2tlLWxpbmVjYXAgc3Ryb2tlLWxpbmVqb2luIHN0cm9rZS1taXRlcmxpbWl0IHN0cm9rZS1vcGFjaXR5IHN0cm9rZS13aWR0aCB0ZXh0LWFuY2hvciB0ZXh0LWRlY29yYXRpb24gdGV4dC1yZW5kZXJpbmcgdW5kZXJsaW5lLXBvc2l0aW9uIHVuZGVybGluZS10aGlja25lc3MgdW5pY29kZS1iaWRpIHVuaWNvZGUtcmFuZ2UgdW5pdHMtcGVyLWVtIHYtYWxwaGFiZXRpYyB2LWhhbmdpbmcgdi1pZGVvZ3JhcGhpYyB2LW1hdGhlbWF0aWNhbCB2ZWN0b3ItZWZmZWN0IHZlcnQtYWR2LXkgdmVydC1vcmlnaW4teCB2ZXJ0LW9yaWdpbi15IHdvcmQtc3BhY2luZyB3cml0aW5nLW1vZGUgeG1sbnM6eGxpbmsgeC1oZWlnaHRcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UoTWMsXG5OYyk7R1tiXT1uZXcgRihiLDEsITEsYSxudWxsKX0pO1wieGxpbms6YWN0dWF0ZSB4bGluazphcmNyb2xlIHhsaW5rOmhyZWYgeGxpbms6cm9sZSB4bGluazpzaG93IHhsaW5rOnRpdGxlIHhsaW5rOnR5cGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UoTWMsTmMpO0dbYl09bmV3IEYoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIpfSk7W1wieG1sOmJhc2VcIixcInhtbDpsYW5nXCIsXCJ4bWw6c3BhY2VcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UoTWMsTmMpO0dbYl09bmV3IEYoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIil9KTtHLnRhYkluZGV4PW5ldyBGKFwidGFiSW5kZXhcIiwxLCExLFwidGFiaW5kZXhcIixudWxsKTtcbmZ1bmN0aW9uIE9jKGEsYixjLGQpe3ZhciBlPUcuaGFzT3duUHJvcGVydHkoYik/R1tiXTpudWxsO3ZhciBmPW51bGwhPT1lPzA9PT1lLnR5cGU6ZD8hMTohKDI8Yi5sZW5ndGgpfHxcIm9cIiE9PWJbMF0mJlwiT1wiIT09YlswXXx8XCJuXCIhPT1iWzFdJiZcIk5cIiE9PWJbMV0/ITE6ITA7Znx8KEljKGIsYyxlLGQpJiYoYz1udWxsKSxkfHxudWxsPT09ZT9HYyhiKSYmKG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOmEuc2V0QXR0cmlidXRlKGIsXCJcIitjKSk6ZS5tdXN0VXNlUHJvcGVydHk/YVtlLnByb3BlcnR5TmFtZV09bnVsbD09PWM/Mz09PWUudHlwZT8hMTpcIlwiOmM6KGI9ZS5hdHRyaWJ1dGVOYW1lLGQ9ZS5hdHRyaWJ1dGVOYW1lc3BhY2UsbnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6KGU9ZS50eXBlLGM9Mz09PWV8fDQ9PT1lJiYhMD09PWM/XCJcIjpcIlwiK2MsZD9hLnNldEF0dHJpYnV0ZU5TKGQsYixjKTphLnNldEF0dHJpYnV0ZShiLGMpKSkpfVxuZnVuY3Rpb24gUGMoYSl7c3dpdGNoKHR5cGVvZiBhKXtjYXNlIFwiYm9vbGVhblwiOmNhc2UgXCJudW1iZXJcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJ1bmRlZmluZWRcIjpyZXR1cm4gYTtkZWZhdWx0OnJldHVyblwiXCJ9fWZ1bmN0aW9uIFFjKGEsYil7dmFyIGM9Yi5jaGVja2VkO3JldHVybiBuKHt9LGIse2RlZmF1bHRDaGVja2VkOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLHZhbHVlOnZvaWQgMCxjaGVja2VkOm51bGwhPWM/YzphLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWR9KX1cbmZ1bmN0aW9uIFJjKGEsYil7dmFyIGM9bnVsbD09Yi5kZWZhdWx0VmFsdWU/XCJcIjpiLmRlZmF1bHRWYWx1ZSxkPW51bGwhPWIuY2hlY2tlZD9iLmNoZWNrZWQ6Yi5kZWZhdWx0Q2hlY2tlZDtjPVBjKG51bGwhPWIudmFsdWU/Yi52YWx1ZTpjKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxDaGVja2VkOmQsaW5pdGlhbFZhbHVlOmMsY29udHJvbGxlZDpcImNoZWNrYm94XCI9PT1iLnR5cGV8fFwicmFkaW9cIj09PWIudHlwZT9udWxsIT1iLmNoZWNrZWQ6bnVsbCE9Yi52YWx1ZX19ZnVuY3Rpb24gU2MoYSxiKXtiPWIuY2hlY2tlZDtudWxsIT1iJiZPYyhhLFwiY2hlY2tlZFwiLGIsITEpfVxuZnVuY3Rpb24gVGMoYSxiKXtTYyhhLGIpO3ZhciBjPVBjKGIudmFsdWUpLGQ9Yi50eXBlO2lmKG51bGwhPWMpaWYoXCJudW1iZXJcIj09PWQpe2lmKDA9PT1jJiZcIlwiPT09YS52YWx1ZXx8YS52YWx1ZSE9YylhLnZhbHVlPVwiXCIrY31lbHNlIGEudmFsdWUhPT1cIlwiK2MmJihhLnZhbHVlPVwiXCIrYyk7ZWxzZSBpZihcInN1Ym1pdFwiPT09ZHx8XCJyZXNldFwiPT09ZCl7YS5yZW1vdmVBdHRyaWJ1dGUoXCJ2YWx1ZVwiKTtyZXR1cm59Yi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpP1VjKGEsYi50eXBlLGMpOmIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikmJlVjKGEsYi50eXBlLFBjKGIuZGVmYXVsdFZhbHVlKSk7bnVsbD09Yi5jaGVja2VkJiZudWxsIT1iLmRlZmF1bHRDaGVja2VkJiYoYS5kZWZhdWx0Q2hlY2tlZD0hIWIuZGVmYXVsdENoZWNrZWQpfVxuZnVuY3Rpb24gYmQoYSxiLGMpe2lmKGIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKXx8Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSl7dmFyIGQ9Yi50eXBlO2lmKCEoXCJzdWJtaXRcIiE9PWQmJlwicmVzZXRcIiE9PWR8fHZvaWQgMCE9PWIudmFsdWUmJm51bGwhPT1iLnZhbHVlKSlyZXR1cm47Yj1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU7Y3x8Yj09PWEudmFsdWV8fChhLnZhbHVlPWIpO2EuZGVmYXVsdFZhbHVlPWJ9Yz1hLm5hbWU7XCJcIiE9PWMmJihhLm5hbWU9XCJcIik7YS5kZWZhdWx0Q2hlY2tlZD0hYS5kZWZhdWx0Q2hlY2tlZDthLmRlZmF1bHRDaGVja2VkPSEhYS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkO1wiXCIhPT1jJiYoYS5uYW1lPWMpfVxuZnVuY3Rpb24gVWMoYSxiLGMpe2lmKFwibnVtYmVyXCIhPT1ifHxhLm93bmVyRG9jdW1lbnQuYWN0aXZlRWxlbWVudCE9PWEpbnVsbD09Yz9hLmRlZmF1bHRWYWx1ZT1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU6YS5kZWZhdWx0VmFsdWUhPT1cIlwiK2MmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2MpfXZhciBjZD17Y2hhbmdlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ2hhbmdlXCIsY2FwdHVyZWQ6XCJvbkNoYW5nZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjaGFuZ2UgY2xpY2sgZm9jdXMgaW5wdXQga2V5ZG93biBrZXl1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fTtmdW5jdGlvbiBkZChhLGIsYyl7YT15LmdldFBvb2xlZChjZC5jaGFuZ2UsYSxiLGMpO2EudHlwZT1cImNoYW5nZVwiO1diKGMpO1dhKGEpO3JldHVybiBhfXZhciBlZD1udWxsLGZkPW51bGw7ZnVuY3Rpb24gZ2QoYSl7SWEoYSwhMSl9XG5mdW5jdGlvbiBoZChhKXt2YXIgYj1QYShhKTtpZihqYyhiKSlyZXR1cm4gYX1mdW5jdGlvbiBpZChhLGIpe2lmKFwiY2hhbmdlXCI9PT1hKXJldHVybiBifXZhciBqZD0hMTtYYSYmKGpkPWZjKFwiaW5wdXRcIikmJighZG9jdW1lbnQuZG9jdW1lbnRNb2RlfHw5PGRvY3VtZW50LmRvY3VtZW50TW9kZSkpO2Z1bmN0aW9uIGtkKCl7ZWQmJihlZC5kZXRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixsZCksZmQ9ZWQ9bnVsbCl9ZnVuY3Rpb24gbGQoYSl7XCJ2YWx1ZVwiPT09YS5wcm9wZXJ0eU5hbWUmJmhkKGZkKSYmKGE9ZGQoZmQsYSxlYyhhKSksYmMoZ2QsYSkpfWZ1bmN0aW9uIG1kKGEsYixjKXtcImZvY3VzXCI9PT1hPyhrZCgpLGVkPWIsZmQ9YyxlZC5hdHRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixsZCkpOlwiYmx1clwiPT09YSYma2QoKX1mdW5jdGlvbiBuZChhKXtpZihcInNlbGVjdGlvbmNoYW5nZVwiPT09YXx8XCJrZXl1cFwiPT09YXx8XCJrZXlkb3duXCI9PT1hKXJldHVybiBoZChmZCl9XG5mdW5jdGlvbiBvZChhLGIpe2lmKFwiY2xpY2tcIj09PWEpcmV0dXJuIGhkKGIpfWZ1bmN0aW9uIHBkKGEsYil7aWYoXCJpbnB1dFwiPT09YXx8XCJjaGFuZ2VcIj09PWEpcmV0dXJuIGhkKGIpfVxudmFyIHFkPXtldmVudFR5cGVzOmNkLF9pc0lucHV0RXZlbnRTdXBwb3J0ZWQ6amQsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1iP1BhKGIpOndpbmRvdyxmPXZvaWQgMCxnPXZvaWQgMCxoPWUubm9kZU5hbWUmJmUubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcInNlbGVjdFwiPT09aHx8XCJpbnB1dFwiPT09aCYmXCJmaWxlXCI9PT1lLnR5cGU/Zj1pZDpkYyhlKT9qZD9mPXBkOihmPW5kLGc9bWQpOihoPWUubm9kZU5hbWUpJiZcImlucHV0XCI9PT1oLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1lLnR5cGV8fFwicmFkaW9cIj09PWUudHlwZSkmJihmPW9kKTtpZihmJiYoZj1mKGEsYikpKXJldHVybiBkZChmLGMsZCk7ZyYmZyhhLGUsYik7XCJibHVyXCI9PT1hJiYoYT1lLl93cmFwcGVyU3RhdGUpJiZhLmNvbnRyb2xsZWQmJlwibnVtYmVyXCI9PT1lLnR5cGUmJlVjKGUsXCJudW1iZXJcIixlLnZhbHVlKX19LHJkPXkuZXh0ZW5kKHt2aWV3Om51bGwsZGV0YWlsOm51bGx9KSxzZD17QWx0OlwiYWx0S2V5XCIsXG5Db250cm9sOlwiY3RybEtleVwiLE1ldGE6XCJtZXRhS2V5XCIsU2hpZnQ6XCJzaGlmdEtleVwifTtmdW5jdGlvbiB0ZChhKXt2YXIgYj10aGlzLm5hdGl2ZUV2ZW50O3JldHVybiBiLmdldE1vZGlmaWVyU3RhdGU/Yi5nZXRNb2RpZmllclN0YXRlKGEpOihhPXNkW2FdKT8hIWJbYV06ITF9ZnVuY3Rpb24gdWQoKXtyZXR1cm4gdGR9XG52YXIgdmQ9MCx3ZD0wLHhkPSExLHlkPSExLHpkPXJkLmV4dGVuZCh7c2NyZWVuWDpudWxsLHNjcmVlblk6bnVsbCxjbGllbnRYOm51bGwsY2xpZW50WTpudWxsLHBhZ2VYOm51bGwscGFnZVk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTp1ZCxidXR0b246bnVsbCxidXR0b25zOm51bGwscmVsYXRlZFRhcmdldDpmdW5jdGlvbihhKXtyZXR1cm4gYS5yZWxhdGVkVGFyZ2V0fHwoYS5mcm9tRWxlbWVudD09PWEuc3JjRWxlbWVudD9hLnRvRWxlbWVudDphLmZyb21FbGVtZW50KX0sbW92ZW1lbnRYOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRYXCJpbiBhKXJldHVybiBhLm1vdmVtZW50WDt2YXIgYj12ZDt2ZD1hLnNjcmVlblg7cmV0dXJuIHhkP1wibW91c2Vtb3ZlXCI9PT1hLnR5cGU/YS5zY3JlZW5YLWI6MDooeGQ9ITAsMCl9LG1vdmVtZW50WTpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WVwiaW4gYSlyZXR1cm4gYS5tb3ZlbWVudFk7XG52YXIgYj13ZDt3ZD1hLnNjcmVlblk7cmV0dXJuIHlkP1wibW91c2Vtb3ZlXCI9PT1hLnR5cGU/YS5zY3JlZW5ZLWI6MDooeWQ9ITAsMCl9fSksQWQ9emQuZXh0ZW5kKHtwb2ludGVySWQ6bnVsbCx3aWR0aDpudWxsLGhlaWdodDpudWxsLHByZXNzdXJlOm51bGwsdGFuZ2VudGlhbFByZXNzdXJlOm51bGwsdGlsdFg6bnVsbCx0aWx0WTpudWxsLHR3aXN0Om51bGwscG9pbnRlclR5cGU6bnVsbCxpc1ByaW1hcnk6bnVsbH0pLEJkPXttb3VzZUVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUVudGVyXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LG1vdXNlTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlTGVhdmVcIixkZXBlbmRlbmNpZXM6W1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXX0scG9pbnRlckVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyRW50ZXJcIixkZXBlbmRlbmNpZXM6W1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl19LHBvaW50ZXJMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uUG9pbnRlckxlYXZlXCIsXG5kZXBlbmRlbmNpZXM6W1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl19fSxDZD17ZXZlbnRUeXBlczpCZCxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPVwibW91c2VvdmVyXCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hLGY9XCJtb3VzZW91dFwiPT09YXx8XCJwb2ludGVyb3V0XCI9PT1hO2lmKGUmJihjLnJlbGF0ZWRUYXJnZXR8fGMuZnJvbUVsZW1lbnQpfHwhZiYmIWUpcmV0dXJuIG51bGw7ZT1kLndpbmRvdz09PWQ/ZDooZT1kLm93bmVyRG9jdW1lbnQpP2UuZGVmYXVsdFZpZXd8fGUucGFyZW50V2luZG93OndpbmRvdztmPyhmPWIsYj0oYj1jLnJlbGF0ZWRUYXJnZXR8fGMudG9FbGVtZW50KT9OYShiKTpudWxsKTpmPW51bGw7aWYoZj09PWIpcmV0dXJuIG51bGw7dmFyIGc9dm9pZCAwLGg9dm9pZCAwLGs9dm9pZCAwLGw9dm9pZCAwO2lmKFwibW91c2VvdXRcIj09PWF8fFwibW91c2VvdmVyXCI9PT1hKWc9emQsaD1CZC5tb3VzZUxlYXZlLGs9QmQubW91c2VFbnRlcixsPVwibW91c2VcIjtcbmVsc2UgaWYoXCJwb2ludGVyb3V0XCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hKWc9QWQsaD1CZC5wb2ludGVyTGVhdmUsaz1CZC5wb2ludGVyRW50ZXIsbD1cInBvaW50ZXJcIjt2YXIgbT1udWxsPT1mP2U6UGEoZik7ZT1udWxsPT1iP2U6UGEoYik7YT1nLmdldFBvb2xlZChoLGYsYyxkKTthLnR5cGU9bCtcImxlYXZlXCI7YS50YXJnZXQ9bTthLnJlbGF0ZWRUYXJnZXQ9ZTtjPWcuZ2V0UG9vbGVkKGssYixjLGQpO2MudHlwZT1sK1wiZW50ZXJcIjtjLnRhcmdldD1lO2MucmVsYXRlZFRhcmdldD1tO2Q9YjtpZihmJiZkKWE6e2I9ZjtlPWQ7bD0wO2ZvcihnPWI7ZztnPVJhKGcpKWwrKztnPTA7Zm9yKGs9ZTtrO2s9UmEoaykpZysrO2Zvcig7MDxsLWc7KWI9UmEoYiksbC0tO2Zvcig7MDxnLWw7KWU9UmEoZSksZy0tO2Zvcig7bC0tOyl7aWYoYj09PWV8fGI9PT1lLmFsdGVybmF0ZSlicmVhayBhO2I9UmEoYik7ZT1SYShlKX1iPW51bGx9ZWxzZSBiPW51bGw7ZT1iO2ZvcihiPVtdO2YmJmYhPT1lOyl7bD1cbmYuYWx0ZXJuYXRlO2lmKG51bGwhPT1sJiZsPT09ZSlicmVhaztiLnB1c2goZik7Zj1SYShmKX1mb3IoZj1bXTtkJiZkIT09ZTspe2w9ZC5hbHRlcm5hdGU7aWYobnVsbCE9PWwmJmw9PT1lKWJyZWFrO2YucHVzaChkKTtkPVJhKGQpfWZvcihkPTA7ZDxiLmxlbmd0aDtkKyspVWEoYltkXSxcImJ1YmJsZWRcIixhKTtmb3IoZD1mLmxlbmd0aDswPGQtLTspVWEoZltkXSxcImNhcHR1cmVkXCIsYyk7cmV0dXJuW2EsY119fSxEZD1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O2Z1bmN0aW9uIEVkKGEsYil7cmV0dXJuIGE9PT1iPzAhPT1hfHwwIT09Ynx8MS9hPT09MS9iOmEhPT1hJiZiIT09Yn1cbmZ1bmN0aW9uIEZkKGEsYil7aWYoRWQoYSxiKSlyZXR1cm4hMDtpZihcIm9iamVjdFwiIT09dHlwZW9mIGF8fG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGJ8fG51bGw9PT1iKXJldHVybiExO3ZhciBjPU9iamVjdC5rZXlzKGEpLGQ9T2JqZWN0LmtleXMoYik7aWYoYy5sZW5ndGghPT1kLmxlbmd0aClyZXR1cm4hMTtmb3IoZD0wO2Q8Yy5sZW5ndGg7ZCsrKWlmKCFEZC5jYWxsKGIsY1tkXSl8fCFFZChhW2NbZF1dLGJbY1tkXV0pKXJldHVybiExO3JldHVybiEwfWZ1bmN0aW9uIEdkKGEpe3ZhciBiPWE7aWYoYS5hbHRlcm5hdGUpZm9yKDtiLnJldHVybjspYj1iLnJldHVybjtlbHNle2lmKDAhPT0oYi5lZmZlY3RUYWcmMikpcmV0dXJuIDE7Zm9yKDtiLnJldHVybjspaWYoYj1iLnJldHVybiwwIT09KGIuZWZmZWN0VGFnJjIpKXJldHVybiAxfXJldHVybiAzPT09Yi50YWc/MjozfWZ1bmN0aW9uIEhkKGEpezIhPT1HZChhKT9yKFwiMTg4XCIpOnZvaWQgMH1cbmZ1bmN0aW9uIElkKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2lmKCFiKXJldHVybiBiPUdkKGEpLDM9PT1iP3IoXCIxODhcIik6dm9pZCAwLDE9PT1iP251bGw6YTtmb3IodmFyIGM9YSxkPWI7Oyl7dmFyIGU9Yy5yZXR1cm4sZj1lP2UuYWx0ZXJuYXRlOm51bGw7aWYoIWV8fCFmKWJyZWFrO2lmKGUuY2hpbGQ9PT1mLmNoaWxkKXtmb3IodmFyIGc9ZS5jaGlsZDtnOyl7aWYoZz09PWMpcmV0dXJuIEhkKGUpLGE7aWYoZz09PWQpcmV0dXJuIEhkKGUpLGI7Zz1nLnNpYmxpbmd9cihcIjE4OFwiKX1pZihjLnJldHVybiE9PWQucmV0dXJuKWM9ZSxkPWY7ZWxzZXtnPSExO2Zvcih2YXIgaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZjtkPWU7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1mO2M9ZTticmVha31oPWguc2libGluZ31nP1xudm9pZCAwOnIoXCIxODlcIil9fWMuYWx0ZXJuYXRlIT09ZD9yKFwiMTkwXCIpOnZvaWQgMH0zIT09Yy50YWc/cihcIjE4OFwiKTp2b2lkIDA7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBKZChhKXthPUlkKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQpYi5jaGlsZC5yZXR1cm49YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoOyFiLnNpYmxpbmc7KXtpZighYi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfVxudmFyIEtkPXkuZXh0ZW5kKHthbmltYXRpb25OYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KSxMZD15LmV4dGVuZCh7Y2xpcGJvYXJkRGF0YTpmdW5jdGlvbihhKXtyZXR1cm5cImNsaXBib2FyZERhdGFcImluIGE/YS5jbGlwYm9hcmREYXRhOndpbmRvdy5jbGlwYm9hcmREYXRhfX0pLE1kPXJkLmV4dGVuZCh7cmVsYXRlZFRhcmdldDpudWxsfSk7ZnVuY3Rpb24gTmQoYSl7dmFyIGI9YS5rZXlDb2RlO1wiY2hhckNvZGVcImluIGE/KGE9YS5jaGFyQ29kZSwwPT09YSYmMTM9PT1iJiYoYT0xMykpOmE9YjsxMD09PWEmJihhPTEzKTtyZXR1cm4gMzI8PWF8fDEzPT09YT9hOjB9XG52YXIgT2Q9e0VzYzpcIkVzY2FwZVwiLFNwYWNlYmFyOlwiIFwiLExlZnQ6XCJBcnJvd0xlZnRcIixVcDpcIkFycm93VXBcIixSaWdodDpcIkFycm93UmlnaHRcIixEb3duOlwiQXJyb3dEb3duXCIsRGVsOlwiRGVsZXRlXCIsV2luOlwiT1NcIixNZW51OlwiQ29udGV4dE1lbnVcIixBcHBzOlwiQ29udGV4dE1lbnVcIixTY3JvbGw6XCJTY3JvbGxMb2NrXCIsTW96UHJpbnRhYmxlS2V5OlwiVW5pZGVudGlmaWVkXCJ9LFBkPXs4OlwiQmFja3NwYWNlXCIsOTpcIlRhYlwiLDEyOlwiQ2xlYXJcIiwxMzpcIkVudGVyXCIsMTY6XCJTaGlmdFwiLDE3OlwiQ29udHJvbFwiLDE4OlwiQWx0XCIsMTk6XCJQYXVzZVwiLDIwOlwiQ2Fwc0xvY2tcIiwyNzpcIkVzY2FwZVwiLDMyOlwiIFwiLDMzOlwiUGFnZVVwXCIsMzQ6XCJQYWdlRG93blwiLDM1OlwiRW5kXCIsMzY6XCJIb21lXCIsMzc6XCJBcnJvd0xlZnRcIiwzODpcIkFycm93VXBcIiwzOTpcIkFycm93UmlnaHRcIiw0MDpcIkFycm93RG93blwiLDQ1OlwiSW5zZXJ0XCIsNDY6XCJEZWxldGVcIiwxMTI6XCJGMVwiLDExMzpcIkYyXCIsMTE0OlwiRjNcIiwxMTU6XCJGNFwiLFxuMTE2OlwiRjVcIiwxMTc6XCJGNlwiLDExODpcIkY3XCIsMTE5OlwiRjhcIiwxMjA6XCJGOVwiLDEyMTpcIkYxMFwiLDEyMjpcIkYxMVwiLDEyMzpcIkYxMlwiLDE0NDpcIk51bUxvY2tcIiwxNDU6XCJTY3JvbGxMb2NrXCIsMjI0OlwiTWV0YVwifSxRZD1yZC5leHRlbmQoe2tleTpmdW5jdGlvbihhKXtpZihhLmtleSl7dmFyIGI9T2RbYS5rZXldfHxhLmtleTtpZihcIlVuaWRlbnRpZmllZFwiIT09YilyZXR1cm4gYn1yZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/KGE9TmQoYSksMTM9PT1hP1wiRW50ZXJcIjpTdHJpbmcuZnJvbUNoYXJDb2RlKGEpKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP1BkW2Eua2V5Q29kZV18fFwiVW5pZGVudGlmaWVkXCI6XCJcIn0sbG9jYXRpb246bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwscmVwZWF0Om51bGwsbG9jYWxlOm51bGwsZ2V0TW9kaWZpZXJTdGF0ZTp1ZCxjaGFyQ29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1cbmEudHlwZT9OZChhKTowfSxrZXlDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9LHdoaWNoOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT9OZChhKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfX0pLFJkPXpkLmV4dGVuZCh7ZGF0YVRyYW5zZmVyOm51bGx9KSxTZD1yZC5leHRlbmQoe3RvdWNoZXM6bnVsbCx0YXJnZXRUb3VjaGVzOm51bGwsY2hhbmdlZFRvdWNoZXM6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTp1ZH0pLFRkPXkuZXh0ZW5kKHtwcm9wZXJ0eU5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLFVkPXpkLmV4dGVuZCh7ZGVsdGFYOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFYXCJpbiBhP2EuZGVsdGFYOlwid2hlZWxEZWx0YVhcImluXG5hPy1hLndoZWVsRGVsdGFYOjB9LGRlbHRhWTpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWVwiaW4gYT9hLmRlbHRhWTpcIndoZWVsRGVsdGFZXCJpbiBhPy1hLndoZWVsRGVsdGFZOlwid2hlZWxEZWx0YVwiaW4gYT8tYS53aGVlbERlbHRhOjB9LGRlbHRhWjpudWxsLGRlbHRhTW9kZTpudWxsfSksVmQ9W1tcImFib3J0XCIsXCJhYm9ydFwiXSxbY2IsXCJhbmltYXRpb25FbmRcIl0sW2liLFwiYW5pbWF0aW9uSXRlcmF0aW9uXCJdLFtqYixcImFuaW1hdGlvblN0YXJ0XCJdLFtcImNhbnBsYXlcIixcImNhblBsYXlcIl0sW1wiY2FucGxheXRocm91Z2hcIixcImNhblBsYXlUaHJvdWdoXCJdLFtcImRyYWdcIixcImRyYWdcIl0sW1wiZHJhZ2VudGVyXCIsXCJkcmFnRW50ZXJcIl0sW1wiZHJhZ2V4aXRcIixcImRyYWdFeGl0XCJdLFtcImRyYWdsZWF2ZVwiLFwiZHJhZ0xlYXZlXCJdLFtcImRyYWdvdmVyXCIsXCJkcmFnT3ZlclwiXSxbXCJkdXJhdGlvbmNoYW5nZVwiLFwiZHVyYXRpb25DaGFuZ2VcIl0sW1wiZW1wdGllZFwiLFwiZW1wdGllZFwiXSxbXCJlbmNyeXB0ZWRcIixcImVuY3J5cHRlZFwiXSxcbltcImVuZGVkXCIsXCJlbmRlZFwiXSxbXCJlcnJvclwiLFwiZXJyb3JcIl0sW1wiZ290cG9pbnRlcmNhcHR1cmVcIixcImdvdFBvaW50ZXJDYXB0dXJlXCJdLFtcImxvYWRcIixcImxvYWRcIl0sW1wibG9hZGVkZGF0YVwiLFwibG9hZGVkRGF0YVwiXSxbXCJsb2FkZWRtZXRhZGF0YVwiLFwibG9hZGVkTWV0YWRhdGFcIl0sW1wibG9hZHN0YXJ0XCIsXCJsb2FkU3RhcnRcIl0sW1wibG9zdHBvaW50ZXJjYXB0dXJlXCIsXCJsb3N0UG9pbnRlckNhcHR1cmVcIl0sW1wibW91c2Vtb3ZlXCIsXCJtb3VzZU1vdmVcIl0sW1wibW91c2VvdXRcIixcIm1vdXNlT3V0XCJdLFtcIm1vdXNlb3ZlclwiLFwibW91c2VPdmVyXCJdLFtcInBsYXlpbmdcIixcInBsYXlpbmdcIl0sW1wicG9pbnRlcm1vdmVcIixcInBvaW50ZXJNb3ZlXCJdLFtcInBvaW50ZXJvdXRcIixcInBvaW50ZXJPdXRcIl0sW1wicG9pbnRlcm92ZXJcIixcInBvaW50ZXJPdmVyXCJdLFtcInByb2dyZXNzXCIsXCJwcm9ncmVzc1wiXSxbXCJzY3JvbGxcIixcInNjcm9sbFwiXSxbXCJzZWVraW5nXCIsXCJzZWVraW5nXCJdLFtcInN0YWxsZWRcIixcInN0YWxsZWRcIl0sXG5bXCJzdXNwZW5kXCIsXCJzdXNwZW5kXCJdLFtcInRpbWV1cGRhdGVcIixcInRpbWVVcGRhdGVcIl0sW1widG9nZ2xlXCIsXCJ0b2dnbGVcIl0sW1widG91Y2htb3ZlXCIsXCJ0b3VjaE1vdmVcIl0sW2tiLFwidHJhbnNpdGlvbkVuZFwiXSxbXCJ3YWl0aW5nXCIsXCJ3YWl0aW5nXCJdLFtcIndoZWVsXCIsXCJ3aGVlbFwiXV0sV2Q9e30sWGQ9e307ZnVuY3Rpb24gWWQoYSxiKXt2YXIgYz1hWzBdO2E9YVsxXTt2YXIgZD1cIm9uXCIrKGFbMF0udG9VcHBlckNhc2UoKSthLnNsaWNlKDEpKTtiPXtwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpkLGNhcHR1cmVkOmQrXCJDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbY10saXNJbnRlcmFjdGl2ZTpifTtXZFthXT1iO1hkW2NdPWJ9XG5bW1wiYmx1clwiLFwiYmx1clwiXSxbXCJjYW5jZWxcIixcImNhbmNlbFwiXSxbXCJjbGlja1wiLFwiY2xpY2tcIl0sW1wiY2xvc2VcIixcImNsb3NlXCJdLFtcImNvbnRleHRtZW51XCIsXCJjb250ZXh0TWVudVwiXSxbXCJjb3B5XCIsXCJjb3B5XCJdLFtcImN1dFwiLFwiY3V0XCJdLFtcImF1eGNsaWNrXCIsXCJhdXhDbGlja1wiXSxbXCJkYmxjbGlja1wiLFwiZG91YmxlQ2xpY2tcIl0sW1wiZHJhZ2VuZFwiLFwiZHJhZ0VuZFwiXSxbXCJkcmFnc3RhcnRcIixcImRyYWdTdGFydFwiXSxbXCJkcm9wXCIsXCJkcm9wXCJdLFtcImZvY3VzXCIsXCJmb2N1c1wiXSxbXCJpbnB1dFwiLFwiaW5wdXRcIl0sW1wiaW52YWxpZFwiLFwiaW52YWxpZFwiXSxbXCJrZXlkb3duXCIsXCJrZXlEb3duXCJdLFtcImtleXByZXNzXCIsXCJrZXlQcmVzc1wiXSxbXCJrZXl1cFwiLFwia2V5VXBcIl0sW1wibW91c2Vkb3duXCIsXCJtb3VzZURvd25cIl0sW1wibW91c2V1cFwiLFwibW91c2VVcFwiXSxbXCJwYXN0ZVwiLFwicGFzdGVcIl0sW1wicGF1c2VcIixcInBhdXNlXCJdLFtcInBsYXlcIixcInBsYXlcIl0sW1wicG9pbnRlcmNhbmNlbFwiLFwicG9pbnRlckNhbmNlbFwiXSxcbltcInBvaW50ZXJkb3duXCIsXCJwb2ludGVyRG93blwiXSxbXCJwb2ludGVydXBcIixcInBvaW50ZXJVcFwiXSxbXCJyYXRlY2hhbmdlXCIsXCJyYXRlQ2hhbmdlXCJdLFtcInJlc2V0XCIsXCJyZXNldFwiXSxbXCJzZWVrZWRcIixcInNlZWtlZFwiXSxbXCJzdWJtaXRcIixcInN1Ym1pdFwiXSxbXCJ0b3VjaGNhbmNlbFwiLFwidG91Y2hDYW5jZWxcIl0sW1widG91Y2hlbmRcIixcInRvdWNoRW5kXCJdLFtcInRvdWNoc3RhcnRcIixcInRvdWNoU3RhcnRcIl0sW1widm9sdW1lY2hhbmdlXCIsXCJ2b2x1bWVDaGFuZ2VcIl1dLmZvckVhY2goZnVuY3Rpb24oYSl7WWQoYSwhMCl9KTtWZC5mb3JFYWNoKGZ1bmN0aW9uKGEpe1lkKGEsITEpfSk7XG52YXIgWmQ9e2V2ZW50VHlwZXM6V2QsaXNJbnRlcmFjdGl2ZVRvcExldmVsRXZlbnRUeXBlOmZ1bmN0aW9uKGEpe2E9WGRbYV07cmV0dXJuIHZvaWQgMCE9PWEmJiEwPT09YS5pc0ludGVyYWN0aXZlfSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPVhkW2FdO2lmKCFlKXJldHVybiBudWxsO3N3aXRjaChhKXtjYXNlIFwia2V5cHJlc3NcIjppZigwPT09TmQoYykpcmV0dXJuIG51bGw7Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjphPVFkO2JyZWFrO2Nhc2UgXCJibHVyXCI6Y2FzZSBcImZvY3VzXCI6YT1NZDticmVhaztjYXNlIFwiY2xpY2tcIjppZigyPT09Yy5idXR0b24pcmV0dXJuIG51bGw7Y2FzZSBcImF1eGNsaWNrXCI6Y2FzZSBcImRibGNsaWNrXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJtb3VzZW1vdmVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJtb3VzZW91dFwiOmNhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwiY29udGV4dG1lbnVcIjphPXpkO2JyZWFrO2Nhc2UgXCJkcmFnXCI6Y2FzZSBcImRyYWdlbmRcIjpjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdleGl0XCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmNhc2UgXCJkcmFnb3ZlclwiOmNhc2UgXCJkcmFnc3RhcnRcIjpjYXNlIFwiZHJvcFwiOmE9XG5SZDticmVhaztjYXNlIFwidG91Y2hjYW5jZWxcIjpjYXNlIFwidG91Y2hlbmRcIjpjYXNlIFwidG91Y2htb3ZlXCI6Y2FzZSBcInRvdWNoc3RhcnRcIjphPVNkO2JyZWFrO2Nhc2UgY2I6Y2FzZSBpYjpjYXNlIGpiOmE9S2Q7YnJlYWs7Y2FzZSBrYjphPVRkO2JyZWFrO2Nhc2UgXCJzY3JvbGxcIjphPXJkO2JyZWFrO2Nhc2UgXCJ3aGVlbFwiOmE9VWQ7YnJlYWs7Y2FzZSBcImNvcHlcIjpjYXNlIFwiY3V0XCI6Y2FzZSBcInBhc3RlXCI6YT1MZDticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcInBvaW50ZXJjYW5jZWxcIjpjYXNlIFwicG9pbnRlcmRvd25cIjpjYXNlIFwicG9pbnRlcm1vdmVcIjpjYXNlIFwicG9pbnRlcm91dFwiOmNhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVydXBcIjphPUFkO2JyZWFrO2RlZmF1bHQ6YT15fWI9YS5nZXRQb29sZWQoZSxiLGMsZCk7V2EoYik7cmV0dXJuIGJ9fSwkZD1aZC5pc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGUsXG5hZT1bXTtmdW5jdGlvbiBiZShhKXt2YXIgYj1hLnRhcmdldEluc3QsYz1iO2Rve2lmKCFjKXthLmFuY2VzdG9ycy5wdXNoKGMpO2JyZWFrfXZhciBkO2ZvcihkPWM7ZC5yZXR1cm47KWQ9ZC5yZXR1cm47ZD0zIT09ZC50YWc/bnVsbDpkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2lmKCFkKWJyZWFrO2EuYW5jZXN0b3JzLnB1c2goYyk7Yz1OYShkKX13aGlsZShjKTtmb3IoYz0wO2M8YS5hbmNlc3RvcnMubGVuZ3RoO2MrKyl7Yj1hLmFuY2VzdG9yc1tjXTt2YXIgZT1lYyhhLm5hdGl2ZUV2ZW50KTtkPWEudG9wTGV2ZWxUeXBlO2Zvcih2YXIgZj1hLm5hdGl2ZUV2ZW50LGc9bnVsbCxoPTA7aDxyYS5sZW5ndGg7aCsrKXt2YXIgaz1yYVtoXTtrJiYoaz1rLmV4dHJhY3RFdmVudHMoZCxiLGYsZSkpJiYoZz1BYShnLGspKX1JYShnLCExKX19dmFyIGNlPSEwO1xuZnVuY3Rpb24gSChhLGIpe2lmKCFiKXJldHVybiBudWxsO3ZhciBjPSgkZChhKT9kZTplZSkuYmluZChudWxsLGEpO2IuYWRkRXZlbnRMaXN0ZW5lcihhLGMsITEpfWZ1bmN0aW9uIGdlKGEsYil7aWYoIWIpcmV0dXJuIG51bGw7dmFyIGM9KCRkKGEpP2RlOmVlKS5iaW5kKG51bGwsYSk7Yi5hZGRFdmVudExpc3RlbmVyKGEsYywhMCl9ZnVuY3Rpb24gZGUoYSxiKXtaYihlZSxhLGIpfVxuZnVuY3Rpb24gZWUoYSxiKXtpZihjZSl7dmFyIGM9ZWMoYik7Yz1OYShjKTtudWxsPT09Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBjLnRhZ3x8Mj09PUdkKGMpfHwoYz1udWxsKTtpZihhZS5sZW5ndGgpe3ZhciBkPWFlLnBvcCgpO2QudG9wTGV2ZWxUeXBlPWE7ZC5uYXRpdmVFdmVudD1iO2QudGFyZ2V0SW5zdD1jO2E9ZH1lbHNlIGE9e3RvcExldmVsVHlwZTphLG5hdGl2ZUV2ZW50OmIsdGFyZ2V0SW5zdDpjLGFuY2VzdG9yczpbXX07dHJ5e2JjKGJlLGEpfWZpbmFsbHl7YS50b3BMZXZlbFR5cGU9bnVsbCxhLm5hdGl2ZUV2ZW50PW51bGwsYS50YXJnZXRJbnN0PW51bGwsYS5hbmNlc3RvcnMubGVuZ3RoPTAsMTA+YWUubGVuZ3RoJiZhZS5wdXNoKGEpfX19dmFyIGhlPXt9LGllPTAsamU9XCJfcmVhY3RMaXN0ZW5lcnNJRFwiKyhcIlwiK01hdGgucmFuZG9tKCkpLnNsaWNlKDIpO1xuZnVuY3Rpb24ga2UoYSl7T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGEsamUpfHwoYVtqZV09aWUrKyxoZVthW2plXV09e30pO3JldHVybiBoZVthW2plXV19ZnVuY3Rpb24gbGUoYSl7YT1hfHwoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBkb2N1bWVudD9kb2N1bWVudDp2b2lkIDApO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDt0cnl7cmV0dXJuIGEuYWN0aXZlRWxlbWVudHx8YS5ib2R5fWNhdGNoKGIpe3JldHVybiBhLmJvZHl9fWZ1bmN0aW9uIG1lKGEpe2Zvcig7YSYmYS5maXJzdENoaWxkOylhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX1cbmZ1bmN0aW9uIG5lKGEsYil7dmFyIGM9bWUoYSk7YT0wO2Zvcih2YXIgZDtjOyl7aWYoMz09PWMubm9kZVR5cGUpe2Q9YStjLnRleHRDb250ZW50Lmxlbmd0aDtpZihhPD1iJiZkPj1iKXJldHVybntub2RlOmMsb2Zmc2V0OmItYX07YT1kfWE6e2Zvcig7Yzspe2lmKGMubmV4dFNpYmxpbmcpe2M9Yy5uZXh0U2libGluZzticmVhayBhfWM9Yy5wYXJlbnROb2RlfWM9dm9pZCAwfWM9bWUoYyl9fWZ1bmN0aW9uIG9lKGEsYil7cmV0dXJuIGEmJmI/YT09PWI/ITA6YSYmMz09PWEubm9kZVR5cGU/ITE6YiYmMz09PWIubm9kZVR5cGU/b2UoYSxiLnBhcmVudE5vZGUpOlwiY29udGFpbnNcImluIGE/YS5jb250YWlucyhiKTphLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uPyEhKGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikmMTYpOiExOiExfVxuZnVuY3Rpb24gcGUoKXtmb3IodmFyIGE9d2luZG93LGI9bGUoKTtiIGluc3RhbmNlb2YgYS5IVE1MSUZyYW1lRWxlbWVudDspe3RyeXthPWIuY29udGVudERvY3VtZW50LmRlZmF1bHRWaWV3fWNhdGNoKGMpe2JyZWFrfWI9bGUoYS5kb2N1bWVudCl9cmV0dXJuIGJ9ZnVuY3Rpb24gcWUoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiBiJiYoXCJpbnB1dFwiPT09YiYmKFwidGV4dFwiPT09YS50eXBlfHxcInNlYXJjaFwiPT09YS50eXBlfHxcInRlbFwiPT09YS50eXBlfHxcInVybFwiPT09YS50eXBlfHxcInBhc3N3b3JkXCI9PT1hLnR5cGUpfHxcInRleHRhcmVhXCI9PT1ifHxcInRydWVcIj09PWEuY29udGVudEVkaXRhYmxlKX1cbnZhciByZT1YYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLHNlPXtzZWxlY3Q6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25TZWxlY3RcIixjYXB0dXJlZDpcIm9uU2VsZWN0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXMga2V5ZG93biBrZXl1cCBtb3VzZWRvd24gbW91c2V1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fSx0ZT1udWxsLHVlPW51bGwsSGU9bnVsbCxJZT0hMTtcbmZ1bmN0aW9uIEplKGEsYil7dmFyIGM9Yi53aW5kb3c9PT1iP2IuZG9jdW1lbnQ6OT09PWIubm9kZVR5cGU/YjpiLm93bmVyRG9jdW1lbnQ7aWYoSWV8fG51bGw9PXRlfHx0ZSE9PWxlKGMpKXJldHVybiBudWxsO2M9dGU7XCJzZWxlY3Rpb25TdGFydFwiaW4gYyYmcWUoYyk/Yz17c3RhcnQ6Yy5zZWxlY3Rpb25TdGFydCxlbmQ6Yy5zZWxlY3Rpb25FbmR9OihjPShjLm93bmVyRG9jdW1lbnQmJmMub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8d2luZG93KS5nZXRTZWxlY3Rpb24oKSxjPXthbmNob3JOb2RlOmMuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6Yy5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmMuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmMuZm9jdXNPZmZzZXR9KTtyZXR1cm4gSGUmJkZkKEhlLGMpP251bGw6KEhlPWMsYT15LmdldFBvb2xlZChzZS5zZWxlY3QsdWUsYSxiKSxhLnR5cGU9XCJzZWxlY3RcIixhLnRhcmdldD10ZSxXYShhKSxhKX1cbnZhciBLZT17ZXZlbnRUeXBlczpzZSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWQud2luZG93PT09ZD9kLmRvY3VtZW50Ojk9PT1kLm5vZGVUeXBlP2Q6ZC5vd25lckRvY3VtZW50LGY7aWYoIShmPSFlKSl7YTp7ZT1rZShlKTtmPXZhLm9uU2VsZWN0O2Zvcih2YXIgZz0wO2c8Zi5sZW5ndGg7ZysrKXt2YXIgaD1mW2ddO2lmKCFlLmhhc093blByb3BlcnR5KGgpfHwhZVtoXSl7ZT0hMTticmVhayBhfX1lPSEwfWY9IWV9aWYoZilyZXR1cm4gbnVsbDtlPWI/UGEoYik6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNcIjppZihkYyhlKXx8XCJ0cnVlXCI9PT1lLmNvbnRlbnRFZGl0YWJsZSl0ZT1lLHVlPWIsSGU9bnVsbDticmVhaztjYXNlIFwiYmx1clwiOkhlPXVlPXRlPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOkllPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcImRyYWdlbmRcIjpyZXR1cm4gSWU9ITEsSmUoYyxkKTtjYXNlIFwic2VsZWN0aW9uY2hhbmdlXCI6aWYocmUpYnJlYWs7XG5jYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOnJldHVybiBKZShjLGQpfXJldHVybiBudWxsfX07R2EuaW5qZWN0RXZlbnRQbHVnaW5PcmRlcihcIlJlc3BvbmRlckV2ZW50UGx1Z2luIFNpbXBsZUV2ZW50UGx1Z2luIEVudGVyTGVhdmVFdmVudFBsdWdpbiBDaGFuZ2VFdmVudFBsdWdpbiBTZWxlY3RFdmVudFBsdWdpbiBCZWZvcmVJbnB1dEV2ZW50UGx1Z2luXCIuc3BsaXQoXCIgXCIpKTt3YT1RYTt4YT1PYTt5YT1QYTtHYS5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUoe1NpbXBsZUV2ZW50UGx1Z2luOlpkLEVudGVyTGVhdmVFdmVudFBsdWdpbjpDZCxDaGFuZ2VFdmVudFBsdWdpbjpxZCxTZWxlY3RFdmVudFBsdWdpbjpLZSxCZWZvcmVJbnB1dEV2ZW50UGx1Z2luOk1ifSk7ZnVuY3Rpb24gTGUoYSl7dmFyIGI9XCJcIjthYS5DaGlsZHJlbi5mb3JFYWNoKGEsZnVuY3Rpb24oYSl7bnVsbCE9YSYmKGIrPWEpfSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiBNZShhLGIpe2E9bih7Y2hpbGRyZW46dm9pZCAwfSxiKTtpZihiPUxlKGIuY2hpbGRyZW4pKWEuY2hpbGRyZW49YjtyZXR1cm4gYX1mdW5jdGlvbiBOZShhLGIsYyxkKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWJbXCIkXCIrY1tlXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyllPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWUmJihhW2NdLnNlbGVjdGVkPWUpLGUmJmQmJihhW2NdLmRlZmF1bHRTZWxlY3RlZD0hMCl9ZWxzZXtjPVwiXCIrUGMoYyk7Yj1udWxsO2ZvcihlPTA7ZTxhLmxlbmd0aDtlKyspe2lmKGFbZV0udmFsdWU9PT1jKXthW2VdLnNlbGVjdGVkPSEwO2QmJihhW2VdLmRlZmF1bHRTZWxlY3RlZD0hMCk7cmV0dXJufW51bGwhPT1ifHxhW2VdLmRpc2FibGVkfHwoYj1hW2VdKX1udWxsIT09YiYmKGIuc2VsZWN0ZWQ9ITApfX1cbmZ1bmN0aW9uIE9lKGEsYil7bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTD9yKFwiOTFcIik6dm9pZCAwO3JldHVybiBuKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIFBlKGEsYil7dmFyIGM9Yi52YWx1ZTtudWxsPT1jJiYoYz1iLmRlZmF1bHRWYWx1ZSxiPWIuY2hpbGRyZW4sbnVsbCE9YiYmKG51bGwhPWM/cihcIjkyXCIpOnZvaWQgMCxBcnJheS5pc0FycmF5KGIpJiYoMT49Yi5sZW5ndGg/dm9pZCAwOnIoXCI5M1wiKSxiPWJbMF0pLGM9YiksbnVsbD09YyYmKGM9XCJcIikpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbFZhbHVlOlBjKGMpfX1cbmZ1bmN0aW9uIFFlKGEsYil7dmFyIGM9UGMoYi52YWx1ZSksZD1QYyhiLmRlZmF1bHRWYWx1ZSk7bnVsbCE9YyYmKGM9XCJcIitjLGMhPT1hLnZhbHVlJiYoYS52YWx1ZT1jKSxudWxsPT1iLmRlZmF1bHRWYWx1ZSYmYS5kZWZhdWx0VmFsdWUhPT1jJiYoYS5kZWZhdWx0VmFsdWU9YykpO251bGwhPWQmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2QpfWZ1bmN0aW9uIFJlKGEpe3ZhciBiPWEudGV4dENvbnRlbnQ7Yj09PWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUmJihhLnZhbHVlPWIpfXZhciBTZT17aHRtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixtYXRobWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsc3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIn07XG5mdW5jdGlvbiBUZShhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fWZ1bmN0aW9uIFVlKGEsYil7cmV0dXJuIG51bGw9PWF8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9UZShiKTpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI9PT1hJiZcImZvcmVpZ25PYmplY3RcIj09PWI/XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI6YX1cbnZhciBWZT12b2lkIDAsV2U9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNU0FwcCYmTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24/ZnVuY3Rpb24oYixjLGQsZSl7TVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfTphfShmdW5jdGlvbihhLGIpe2lmKGEubmFtZXNwYWNlVVJJIT09U2Uuc3ZnfHxcImlubmVySFRNTFwiaW4gYSlhLmlubmVySFRNTD1iO2Vsc2V7VmU9VmV8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7VmUuaW5uZXJIVE1MPVwiPHN2Zz5cIitiK1wiPC9zdmc+XCI7Zm9yKGI9VmUuZmlyc3RDaGlsZDthLmZpcnN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKTtmb3IoO2IuZmlyc3RDaGlsZDspYS5hcHBlbmRDaGlsZChiLmZpcnN0Q2hpbGQpfX0pO1xuZnVuY3Rpb24gWGUoYSxiKXtpZihiKXt2YXIgYz1hLmZpcnN0Q2hpbGQ7aWYoYyYmYz09PWEubGFzdENoaWxkJiYzPT09Yy5ub2RlVHlwZSl7Yy5ub2RlVmFsdWU9YjtyZXR1cm59fWEudGV4dENvbnRlbnQ9Yn1cbnZhciBZZT17YW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6ITAsYm9yZGVySW1hZ2VPdXRzZXQ6ITAsYm9yZGVySW1hZ2VTbGljZTohMCxib3JkZXJJbWFnZVdpZHRoOiEwLGJveEZsZXg6ITAsYm94RmxleEdyb3VwOiEwLGJveE9yZGluYWxHcm91cDohMCxjb2x1bW5Db3VudDohMCxjb2x1bW5zOiEwLGZsZXg6ITAsZmxleEdyb3c6ITAsZmxleFBvc2l0aXZlOiEwLGZsZXhTaHJpbms6ITAsZmxleE5lZ2F0aXZlOiEwLGZsZXhPcmRlcjohMCxncmlkQXJlYTohMCxncmlkUm93OiEwLGdyaWRSb3dFbmQ6ITAsZ3JpZFJvd1NwYW46ITAsZ3JpZFJvd1N0YXJ0OiEwLGdyaWRDb2x1bW46ITAsZ3JpZENvbHVtbkVuZDohMCxncmlkQ29sdW1uU3BhbjohMCxncmlkQ29sdW1uU3RhcnQ6ITAsZm9udFdlaWdodDohMCxsaW5lQ2xhbXA6ITAsbGluZUhlaWdodDohMCxvcGFjaXR5OiEwLG9yZGVyOiEwLG9ycGhhbnM6ITAsdGFiU2l6ZTohMCx3aWRvd3M6ITAsekluZGV4OiEwLHpvb206ITAsZmlsbE9wYWNpdHk6ITAsXG5mbG9vZE9wYWNpdHk6ITAsc3RvcE9wYWNpdHk6ITAsc3Ryb2tlRGFzaGFycmF5OiEwLHN0cm9rZURhc2hvZmZzZXQ6ITAsc3Ryb2tlTWl0ZXJsaW1pdDohMCxzdHJva2VPcGFjaXR5OiEwLHN0cm9rZVdpZHRoOiEwfSxaZT1bXCJXZWJraXRcIixcIm1zXCIsXCJNb3pcIixcIk9cIl07T2JqZWN0LmtleXMoWWUpLmZvckVhY2goZnVuY3Rpb24oYSl7WmUuZm9yRWFjaChmdW5jdGlvbihiKXtiPWIrYS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSthLnN1YnN0cmluZygxKTtZZVtiXT1ZZVthXX0pfSk7XG5mdW5jdGlvbiAkZShhLGIpe2E9YS5zdHlsZTtmb3IodmFyIGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD0wPT09Yy5pbmRleE9mKFwiLS1cIik7dmFyIGU9Yzt2YXIgZj1iW2NdO2U9bnVsbD09Znx8XCJib29sZWFuXCI9PT10eXBlb2YgZnx8XCJcIj09PWY/XCJcIjpkfHxcIm51bWJlclwiIT09dHlwZW9mIGZ8fDA9PT1mfHxZZS5oYXNPd25Qcm9wZXJ0eShlKSYmWWVbZV0/KFwiXCIrZikudHJpbSgpOmYrXCJweFwiO1wiZmxvYXRcIj09PWMmJihjPVwiY3NzRmxvYXRcIik7ZD9hLnNldFByb3BlcnR5KGMsZSk6YVtjXT1lfX12YXIgYWY9bih7bWVudWl0ZW06ITB9LHthcmVhOiEwLGJhc2U6ITAsYnI6ITAsY29sOiEwLGVtYmVkOiEwLGhyOiEwLGltZzohMCxpbnB1dDohMCxrZXlnZW46ITAsbGluazohMCxtZXRhOiEwLHBhcmFtOiEwLHNvdXJjZTohMCx0cmFjazohMCx3YnI6ITB9KTtcbmZ1bmN0aW9uIGJmKGEsYil7YiYmKGFmW2FdJiYobnVsbCE9Yi5jaGlsZHJlbnx8bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTD9yKFwiMTM3XCIsYSxcIlwiKTp2b2lkIDApLG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJihudWxsIT1iLmNoaWxkcmVuP3IoXCI2MFwiKTp2b2lkIDAsXCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcIl9faHRtbFwiaW4gYi5kYW5nZXJvdXNseVNldElubmVySFRNTD92b2lkIDA6cihcIjYxXCIpKSxudWxsIT1iLnN0eWxlJiZcIm9iamVjdFwiIT09dHlwZW9mIGIuc3R5bGU/cihcIjYyXCIsXCJcIik6dm9pZCAwKX1cbmZ1bmN0aW9uIGNmKGEsYil7aWYoLTE9PT1hLmluZGV4T2YoXCItXCIpKXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYi5pcztzd2l0Y2goYSl7Y2FzZSBcImFubm90YXRpb24teG1sXCI6Y2FzZSBcImNvbG9yLXByb2ZpbGVcIjpjYXNlIFwiZm9udC1mYWNlXCI6Y2FzZSBcImZvbnQtZmFjZS1zcmNcIjpjYXNlIFwiZm9udC1mYWNlLXVyaVwiOmNhc2UgXCJmb250LWZhY2UtZm9ybWF0XCI6Y2FzZSBcImZvbnQtZmFjZS1uYW1lXCI6Y2FzZSBcIm1pc3NpbmctZ2x5cGhcIjpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiEwfX1cbmZ1bmN0aW9uIGRmKGEsYil7YT05PT09YS5ub2RlVHlwZXx8MTE9PT1hLm5vZGVUeXBlP2E6YS5vd25lckRvY3VtZW50O3ZhciBjPWtlKGEpO2I9dmFbYl07Zm9yKHZhciBkPTA7ZDxiLmxlbmd0aDtkKyspe3ZhciBlPWJbZF07aWYoIWMuaGFzT3duUHJvcGVydHkoZSl8fCFjW2VdKXtzd2l0Y2goZSl7Y2FzZSBcInNjcm9sbFwiOmdlKFwic2Nyb2xsXCIsYSk7YnJlYWs7Y2FzZSBcImZvY3VzXCI6Y2FzZSBcImJsdXJcIjpnZShcImZvY3VzXCIsYSk7Z2UoXCJibHVyXCIsYSk7Yy5ibHVyPSEwO2MuZm9jdXM9ITA7YnJlYWs7Y2FzZSBcImNhbmNlbFwiOmNhc2UgXCJjbG9zZVwiOmZjKGUpJiZnZShlLGEpO2JyZWFrO2Nhc2UgXCJpbnZhbGlkXCI6Y2FzZSBcInN1Ym1pdFwiOmNhc2UgXCJyZXNldFwiOmJyZWFrO2RlZmF1bHQ6LTE9PT1sYi5pbmRleE9mKGUpJiZIKGUsYSl9Y1tlXT0hMH19fWZ1bmN0aW9uIGVmKCl7fXZhciBmZj1udWxsLGdmPW51bGw7XG5mdW5jdGlvbiBoZihhLGIpe3N3aXRjaChhKXtjYXNlIFwiYnV0dG9uXCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJ0ZXh0YXJlYVwiOnJldHVybiEhYi5hdXRvRm9jdXN9cmV0dXJuITF9ZnVuY3Rpb24gamYoYSxiKXtyZXR1cm5cInRleHRhcmVhXCI9PT1hfHxcIm9wdGlvblwiPT09YXx8XCJub3NjcmlwdFwiPT09YXx8XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm51bWJlclwiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9PWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwuX19odG1sfXZhciBrZj1zZXRUaW1lb3V0LGxmPWNsZWFyVGltZW91dDtmdW5jdGlvbiBtZihhKXtmb3IoYT1hLm5leHRTaWJsaW5nO2EmJjEhPT1hLm5vZGVUeXBlJiYzIT09YS5ub2RlVHlwZTspYT1hLm5leHRTaWJsaW5nO3JldHVybiBhfVxuZnVuY3Rpb24gbmYoYSl7Zm9yKGE9YS5maXJzdENoaWxkO2EmJjEhPT1hLm5vZGVUeXBlJiYzIT09YS5ub2RlVHlwZTspYT1hLm5leHRTaWJsaW5nO3JldHVybiBhfW5ldyBTZXQ7dmFyIG9mPVtdLHBmPS0xO2Z1bmN0aW9uIEkoYSl7MD5wZnx8KGEuY3VycmVudD1vZltwZl0sb2ZbcGZdPW51bGwscGYtLSl9ZnVuY3Rpb24gSihhLGIpe3BmKys7b2ZbcGZdPWEuY3VycmVudDthLmN1cnJlbnQ9Yn12YXIgcWY9e30sSz17Y3VycmVudDpxZn0sTD17Y3VycmVudDohMX0scmY9cWY7XG5mdW5jdGlvbiBzZihhLGIpe3ZhciBjPWEudHlwZS5jb250ZXh0VHlwZXM7aWYoIWMpcmV0dXJuIHFmO3ZhciBkPWEuc3RhdGVOb2RlO2lmKGQmJmQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD09PWIpcmV0dXJuIGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ7dmFyIGU9e30sZjtmb3IoZiBpbiBjKWVbZl09YltmXTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9YixhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWUpO3JldHVybiBlfWZ1bmN0aW9uIE0oYSl7YT1hLmNoaWxkQ29udGV4dFR5cGVzO3JldHVybiBudWxsIT09YSYmdm9pZCAwIT09YX1mdW5jdGlvbiB0ZihhKXtJKEwsYSk7SShLLGEpfWZ1bmN0aW9uIHVmKGEpe0koTCxhKTtJKEssYSl9XG5mdW5jdGlvbiB2ZihhLGIsYyl7Sy5jdXJyZW50IT09cWY/cihcIjE2OFwiKTp2b2lkIDA7SihLLGIsYSk7SihMLGMsYSl9ZnVuY3Rpb24gd2YoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2E9Yi5jaGlsZENvbnRleHRUeXBlcztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5nZXRDaGlsZENvbnRleHQpcmV0dXJuIGM7ZD1kLmdldENoaWxkQ29udGV4dCgpO2Zvcih2YXIgZSBpbiBkKWUgaW4gYT92b2lkIDA6cihcIjEwOFwiLEFjKGIpfHxcIlVua25vd25cIixlKTtyZXR1cm4gbih7fSxjLGQpfWZ1bmN0aW9uIHhmKGEpe3ZhciBiPWEuc3RhdGVOb2RlO2I9YiYmYi5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dHx8cWY7cmY9Sy5jdXJyZW50O0ooSyxiLGEpO0ooTCxMLmN1cnJlbnQsYSk7cmV0dXJuITB9XG5mdW5jdGlvbiB5ZihhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7ZD92b2lkIDA6cihcIjE2OVwiKTtjPyhiPXdmKGEsYixyZiksZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dD1iLEkoTCxhKSxJKEssYSksSihLLGIsYSkpOkkoTCxhKTtKKEwsYyxhKX12YXIgemY9bnVsbCxBZj1udWxsO2Z1bmN0aW9uIEJmKGEpe3JldHVybiBmdW5jdGlvbihiKXt0cnl7cmV0dXJuIGEoYil9Y2F0Y2goYyl7fX19XG5mdW5jdGlvbiBDZihhKXtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXylyZXR1cm4hMTt2YXIgYj1fX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX187aWYoYi5pc0Rpc2FibGVkfHwhYi5zdXBwb3J0c0ZpYmVyKXJldHVybiEwO3RyeXt2YXIgYz1iLmluamVjdChhKTt6Zj1CZihmdW5jdGlvbihhKXtyZXR1cm4gYi5vbkNvbW1pdEZpYmVyUm9vdChjLGEpfSk7QWY9QmYoZnVuY3Rpb24oYSl7cmV0dXJuIGIub25Db21taXRGaWJlclVubW91bnQoYyxhKX0pfWNhdGNoKGQpe31yZXR1cm4hMH1cbmZ1bmN0aW9uIERmKGEsYixjLGQpe3RoaXMudGFnPWE7dGhpcy5rZXk9Yzt0aGlzLnNpYmxpbmc9dGhpcy5jaGlsZD10aGlzLnJldHVybj10aGlzLnN0YXRlTm9kZT10aGlzLnR5cGU9dGhpcy5lbGVtZW50VHlwZT1udWxsO3RoaXMuaW5kZXg9MDt0aGlzLnJlZj1udWxsO3RoaXMucGVuZGluZ1Byb3BzPWI7dGhpcy5maXJzdENvbnRleHREZXBlbmRlbmN5PXRoaXMubWVtb2l6ZWRTdGF0ZT10aGlzLnVwZGF0ZVF1ZXVlPXRoaXMubWVtb2l6ZWRQcm9wcz1udWxsO3RoaXMubW9kZT1kO3RoaXMuZWZmZWN0VGFnPTA7dGhpcy5sYXN0RWZmZWN0PXRoaXMuZmlyc3RFZmZlY3Q9dGhpcy5uZXh0RWZmZWN0PW51bGw7dGhpcy5jaGlsZEV4cGlyYXRpb25UaW1lPXRoaXMuZXhwaXJhdGlvblRpbWU9MDt0aGlzLmFsdGVybmF0ZT1udWxsfWZ1bmN0aW9uIE4oYSxiLGMsZCl7cmV0dXJuIG5ldyBEZihhLGIsYyxkKX1cbmZ1bmN0aW9uIEVmKGEpe2E9YS5wcm90b3R5cGU7cmV0dXJuISghYXx8IWEuaXNSZWFjdENvbXBvbmVudCl9ZnVuY3Rpb24gRmYoYSl7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIEVmKGEpPzE6MDtpZih2b2lkIDAhPT1hJiZudWxsIT09YSl7YT1hLiQkdHlwZW9mO2lmKGE9PT11YylyZXR1cm4gMTE7aWYoYT09PXdjKXJldHVybiAxNH1yZXR1cm4gMn1cbmZ1bmN0aW9uIEdmKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbD09PWM/KGM9TihhLnRhZyxiLGEua2V5LGEubW9kZSksYy5lbGVtZW50VHlwZT1hLmVsZW1lbnRUeXBlLGMudHlwZT1hLnR5cGUsYy5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGUsYy5hbHRlcm5hdGU9YSxhLmFsdGVybmF0ZT1jKTooYy5wZW5kaW5nUHJvcHM9YixjLmVmZmVjdFRhZz0wLGMubmV4dEVmZmVjdD1udWxsLGMuZmlyc3RFZmZlY3Q9bnVsbCxjLmxhc3RFZmZlY3Q9bnVsbCk7Yy5jaGlsZEV4cGlyYXRpb25UaW1lPWEuY2hpbGRFeHBpcmF0aW9uVGltZTtjLmV4cGlyYXRpb25UaW1lPWEuZXhwaXJhdGlvblRpbWU7Yy5jaGlsZD1hLmNoaWxkO2MubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHM7Yy5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtjLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWU7Yy5maXJzdENvbnRleHREZXBlbmRlbmN5PWEuZmlyc3RDb250ZXh0RGVwZW5kZW5jeTtjLnNpYmxpbmc9YS5zaWJsaW5nO1xuYy5pbmRleD1hLmluZGV4O2MucmVmPWEucmVmO3JldHVybiBjfVxuZnVuY3Rpb24gSGYoYSxiLGMsZCxlLGYpe3ZhciBnPTI7ZD1hO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKUVmKGEpJiYoZz0xKTtlbHNlIGlmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlnPTU7ZWxzZSBhOnN3aXRjaChhKXtjYXNlIG9jOnJldHVybiBJZihjLmNoaWxkcmVuLGUsZixiKTtjYXNlIHRjOnJldHVybiBKZihjLGV8MyxmLGIpO2Nhc2UgcGM6cmV0dXJuIEpmKGMsZXwyLGYsYik7Y2FzZSBxYzpyZXR1cm4gYT1OKDEyLGMsYixlfDQpLGEuZWxlbWVudFR5cGU9cWMsYS50eXBlPXFjLGEuZXhwaXJhdGlvblRpbWU9ZixhO2Nhc2UgdmM6cmV0dXJuIGE9TigxMyxjLGIsZSksYS5lbGVtZW50VHlwZT12YyxhLnR5cGU9dmMsYS5leHBpcmF0aW9uVGltZT1mLGE7ZGVmYXVsdDppZihcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHJjOmc9MTA7YnJlYWsgYTtjYXNlIHNjOmc9OTticmVhayBhO2Nhc2UgdWM6Zz0xMTticmVhayBhO2Nhc2Ugd2M6Zz1cbjE0O2JyZWFrIGE7Y2FzZSB4YzpnPTE2O2Q9bnVsbDticmVhayBhfXIoXCIxMzBcIixudWxsPT1hP2E6dHlwZW9mIGEsXCJcIil9Yj1OKGcsYyxiLGUpO2IuZWxlbWVudFR5cGU9YTtiLnR5cGU9ZDtiLmV4cGlyYXRpb25UaW1lPWY7cmV0dXJuIGJ9ZnVuY3Rpb24gSWYoYSxiLGMsZCl7YT1OKDcsYSxkLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1mdW5jdGlvbiBKZihhLGIsYyxkKXthPU4oOCxhLGQsYik7Yj0wPT09KGImMSk/cGM6dGM7YS5lbGVtZW50VHlwZT1iO2EudHlwZT1iO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1mdW5jdGlvbiBLZihhLGIsYyl7YT1OKDYsYSxudWxsLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1cbmZ1bmN0aW9uIExmKGEsYixjKXtiPU4oNCxudWxsIT09YS5jaGlsZHJlbj9hLmNoaWxkcmVuOltdLGEua2V5LGIpO2IuZXhwaXJhdGlvblRpbWU9YztiLnN0YXRlTm9kZT17Y29udGFpbmVySW5mbzphLmNvbnRhaW5lckluZm8scGVuZGluZ0NoaWxkcmVuOm51bGwsaW1wbGVtZW50YXRpb246YS5pbXBsZW1lbnRhdGlvbn07cmV0dXJuIGJ9ZnVuY3Rpb24gTWYoYSxiKXthLmRpZEVycm9yPSExO3ZhciBjPWEuZWFybGllc3RQZW5kaW5nVGltZTswPT09Yz9hLmVhcmxpZXN0UGVuZGluZ1RpbWU9YS5sYXRlc3RQZW5kaW5nVGltZT1iOmM+Yj9hLmVhcmxpZXN0UGVuZGluZ1RpbWU9YjphLmxhdGVzdFBlbmRpbmdUaW1lPGImJihhLmxhdGVzdFBlbmRpbmdUaW1lPWIpO05mKGIsYSl9XG5mdW5jdGlvbiBPZihhLGIpe2EuZGlkRXJyb3I9ITE7dmFyIGM9YS5sYXRlc3RQaW5nZWRUaW1lOzAhPT1jJiZjPD1iJiYoYS5sYXRlc3RQaW5nZWRUaW1lPTApO2M9YS5lYXJsaWVzdFBlbmRpbmdUaW1lO3ZhciBkPWEubGF0ZXN0UGVuZGluZ1RpbWU7Yz09PWI/YS5lYXJsaWVzdFBlbmRpbmdUaW1lPWQ9PT1iP2EubGF0ZXN0UGVuZGluZ1RpbWU9MDpkOmQ9PT1iJiYoYS5sYXRlc3RQZW5kaW5nVGltZT1jKTtjPWEuZWFybGllc3RTdXNwZW5kZWRUaW1lO2Q9YS5sYXRlc3RTdXNwZW5kZWRUaW1lOzA9PT1jP2EuZWFybGllc3RTdXNwZW5kZWRUaW1lPWEubGF0ZXN0U3VzcGVuZGVkVGltZT1iOmM+Yj9hLmVhcmxpZXN0U3VzcGVuZGVkVGltZT1iOmQ8YiYmKGEubGF0ZXN0U3VzcGVuZGVkVGltZT1iKTtOZihiLGEpfVxuZnVuY3Rpb24gUGYoYSxiKXt2YXIgYz1hLmVhcmxpZXN0UGVuZGluZ1RpbWU7YT1hLmVhcmxpZXN0U3VzcGVuZGVkVGltZTtpZigwPT09Ynx8MCE9PWMmJmM8YiliPWM7aWYoMD09PWJ8fDAhPT1hJiZhPGIpYj1hO3JldHVybiBifWZ1bmN0aW9uIE5mKGEsYil7dmFyIGM9Yi5lYXJsaWVzdFN1c3BlbmRlZFRpbWUsZD1iLmxhdGVzdFN1c3BlbmRlZFRpbWUsZT1iLmVhcmxpZXN0UGVuZGluZ1RpbWUsZj1iLmxhdGVzdFBpbmdlZFRpbWU7ZT0wIT09ZT9lOmY7MD09PWUmJigwPT09YXx8ZD5hKSYmKGU9ZCk7YT1lOzAhPT1hJiYwIT09YyYmYzxhJiYoYT1jKTtiLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uPWU7Yi5leHBpcmF0aW9uVGltZT1hfXZhciBRZj0hMTtcbmZ1bmN0aW9uIFJmKGEpe3JldHVybntiYXNlU3RhdGU6YSxmaXJzdFVwZGF0ZTpudWxsLGxhc3RVcGRhdGU6bnVsbCxmaXJzdENhcHR1cmVkVXBkYXRlOm51bGwsbGFzdENhcHR1cmVkVXBkYXRlOm51bGwsZmlyc3RFZmZlY3Q6bnVsbCxsYXN0RWZmZWN0Om51bGwsZmlyc3RDYXB0dXJlZEVmZmVjdDpudWxsLGxhc3RDYXB0dXJlZEVmZmVjdDpudWxsfX1mdW5jdGlvbiBTZihhKXtyZXR1cm57YmFzZVN0YXRlOmEuYmFzZVN0YXRlLGZpcnN0VXBkYXRlOmEuZmlyc3RVcGRhdGUsbGFzdFVwZGF0ZTphLmxhc3RVcGRhdGUsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19XG5mdW5jdGlvbiBUZihhKXtyZXR1cm57ZXhwaXJhdGlvblRpbWU6YSx0YWc6MCxwYXlsb2FkOm51bGwsY2FsbGJhY2s6bnVsbCxuZXh0Om51bGwsbmV4dEVmZmVjdDpudWxsfX1mdW5jdGlvbiBVZihhLGIpe251bGw9PT1hLmxhc3RVcGRhdGU/YS5maXJzdFVwZGF0ZT1hLmxhc3RVcGRhdGU9YjooYS5sYXN0VXBkYXRlLm5leHQ9YixhLmxhc3RVcGRhdGU9Yil9XG5mdW5jdGlvbiBWZihhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO2lmKG51bGw9PT1jKXt2YXIgZD1hLnVwZGF0ZVF1ZXVlO3ZhciBlPW51bGw7bnVsbD09PWQmJihkPWEudXBkYXRlUXVldWU9UmYoYS5tZW1vaXplZFN0YXRlKSl9ZWxzZSBkPWEudXBkYXRlUXVldWUsZT1jLnVwZGF0ZVF1ZXVlLG51bGw9PT1kP251bGw9PT1lPyhkPWEudXBkYXRlUXVldWU9UmYoYS5tZW1vaXplZFN0YXRlKSxlPWMudXBkYXRlUXVldWU9UmYoYy5tZW1vaXplZFN0YXRlKSk6ZD1hLnVwZGF0ZVF1ZXVlPVNmKGUpOm51bGw9PT1lJiYoZT1jLnVwZGF0ZVF1ZXVlPVNmKGQpKTtudWxsPT09ZXx8ZD09PWU/VWYoZCxiKTpudWxsPT09ZC5sYXN0VXBkYXRlfHxudWxsPT09ZS5sYXN0VXBkYXRlPyhVZihkLGIpLFVmKGUsYikpOihVZihkLGIpLGUubGFzdFVwZGF0ZT1iKX1cbmZ1bmN0aW9uIFdmKGEsYil7dmFyIGM9YS51cGRhdGVRdWV1ZTtjPW51bGw9PT1jP2EudXBkYXRlUXVldWU9UmYoYS5tZW1vaXplZFN0YXRlKTpYZihhLGMpO251bGw9PT1jLmxhc3RDYXB0dXJlZFVwZGF0ZT9jLmZpcnN0Q2FwdHVyZWRVcGRhdGU9Yy5sYXN0Q2FwdHVyZWRVcGRhdGU9YjooYy5sYXN0Q2FwdHVyZWRVcGRhdGUubmV4dD1iLGMubGFzdENhcHR1cmVkVXBkYXRlPWIpfWZ1bmN0aW9uIFhmKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmI9PT1jLnVwZGF0ZVF1ZXVlJiYoYj1hLnVwZGF0ZVF1ZXVlPVNmKGIpKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIFlmKGEsYixjLGQsZSxmKXtzd2l0Y2goYy50YWcpe2Nhc2UgMTpyZXR1cm4gYT1jLnBheWxvYWQsXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YS5jYWxsKGYsZCxlKTphO2Nhc2UgMzphLmVmZmVjdFRhZz1hLmVmZmVjdFRhZyYtMTAyNXw2NDtjYXNlIDA6YT1jLnBheWxvYWQ7ZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hLmNhbGwoZixkLGUpOmE7aWYobnVsbD09PWV8fHZvaWQgMD09PWUpYnJlYWs7cmV0dXJuIG4oe30sZCxlKTtjYXNlIDI6UWY9ITB9cmV0dXJuIGR9XG5mdW5jdGlvbiBaZihhLGIsYyxkLGUpe1FmPSExO2I9WGYoYSxiKTtmb3IodmFyIGY9Yi5iYXNlU3RhdGUsZz1udWxsLGg9MCxrPWIuZmlyc3RVcGRhdGUsbD1mO251bGwhPT1rOyl7dmFyIG09ay5leHBpcmF0aW9uVGltZTtpZihtPmUpe2lmKG51bGw9PT1nJiYoZz1rLGY9bCksMD09PWh8fGg+bSloPW19ZWxzZSBsPVlmKGEsYixrLGwsYyxkKSxudWxsIT09ay5jYWxsYmFjayYmKGEuZWZmZWN0VGFnfD0zMixrLm5leHRFZmZlY3Q9bnVsbCxudWxsPT09Yi5sYXN0RWZmZWN0P2IuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWs6KGIubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWssYi5sYXN0RWZmZWN0PWspKTtrPWsubmV4dH1tPW51bGw7Zm9yKGs9Yi5maXJzdENhcHR1cmVkVXBkYXRlO251bGwhPT1rOyl7dmFyIHA9ay5leHBpcmF0aW9uVGltZTtpZihwPmUpe2lmKG51bGw9PT1tJiYobT1rLG51bGw9PT1nJiYoZj1sKSksMD09PWh8fGg+cCloPXB9ZWxzZSBsPVlmKGEsYixrLGwsYyxkKSxcbm51bGwhPT1rLmNhbGxiYWNrJiYoYS5lZmZlY3RUYWd8PTMyLGsubmV4dEVmZmVjdD1udWxsLG51bGw9PT1iLmxhc3RDYXB0dXJlZEVmZmVjdD9iLmZpcnN0Q2FwdHVyZWRFZmZlY3Q9Yi5sYXN0Q2FwdHVyZWRFZmZlY3Q9azooYi5sYXN0Q2FwdHVyZWRFZmZlY3QubmV4dEVmZmVjdD1rLGIubGFzdENhcHR1cmVkRWZmZWN0PWspKTtrPWsubmV4dH1udWxsPT09ZyYmKGIubGFzdFVwZGF0ZT1udWxsKTtudWxsPT09bT9iLmxhc3RDYXB0dXJlZFVwZGF0ZT1udWxsOmEuZWZmZWN0VGFnfD0zMjtudWxsPT09ZyYmbnVsbD09PW0mJihmPWwpO2IuYmFzZVN0YXRlPWY7Yi5maXJzdFVwZGF0ZT1nO2IuZmlyc3RDYXB0dXJlZFVwZGF0ZT1tO2EuZXhwaXJhdGlvblRpbWU9aDthLm1lbW9pemVkU3RhdGU9bH1cbmZ1bmN0aW9uICRmKGEsYixjKXtudWxsIT09Yi5maXJzdENhcHR1cmVkVXBkYXRlJiYobnVsbCE9PWIubGFzdFVwZGF0ZSYmKGIubGFzdFVwZGF0ZS5uZXh0PWIuZmlyc3RDYXB0dXJlZFVwZGF0ZSxiLmxhc3RVcGRhdGU9Yi5sYXN0Q2FwdHVyZWRVcGRhdGUpLGIuZmlyc3RDYXB0dXJlZFVwZGF0ZT1iLmxhc3RDYXB0dXJlZFVwZGF0ZT1udWxsKTthZyhiLmZpcnN0RWZmZWN0LGMpO2IuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PW51bGw7YWcoYi5maXJzdENhcHR1cmVkRWZmZWN0LGMpO2IuZmlyc3RDYXB0dXJlZEVmZmVjdD1iLmxhc3RDYXB0dXJlZEVmZmVjdD1udWxsfWZ1bmN0aW9uIGFnKGEsYil7Zm9yKDtudWxsIT09YTspe3ZhciBjPWEuY2FsbGJhY2s7aWYobnVsbCE9PWMpe2EuY2FsbGJhY2s9bnVsbDt2YXIgZD1iO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP3IoXCIxOTFcIixjKTp2b2lkIDA7Yy5jYWxsKGQpfWE9YS5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIGJnKGEsYil7cmV0dXJue3ZhbHVlOmEsc291cmNlOmIsc3RhY2s6QmMoYil9fXZhciBjZz17Y3VycmVudDpudWxsfSxkZz1udWxsLGVnPW51bGwsZmc9bnVsbDtmdW5jdGlvbiBnZyhhLGIpe3ZhciBjPWEudHlwZS5fY29udGV4dDtKKGNnLGMuX2N1cnJlbnRWYWx1ZSxhKTtjLl9jdXJyZW50VmFsdWU9Yn1mdW5jdGlvbiBoZyhhKXt2YXIgYj1jZy5jdXJyZW50O0koY2csYSk7YS50eXBlLl9jb250ZXh0Ll9jdXJyZW50VmFsdWU9Yn1mdW5jdGlvbiBpZyhhKXtkZz1hO2ZnPWVnPW51bGw7YS5maXJzdENvbnRleHREZXBlbmRlbmN5PW51bGx9XG5mdW5jdGlvbiBqZyhhLGIpe2lmKGZnIT09YSYmITEhPT1iJiYwIT09Yil7aWYoXCJudW1iZXJcIiE9PXR5cGVvZiBifHwxMDczNzQxODIzPT09YilmZz1hLGI9MTA3Mzc0MTgyMztiPXtjb250ZXh0OmEsb2JzZXJ2ZWRCaXRzOmIsbmV4dDpudWxsfTtudWxsPT09ZWc/KG51bGw9PT1kZz9yKFwiMjkzXCIpOnZvaWQgMCxkZy5maXJzdENvbnRleHREZXBlbmRlbmN5PWVnPWIpOmVnPWVnLm5leHQ9Yn1yZXR1cm4gYS5fY3VycmVudFZhbHVlfXZhciBrZz17fSxPPXtjdXJyZW50OmtnfSxsZz17Y3VycmVudDprZ30sbWc9e2N1cnJlbnQ6a2d9O2Z1bmN0aW9uIG5nKGEpe2E9PT1rZz9yKFwiMTc0XCIpOnZvaWQgMDtyZXR1cm4gYX1cbmZ1bmN0aW9uIG9nKGEsYil7SihtZyxiLGEpO0oobGcsYSxhKTtKKE8sa2csYSk7dmFyIGM9Yi5ub2RlVHlwZTtzd2l0Y2goYyl7Y2FzZSA5OmNhc2UgMTE6Yj0oYj1iLmRvY3VtZW50RWxlbWVudCk/Yi5uYW1lc3BhY2VVUkk6VWUobnVsbCxcIlwiKTticmVhaztkZWZhdWx0OmM9OD09PWM/Yi5wYXJlbnROb2RlOmIsYj1jLm5hbWVzcGFjZVVSSXx8bnVsbCxjPWMudGFnTmFtZSxiPVVlKGIsYyl9SShPLGEpO0ooTyxiLGEpfWZ1bmN0aW9uIHBnKGEpe0koTyxhKTtJKGxnLGEpO0kobWcsYSl9ZnVuY3Rpb24gcWcoYSl7bmcobWcuY3VycmVudCk7dmFyIGI9bmcoTy5jdXJyZW50KTt2YXIgYz1VZShiLGEudHlwZSk7YiE9PWMmJihKKGxnLGEsYSksSihPLGMsYSkpfWZ1bmN0aW9uIHJnKGEpe2xnLmN1cnJlbnQ9PT1hJiYoSShPLGEpLEkobGcsYSkpfXZhciBzZz1rYy5SZWFjdEN1cnJlbnRPd25lcix0Zz0obmV3IGFhLkNvbXBvbmVudCkucmVmcztcbmZ1bmN0aW9uIHVnKGEsYixjLGQpe2I9YS5tZW1vaXplZFN0YXRlO2M9YyhkLGIpO2M9bnVsbD09PWN8fHZvaWQgMD09PWM/YjpuKHt9LGIsYyk7YS5tZW1vaXplZFN0YXRlPWM7ZD1hLnVwZGF0ZVF1ZXVlO251bGwhPT1kJiYwPT09YS5leHBpcmF0aW9uVGltZSYmKGQuYmFzZVN0YXRlPWMpfVxudmFyIHlnPXtpc01vdW50ZWQ6ZnVuY3Rpb24oYSl7cmV0dXJuKGE9YS5fcmVhY3RJbnRlcm5hbEZpYmVyKT8yPT09R2QoYSk6ITF9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9dmcoKTtkPXdnKGQsYSk7dmFyIGU9VGYoZCk7ZS5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihlLmNhbGxiYWNrPWMpO1ZmKGEsZSk7eGcoYSxkKX0sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9dmcoKTtkPXdnKGQsYSk7dmFyIGU9VGYoZCk7ZS50YWc9MTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7VmYoYSxlKTt4ZyhhLGQpfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oYSxiKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgYz12ZygpO2M9d2coYyxhKTt2YXIgZD1UZihjKTtkLnRhZz0yO3ZvaWQgMCE9PVxuYiYmbnVsbCE9PWImJihkLmNhbGxiYWNrPWIpO1ZmKGEsZCk7eGcoYSxjKX19O2Z1bmN0aW9uIHpnKGEsYixjLGQsZSxmLGcpe2E9YS5zdGF0ZU5vZGU7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuc2hvdWxkQ29tcG9uZW50VXBkYXRlP2Euc2hvdWxkQ29tcG9uZW50VXBkYXRlKGQsZixnKTpiLnByb3RvdHlwZSYmYi5wcm90b3R5cGUuaXNQdXJlUmVhY3RDb21wb25lbnQ/IUZkKGMsZCl8fCFGZChlLGYpOiEwfVxuZnVuY3Rpb24gQWcoYSxiLGMpe3ZhciBkPSExLGU9cWY7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2Y9c2cuY3VycmVudERpc3BhdGNoZXIucmVhZENvbnRleHQoZik6KGU9TShiKT9yZjpLLmN1cnJlbnQsZD1iLmNvbnRleHRUeXBlcyxmPShkPW51bGwhPT1kJiZ2b2lkIDAhPT1kKT9zZihhLGUpOnFmKTtiPW5ldyBiKGMsZik7YS5tZW1vaXplZFN0YXRlPW51bGwhPT1iLnN0YXRlJiZ2b2lkIDAhPT1iLnN0YXRlP2Iuc3RhdGU6bnVsbDtiLnVwZGF0ZXI9eWc7YS5zdGF0ZU5vZGU9YjtiLl9yZWFjdEludGVybmFsRmliZXI9YTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9ZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWYpO3JldHVybiBifVxuZnVuY3Rpb24gQmcoYSxiLGMsZCl7YT1iLnN0YXRlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7Yi5zdGF0ZSE9PWEmJnlnLmVucXVldWVSZXBsYWNlU3RhdGUoYixiLnN0YXRlLG51bGwpfVxuZnVuY3Rpb24gQ2coYSxiLGMsZCl7dmFyIGU9YS5zdGF0ZU5vZGU7ZS5wcm9wcz1jO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2UucmVmcz10Zzt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/ZS5jb250ZXh0PXNnLmN1cnJlbnREaXNwYXRjaGVyLnJlYWRDb250ZXh0KGYpOihmPU0oYik/cmY6Sy5jdXJyZW50LGUuY29udGV4dD1zZihhLGYpKTtmPWEudXBkYXRlUXVldWU7bnVsbCE9PWYmJihaZihhLGYsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtmPWIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBmJiYodWcoYSxiLGYsYyksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wc3x8XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlxuXCJmdW5jdGlvblwiIT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50fHwoYj1lLnN0YXRlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudCYmZS5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSxiIT09ZS5zdGF0ZSYmeWcuZW5xdWV1ZVJlcGxhY2VTdGF0ZShlLGUuc3RhdGUsbnVsbCksZj1hLnVwZGF0ZVF1ZXVlLG51bGwhPT1mJiYoWmYoYSxmLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSkpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudERpZE1vdW50JiYoYS5lZmZlY3RUYWd8PTQpfXZhciBEZz1BcnJheS5pc0FycmF5O1xuZnVuY3Rpb24gRWcoYSxiLGMpe2E9Yy5yZWY7aWYobnVsbCE9PWEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZcIm9iamVjdFwiIT09dHlwZW9mIGEpe2lmKGMuX293bmVyKXtjPWMuX293bmVyO3ZhciBkPXZvaWQgMDtjJiYoMSE9PWMudGFnP3IoXCIyODlcIik6dm9pZCAwLGQ9Yy5zdGF0ZU5vZGUpO2Q/dm9pZCAwOnIoXCIxNDdcIixhKTt2YXIgZT1cIlwiK2E7aWYobnVsbCE9PWImJm51bGwhPT1iLnJlZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGIucmVmJiZiLnJlZi5fc3RyaW5nUmVmPT09ZSlyZXR1cm4gYi5yZWY7Yj1mdW5jdGlvbihhKXt2YXIgYj1kLnJlZnM7Yj09PXRnJiYoYj1kLnJlZnM9e30pO251bGw9PT1hP2RlbGV0ZSBiW2VdOmJbZV09YX07Yi5fc3RyaW5nUmVmPWU7cmV0dXJuIGJ9XCJzdHJpbmdcIiE9PXR5cGVvZiBhP3IoXCIyODRcIik6dm9pZCAwO2MuX293bmVyP3ZvaWQgMDpyKFwiMjkwXCIsYSl9cmV0dXJuIGF9XG5mdW5jdGlvbiBGZyhhLGIpe1widGV4dGFyZWFcIiE9PWEudHlwZSYmcihcIjMxXCIsXCJbb2JqZWN0IE9iamVjdF1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChiKT9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGIpLmpvaW4oXCIsIFwiKStcIn1cIjpiLFwiXCIpfVxuZnVuY3Rpb24gR2coYSl7ZnVuY3Rpb24gYihiLGMpe2lmKGEpe3ZhciBkPWIubGFzdEVmZmVjdDtudWxsIT09ZD8oZC5uZXh0RWZmZWN0PWMsYi5sYXN0RWZmZWN0PWMpOmIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWM7Yy5uZXh0RWZmZWN0PW51bGw7Yy5lZmZlY3RUYWc9OH19ZnVuY3Rpb24gYyhjLGQpe2lmKCFhKXJldHVybiBudWxsO2Zvcig7bnVsbCE9PWQ7KWIoYyxkKSxkPWQuc2libGluZztyZXR1cm4gbnVsbH1mdW5jdGlvbiBkKGEsYil7Zm9yKGE9bmV3IE1hcDtudWxsIT09YjspbnVsbCE9PWIua2V5P2Euc2V0KGIua2V5LGIpOmEuc2V0KGIuaW5kZXgsYiksYj1iLnNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gZShhLGIsYyl7YT1HZihhLGIsYyk7YS5pbmRleD0wO2Euc2libGluZz1udWxsO3JldHVybiBhfWZ1bmN0aW9uIGYoYixjLGQpe2IuaW5kZXg9ZDtpZighYSlyZXR1cm4gYztkPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1kKXJldHVybiBkPWQuaW5kZXgsZDxjPyhiLmVmZmVjdFRhZz1cbjIsYyk6ZDtiLmVmZmVjdFRhZz0yO3JldHVybiBjfWZ1bmN0aW9uIGcoYil7YSYmbnVsbD09PWIuYWx0ZXJuYXRlJiYoYi5lZmZlY3RUYWc9Mik7cmV0dXJuIGJ9ZnVuY3Rpb24gaChhLGIsYyxkKXtpZihudWxsPT09Ynx8NiE9PWIudGFnKXJldHVybiBiPUtmKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLGQpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gayhhLGIsYyxkKXtpZihudWxsIT09YiYmYi5lbGVtZW50VHlwZT09PWMudHlwZSlyZXR1cm4gZD1lKGIsYy5wcm9wcyxkKSxkLnJlZj1FZyhhLGIsYyksZC5yZXR1cm49YSxkO2Q9SGYoYy50eXBlLGMua2V5LGMucHJvcHMsbnVsbCxhLm1vZGUsZCk7ZC5yZWY9RWcoYSxiLGMpO2QucmV0dXJuPWE7cmV0dXJuIGR9ZnVuY3Rpb24gbChhLGIsYyxkKXtpZihudWxsPT09Ynx8NCE9PWIudGFnfHxiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvIT09Yy5jb250YWluZXJJbmZvfHxiLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbiE9PVxuYy5pbXBsZW1lbnRhdGlvbilyZXR1cm4gYj1MZihjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYy5jaGlsZHJlbnx8W10sZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBtKGEsYixjLGQsZil7aWYobnVsbD09PWJ8fDchPT1iLnRhZylyZXR1cm4gYj1JZihjLGEubW9kZSxkLGYpLGIucmV0dXJuPWEsYjtiPWUoYixjLGQpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gcChhLGIsYyl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBifHxcIm51bWJlclwiPT09dHlwZW9mIGIpcmV0dXJuIGI9S2YoXCJcIitiLGEubW9kZSxjKSxiLnJldHVybj1hLGI7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09Yil7c3dpdGNoKGIuJCR0eXBlb2Ype2Nhc2UgbWM6cmV0dXJuIGM9SGYoYi50eXBlLGIua2V5LGIucHJvcHMsbnVsbCxhLm1vZGUsYyksYy5yZWY9RWcoYSxudWxsLGIpLGMucmV0dXJuPWEsYztjYXNlIG5jOnJldHVybiBiPUxmKGIsYS5tb2RlLGMpLGIucmV0dXJuPWEsYn1pZihEZyhiKXx8XG56YyhiKSlyZXR1cm4gYj1JZihiLGEubW9kZSxjLG51bGwpLGIucmV0dXJuPWEsYjtGZyhhLGIpfXJldHVybiBudWxsfWZ1bmN0aW9uIHYoYSxiLGMsZCl7dmFyIGU9bnVsbCE9PWI/Yi5rZXk6bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGN8fFwibnVtYmVyXCI9PT10eXBlb2YgYylyZXR1cm4gbnVsbCE9PWU/bnVsbDpoKGEsYixcIlwiK2MsZCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yyl7c3dpdGNoKGMuJCR0eXBlb2Ype2Nhc2UgbWM6cmV0dXJuIGMua2V5PT09ZT9jLnR5cGU9PT1vYz9tKGEsYixjLnByb3BzLmNoaWxkcmVuLGQsZSk6ayhhLGIsYyxkKTpudWxsO2Nhc2UgbmM6cmV0dXJuIGMua2V5PT09ZT9sKGEsYixjLGQpOm51bGx9aWYoRGcoYyl8fHpjKGMpKXJldHVybiBudWxsIT09ZT9udWxsOm0oYSxiLGMsZCxudWxsKTtGZyhhLGMpfXJldHVybiBudWxsfWZ1bmN0aW9uIEIoYSxiLGMsZCxlKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGR8fFwibnVtYmVyXCI9PT10eXBlb2YgZClyZXR1cm4gYT1cbmEuZ2V0KGMpfHxudWxsLGgoYixhLFwiXCIrZCxlKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGQmJm51bGwhPT1kKXtzd2l0Y2goZC4kJHR5cGVvZil7Y2FzZSBtYzpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsZC50eXBlPT09b2M/bShiLGEsZC5wcm9wcy5jaGlsZHJlbixlLGQua2V5KTprKGIsYSxkLGUpO2Nhc2UgbmM6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGwoYixhLGQsZSl9aWYoRGcoZCl8fHpjKGQpKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLG0oYixhLGQsZSxudWxsKTtGZyhiLGQpfXJldHVybiBudWxsfWZ1bmN0aW9uIHcoZSxnLGgsayl7Zm9yKHZhciBsPW51bGwsbT1udWxsLHE9Zyx1PWc9MCxBPW51bGw7bnVsbCE9PXEmJnU8aC5sZW5ndGg7dSsrKXtxLmluZGV4PnU/KEE9cSxxPW51bGwpOkE9cS5zaWJsaW5nO3ZhciB0PXYoZSxxLGhbdV0sayk7aWYobnVsbD09PXQpe251bGw9PT1xJiYocT1BKTticmVha31hJiZcbnEmJm51bGw9PT10LmFsdGVybmF0ZSYmYihlLHEpO2c9Zih0LGcsdSk7bnVsbD09PW0/bD10Om0uc2libGluZz10O209dDtxPUF9aWYodT09PWgubGVuZ3RoKXJldHVybiBjKGUscSksbDtpZihudWxsPT09cSl7Zm9yKDt1PGgubGVuZ3RoO3UrKylpZihxPXAoZSxoW3VdLGspKWc9ZihxLGcsdSksbnVsbD09PW0/bD1xOm0uc2libGluZz1xLG09cTtyZXR1cm4gbH1mb3IocT1kKGUscSk7dTxoLmxlbmd0aDt1KyspaWYoQT1CKHEsZSx1LGhbdV0saykpYSYmbnVsbCE9PUEuYWx0ZXJuYXRlJiZxLmRlbGV0ZShudWxsPT09QS5rZXk/dTpBLmtleSksZz1mKEEsZyx1KSxudWxsPT09bT9sPUE6bS5zaWJsaW5nPUEsbT1BO2EmJnEuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9ZnVuY3Rpb24gQyhlLGcsaCxrKXt2YXIgbD16YyhoKTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgbD9yKFwiMTUwXCIpOnZvaWQgMDtoPWwuY2FsbChoKTtudWxsPT1oP3IoXCIxNTFcIik6dm9pZCAwO1xuZm9yKHZhciBtPWw9bnVsbCxxPWcsdT1nPTAsQT1udWxsLHQ9aC5uZXh0KCk7bnVsbCE9PXEmJiF0LmRvbmU7dSsrLHQ9aC5uZXh0KCkpe3EuaW5kZXg+dT8oQT1xLHE9bnVsbCk6QT1xLnNpYmxpbmc7dmFyIHc9dihlLHEsdC52YWx1ZSxrKTtpZihudWxsPT09dyl7cXx8KHE9QSk7YnJlYWt9YSYmcSYmbnVsbD09PXcuYWx0ZXJuYXRlJiZiKGUscSk7Zz1mKHcsZyx1KTtudWxsPT09bT9sPXc6bS5zaWJsaW5nPXc7bT13O3E9QX1pZih0LmRvbmUpcmV0dXJuIGMoZSxxKSxsO2lmKG51bGw9PT1xKXtmb3IoOyF0LmRvbmU7dSsrLHQ9aC5uZXh0KCkpdD1wKGUsdC52YWx1ZSxrKSxudWxsIT09dCYmKGc9Zih0LGcsdSksbnVsbD09PW0/bD10Om0uc2libGluZz10LG09dCk7cmV0dXJuIGx9Zm9yKHE9ZChlLHEpOyF0LmRvbmU7dSsrLHQ9aC5uZXh0KCkpdD1CKHEsZSx1LHQudmFsdWUsayksbnVsbCE9PXQmJihhJiZudWxsIT09dC5hbHRlcm5hdGUmJnEuZGVsZXRlKG51bGw9PT10LmtleT91OlxudC5rZXkpLGc9Zih0LGcsdSksbnVsbD09PW0/bD10Om0uc2libGluZz10LG09dCk7YSYmcS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1yZXR1cm4gZnVuY3Rpb24oYSxkLGYsaCl7dmFyIGs9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09b2MmJm51bGw9PT1mLmtleTtrJiYoZj1mLnByb3BzLmNoaWxkcmVuKTt2YXIgbD1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mO2lmKGwpc3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2UgbWM6YTp7bD1mLmtleTtmb3Ioaz1kO251bGwhPT1rOyl7aWYoay5rZXk9PT1sKWlmKDc9PT1rLnRhZz9mLnR5cGU9PT1vYzprLmVsZW1lbnRUeXBlPT09Zi50eXBlKXtjKGEsay5zaWJsaW5nKTtkPWUoayxmLnR5cGU9PT1vYz9mLnByb3BzLmNoaWxkcmVuOmYucHJvcHMsaCk7ZC5yZWY9RWcoYSxrLGYpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsayk7YnJlYWt9ZWxzZSBiKGEsayk7az1cbmsuc2libGluZ31mLnR5cGU9PT1vYz8oZD1JZihmLnByb3BzLmNoaWxkcmVuLGEubW9kZSxoLGYua2V5KSxkLnJldHVybj1hLGE9ZCk6KGg9SGYoZi50eXBlLGYua2V5LGYucHJvcHMsbnVsbCxhLm1vZGUsaCksaC5yZWY9RWcoYSxkLGYpLGgucmV0dXJuPWEsYT1oKX1yZXR1cm4gZyhhKTtjYXNlIG5jOmE6e2ZvcihrPWYua2V5O251bGwhPT1kOyl7aWYoZC5rZXk9PT1rKWlmKDQ9PT1kLnRhZyYmZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbz09PWYuY29udGFpbmVySW5mbyYmZC5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb249PT1mLmltcGxlbWVudGF0aW9uKXtjKGEsZC5zaWJsaW5nKTtkPWUoZCxmLmNoaWxkcmVufHxbXSxoKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGQpO2JyZWFrfWVsc2UgYihhLGQpO2Q9ZC5zaWJsaW5nfWQ9TGYoZixhLm1vZGUsaCk7ZC5yZXR1cm49YTthPWR9cmV0dXJuIGcoYSl9aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBmfHxcIm51bWJlclwiPT09dHlwZW9mIGYpcmV0dXJuIGY9XG5cIlwiK2YsbnVsbCE9PWQmJjY9PT1kLnRhZz8oYyhhLGQuc2libGluZyksZD1lKGQsZixoKSxkLnJldHVybj1hLGE9ZCk6KGMoYSxkKSxkPUtmKGYsYS5tb2RlLGgpLGQucmV0dXJuPWEsYT1kKSxnKGEpO2lmKERnKGYpKXJldHVybiB3KGEsZCxmLGgpO2lmKHpjKGYpKXJldHVybiBDKGEsZCxmLGgpO2wmJkZnKGEsZik7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBmJiYhaylzd2l0Y2goYS50YWcpe2Nhc2UgMTpjYXNlIDA6aD1hLnR5cGUscihcIjE1MlwiLGguZGlzcGxheU5hbWV8fGgubmFtZXx8XCJDb21wb25lbnRcIil9cmV0dXJuIGMoYSxkKX19dmFyIEhnPUdnKCEwKSxJZz1HZyghMSksSmc9bnVsbCxLZz1udWxsLExnPSExO1xuZnVuY3Rpb24gTWcoYSxiKXt2YXIgYz1OKDUsbnVsbCxudWxsLDApO2MuZWxlbWVudFR5cGU9XCJERUxFVEVEXCI7Yy50eXBlPVwiREVMRVRFRFwiO2Muc3RhdGVOb2RlPWI7Yy5yZXR1cm49YTtjLmVmZmVjdFRhZz04O251bGwhPT1hLmxhc3RFZmZlY3Q/KGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsYS5sYXN0RWZmZWN0PWMpOmEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PWN9ZnVuY3Rpb24gTmcoYSxiKXtzd2l0Y2goYS50YWcpe2Nhc2UgNTp2YXIgYz1hLnR5cGU7Yj0xIT09Yi5ub2RlVHlwZXx8Yy50b0xvd2VyQ2FzZSgpIT09Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpP251bGw6YjtyZXR1cm4gbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgNjpyZXR1cm4gYj1cIlwiPT09YS5wZW5kaW5nUHJvcHN8fDMhPT1iLm5vZGVUeXBlP251bGw6YixudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBPZyhhKXtpZihMZyl7dmFyIGI9S2c7aWYoYil7dmFyIGM9YjtpZighTmcoYSxiKSl7Yj1tZihjKTtpZighYnx8IU5nKGEsYikpe2EuZWZmZWN0VGFnfD0yO0xnPSExO0pnPWE7cmV0dXJufU1nKEpnLGMpfUpnPWE7S2c9bmYoYil9ZWxzZSBhLmVmZmVjdFRhZ3w9MixMZz0hMSxKZz1hfX1mdW5jdGlvbiBQZyhhKXtmb3IoYT1hLnJldHVybjtudWxsIT09YSYmNSE9PWEudGFnJiYzIT09YS50YWc7KWE9YS5yZXR1cm47Smc9YX1mdW5jdGlvbiBRZyhhKXtpZihhIT09SmcpcmV0dXJuITE7aWYoIUxnKXJldHVybiBQZyhhKSxMZz0hMCwhMTt2YXIgYj1hLnR5cGU7aWYoNSE9PWEudGFnfHxcImhlYWRcIiE9PWImJlwiYm9keVwiIT09YiYmIWpmKGIsYS5tZW1vaXplZFByb3BzKSlmb3IoYj1LZztiOylNZyhhLGIpLGI9bWYoYik7UGcoYSk7S2c9Smc/bWYoYS5zdGF0ZU5vZGUpOm51bGw7cmV0dXJuITB9ZnVuY3Rpb24gUmcoKXtLZz1KZz1udWxsO0xnPSExfVxuZnVuY3Rpb24gU2coYSl7dmFyIGI9YS5fcmVzdWx0O3N3aXRjaChhLl9zdGF0dXMpe2Nhc2UgMTpyZXR1cm4gYjtjYXNlIDI6dGhyb3cgYjtjYXNlIDA6dGhyb3cgYjtkZWZhdWx0OnRocm93IGEuX3N0YXR1cz0wLGI9YS5fY3RvcixiPWIoKSxiLnRoZW4oZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGI9Yi5kZWZhdWx0LGEuX3N0YXR1cz0xLGEuX3Jlc3VsdD1iKX0sZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGEuX3N0YXR1cz0yLGEuX3Jlc3VsdD1iKX0pLGEuX3Jlc3VsdD1iLGI7fX12YXIgVGc9a2MuUmVhY3RDdXJyZW50T3duZXI7ZnVuY3Rpb24gUChhLGIsYyxkKXtiLmNoaWxkPW51bGw9PT1hP0lnKGIsbnVsbCxjLGQpOkhnKGIsYS5jaGlsZCxjLGQpfVxuZnVuY3Rpb24gVWcoYSxiLGMsZCxlKXtjPWMucmVuZGVyO3ZhciBmPWIucmVmO2lmKCFMLmN1cnJlbnQmJmIubWVtb2l6ZWRQcm9wcz09PWQmJmY9PT0obnVsbCE9PWE/YS5yZWY6bnVsbCkpcmV0dXJuIFZnKGEsYixlKTtkPWMoZCxmKTtQKGEsYixkLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gV2coYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hKXt2YXIgZz1jLnR5cGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJiFFZihnKSYmdm9pZCAwPT09Zy5kZWZhdWx0UHJvcHMmJm51bGw9PT1jLmNvbXBhcmUpcmV0dXJuIGIudGFnPTE1LGIudHlwZT1nLFhnKGEsYixnLGQsZSxmKTthPUhmKGMudHlwZSxudWxsLGQsbnVsbCxiLm1vZGUsZik7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfWc9YS5jaGlsZDtpZigwPT09ZXx8ZT5mKWlmKGU9Zy5tZW1vaXplZFByb3BzLGM9Yy5jb21wYXJlLGM9bnVsbCE9PWM/YzpGZCxjKGUsZCkmJmEucmVmPT09Yi5yZWYpcmV0dXJuIFZnKGEsYixmKTthPUdmKGcsZCxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9XG5mdW5jdGlvbiBYZyhhLGIsYyxkLGUsZil7cmV0dXJuIG51bGwhPT1hJiYoMD09PWV8fGU+ZikmJkZkKGEubWVtb2l6ZWRQcm9wcyxkKSYmYS5yZWY9PT1iLnJlZj9WZyhhLGIsZik6WWcoYSxiLGMsZCxmKX1mdW5jdGlvbiBaZyhhLGIpe3ZhciBjPWIucmVmO2lmKG51bGw9PT1hJiZudWxsIT09Y3x8bnVsbCE9PWEmJmEucmVmIT09YyliLmVmZmVjdFRhZ3w9MTI4fWZ1bmN0aW9uIFlnKGEsYixjLGQsZSl7dmFyIGY9TShjKT9yZjpLLmN1cnJlbnQ7Zj1zZihiLGYpO2lnKGIsZSk7Yz1jKGQsZik7Yi5lZmZlY3RUYWd8PTE7UChhLGIsYyxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uICRnKGEsYixjLGQsZSl7aWYoTShjKSl7dmFyIGY9ITA7eGYoYil9ZWxzZSBmPSExO2lnKGIsZSk7aWYobnVsbD09PWIuc3RhdGVOb2RlKW51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxBZyhiLGMsZCxlKSxDZyhiLGMsZCxlKSxkPSEwO2Vsc2UgaWYobnVsbD09PWEpe3ZhciBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzO2cucHJvcHM9aDt2YXIgaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD1zZy5jdXJyZW50RGlzcGF0Y2hlci5yZWFkQ29udGV4dChsKToobD1NKGMpP3JmOksuY3VycmVudCxsPXNmKGIsbCkpO3ZhciBtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLHA9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlO3B8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8ayE9PWwpJiZCZyhiLGcsZCxsKTtRZj0hMTt2YXIgdj1iLm1lbW9pemVkU3RhdGU7az1nLnN0YXRlPXY7dmFyIEI9Yi51cGRhdGVRdWV1ZTtudWxsIT09QiYmKFpmKGIsQixkLGcsZSksaz1iLm1lbW9pemVkU3RhdGUpO2ghPT1kfHx2IT09a3x8TC5jdXJyZW50fHxRZj8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJih1ZyhiLGMsbSxkKSxrPWIubWVtb2l6ZWRTdGF0ZSksKGg9UWZ8fHpnKGIsYyxoLGQsdixrLGwpKT8ocHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50fHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50JiZnLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlxuZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWspLGcucHJvcHM9ZCxnLnN0YXRlPWssZy5jb250ZXh0PWwsZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksZD0hMSl9ZWxzZSBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzLGcucHJvcHM9aCxrPWcuY29udGV4dCxsPWMuY29udGV4dFR5cGUsXCJvYmplY3RcIj09PXR5cGVvZiBsJiZudWxsIT09bD9sPXNnLmN1cnJlbnREaXNwYXRjaGVyLnJlYWRDb250ZXh0KGwpOihsPU0oYyk/cmY6Sy5jdXJyZW50LGw9c2YoYixsKSksbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcywocD1cImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmQmcoYixnLGQsbCksUWY9ITEsaz1iLm1lbW9pemVkU3RhdGUsdj1nLnN0YXRlPWssQj1iLnVwZGF0ZVF1ZXVlLG51bGwhPT1CJiYoWmYoYixCLGQsZyxlKSx2PWIubWVtb2l6ZWRTdGF0ZSksaCE9PWR8fGshPT12fHxMLmN1cnJlbnR8fFFmPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKHVnKGIsYyxtLGQpLHY9Yi5tZW1vaXplZFN0YXRlKSwobT1RZnx8emcoYixjLGgsZCxrLHYsbCkpPyhwfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZXx8KFwiZnVuY3Rpb25cIj09PVxudHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5jb21wb25lbnRXaWxsVXBkYXRlKGQsdixsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShkLHYsbCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZSYmKGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmKGIuZWZmZWN0VGFnfD0yNTYpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPVxudiksZy5wcm9wcz1kLGcuc3RhdGU9dixnLmNvbnRleHQ9bCxkPW0pOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxkPSExKTtyZXR1cm4gYWgoYSxiLGMsZCxmLGUpfVxuZnVuY3Rpb24gYWgoYSxiLGMsZCxlLGYpe1pnKGEsYik7dmFyIGc9MCE9PShiLmVmZmVjdFRhZyY2NCk7aWYoIWQmJiFnKXJldHVybiBlJiZ5ZihiLGMsITEpLFZnKGEsYixmKTtkPWIuc3RhdGVOb2RlO1RnLmN1cnJlbnQ9Yjt2YXIgaD1nJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I/bnVsbDpkLnJlbmRlcigpO2IuZWZmZWN0VGFnfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPUhnKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9SGcoYixudWxsLGgsZikpOlAoYSxiLGgsZik7Yi5tZW1vaXplZFN0YXRlPWQuc3RhdGU7ZSYmeWYoYixjLCEwKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiBiaChhKXt2YXIgYj1hLnN0YXRlTm9kZTtiLnBlbmRpbmdDb250ZXh0P3ZmKGEsYi5wZW5kaW5nQ29udGV4dCxiLnBlbmRpbmdDb250ZXh0IT09Yi5jb250ZXh0KTpiLmNvbnRleHQmJnZmKGEsYi5jb250ZXh0LCExKTtvZyhhLGIuY29udGFpbmVySW5mbyl9XG5mdW5jdGlvbiBjaChhLGIpe2lmKGEmJmEuZGVmYXVsdFByb3BzKXtiPW4oe30sYik7YT1hLmRlZmF1bHRQcm9wcztmb3IodmFyIGMgaW4gYSl2b2lkIDA9PT1iW2NdJiYoYltjXT1hW2NdKX1yZXR1cm4gYn1cbmZ1bmN0aW9uIGRoKGEsYixjKXt2YXIgZD1iLm1vZGUsZT1iLnBlbmRpbmdQcm9wcyxmPWIubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZiYmKGYuYWxyZWFkeUNhcHR1cmVkP251bGwhPT1hJiZmPT09YS5tZW1vaXplZFN0YXRlP2Y9e2FscmVhZHlDYXB0dXJlZDohMCxkaWRUaW1lb3V0OiEwLHRpbWVkT3V0QXQ6Zi50aW1lZE91dEF0fTooZi5hbHJlYWR5Q2FwdHVyZWQ9ITAsZi5kaWRUaW1lb3V0PSEwKTpmPW51bGwpO3ZhciBnPW51bGwhPT1mJiZmLmRpZFRpbWVvdXQ7aWYobnVsbD09PWEpZz8oZz1lLmZhbGxiYWNrLGU9SWYobnVsbCxkLDAsbnVsbCksZD1JZihnLGQsYyxudWxsKSxlLnNpYmxpbmc9ZCxjPWUsYy5yZXR1cm49ZC5yZXR1cm49Yik6Yz1kPUlnKGIsbnVsbCxlLmNoaWxkcmVuLGMpO2Vsc2V7dmFyIGg9YS5tZW1vaXplZFN0YXRlO251bGwhPT1oJiZoLmRpZFRpbWVvdXQ/KGQ9YS5jaGlsZCxhPWQuc2libGluZyxnPyhjPWUuZmFsbGJhY2ssZD1HZihkLGQucGVuZGluZ1Byb3BzLFxuMCksZC5lZmZlY3RUYWd8PTIsZT1kLnNpYmxpbmc9R2YoYSxjLGEuZXhwaXJhdGlvblRpbWUpLGUuZWZmZWN0VGFnfD0yLGM9ZCxkLmNoaWxkRXhwaXJhdGlvblRpbWU9MCxkPWUsYy5yZXR1cm49ZC5yZXR1cm49Yik6KGc9YS5jaGlsZCxkPUhnKGIsZC5jaGlsZCxlLmNoaWxkcmVuLGMpLEhnKGIsZyxudWxsLGMpLGM9ZCkpOihhPWEuY2hpbGQsZz8oZz1lLmZhbGxiYWNrLGU9SWYobnVsbCxkLDAsbnVsbCksZS5lZmZlY3RUYWd8PTIsZS5jaGlsZD1hLGEucmV0dXJuPWUsZD1lLnNpYmxpbmc9SWYoZyxkLGMsbnVsbCksZC5lZmZlY3RUYWd8PTIsYz1lLGUuY2hpbGRFeHBpcmF0aW9uVGltZT0wLGMucmV0dXJuPWQucmV0dXJuPWIpOmQ9Yz1IZyhiLGEsZS5jaGlsZHJlbixjKSl9Yi5tZW1vaXplZFN0YXRlPWY7Yi5jaGlsZD1jO3JldHVybiBkfVxuZnVuY3Rpb24gVmcoYSxiLGMpe251bGwhPT1hJiYoYi5maXJzdENvbnRleHREZXBlbmRlbmN5PWEuZmlyc3RDb250ZXh0RGVwZW5kZW5jeSk7dmFyIGQ9Yi5jaGlsZEV4cGlyYXRpb25UaW1lO2lmKDA9PT1kfHxkPmMpcmV0dXJuIG51bGw7bnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkP3IoXCIxNTNcIik6dm9pZCAwO2lmKG51bGwhPT1iLmNoaWxkKXthPWIuY2hpbGQ7Yz1HZihhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz1HZihhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpLGMucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBlaChhLGIsYyl7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZTtpZihudWxsIT09YSYmYS5tZW1vaXplZFByb3BzPT09Yi5wZW5kaW5nUHJvcHMmJiFMLmN1cnJlbnQmJigwPT09ZHx8ZD5jKSl7c3dpdGNoKGIudGFnKXtjYXNlIDM6YmgoYik7UmcoKTticmVhaztjYXNlIDU6cWcoYik7YnJlYWs7Y2FzZSAxOk0oYi50eXBlKSYmeGYoYik7YnJlYWs7Y2FzZSA0Om9nKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7YnJlYWs7Y2FzZSAxMDpnZyhiLGIubWVtb2l6ZWRQcm9wcy52YWx1ZSk7YnJlYWs7Y2FzZSAxMzppZihkPWIubWVtb2l6ZWRTdGF0ZSxudWxsIT09ZCYmZC5kaWRUaW1lb3V0KXtkPWIuY2hpbGQuY2hpbGRFeHBpcmF0aW9uVGltZTtpZigwIT09ZCYmZDw9YylyZXR1cm4gZGgoYSxiLGMpO2I9VmcoYSxiLGMpO3JldHVybiBudWxsIT09Yj9iLnNpYmxpbmc6bnVsbH19cmV0dXJuIFZnKGEsYixjKX1iLmV4cGlyYXRpb25UaW1lPTA7c3dpdGNoKGIudGFnKXtjYXNlIDI6ZD1cbmIuZWxlbWVudFR5cGU7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpO2E9Yi5wZW5kaW5nUHJvcHM7dmFyIGU9c2YoYixLLmN1cnJlbnQpO2lnKGIsYyk7ZT1kKGEsZSk7Yi5lZmZlY3RUYWd8PTE7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBlJiZudWxsIT09ZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGUucmVuZGVyJiZ2b2lkIDA9PT1lLiQkdHlwZW9mKXtiLnRhZz0xO2lmKE0oZCkpe3ZhciBmPSEwO3hmKGIpfWVsc2UgZj0hMTtiLm1lbW9pemVkU3RhdGU9bnVsbCE9PWUuc3RhdGUmJnZvaWQgMCE9PWUuc3RhdGU/ZS5zdGF0ZTpudWxsO3ZhciBnPWQuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiZ1ZyhiLGQsZyxhKTtlLnVwZGF0ZXI9eWc7Yi5zdGF0ZU5vZGU9ZTtlLl9yZWFjdEludGVybmFsRmliZXI9YjtDZyhiLGQsYSxjKTtiPWFoKG51bGwsYixkLCEwLGYsYyl9ZWxzZSBiLnRhZz0wLFxuUChudWxsLGIsZSxjKSxiPWIuY2hpbGQ7cmV0dXJuIGI7Y2FzZSAxNjplPWIuZWxlbWVudFR5cGU7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpO2Y9Yi5wZW5kaW5nUHJvcHM7YT1TZyhlKTtiLnR5cGU9YTtlPWIudGFnPUZmKGEpO2Y9Y2goYSxmKTtnPXZvaWQgMDtzd2l0Y2goZSl7Y2FzZSAwOmc9WWcobnVsbCxiLGEsZixjKTticmVhaztjYXNlIDE6Zz0kZyhudWxsLGIsYSxmLGMpO2JyZWFrO2Nhc2UgMTE6Zz1VZyhudWxsLGIsYSxmLGMpO2JyZWFrO2Nhc2UgMTQ6Zz1XZyhudWxsLGIsYSxjaChhLnR5cGUsZiksZCxjKTticmVhaztkZWZhdWx0OnIoXCIyODNcIixhKX1yZXR1cm4gZztjYXNlIDA6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmNoKGQsZSksWWcoYSxiLGQsZSxjKTtjYXNlIDE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09XG5kP2U6Y2goZCxlKSwkZyhhLGIsZCxlLGMpO2Nhc2UgMzpiaChiKTtkPWIudXBkYXRlUXVldWU7bnVsbD09PWQ/cihcIjI4MlwiKTp2b2lkIDA7ZT1iLm1lbW9pemVkU3RhdGU7ZT1udWxsIT09ZT9lLmVsZW1lbnQ6bnVsbDtaZihiLGQsYi5wZW5kaW5nUHJvcHMsbnVsbCxjKTtkPWIubWVtb2l6ZWRTdGF0ZS5lbGVtZW50O2lmKGQ9PT1lKVJnKCksYj1WZyhhLGIsYyk7ZWxzZXtlPWIuc3RhdGVOb2RlO2lmKGU9KG51bGw9PT1hfHxudWxsPT09YS5jaGlsZCkmJmUuaHlkcmF0ZSlLZz1uZihiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxKZz1iLGU9TGc9ITA7ZT8oYi5lZmZlY3RUYWd8PTIsYi5jaGlsZD1JZyhiLG51bGwsZCxjKSk6KFAoYSxiLGQsYyksUmcoKSk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgNTpyZXR1cm4gcWcoYiksbnVsbD09PWEmJk9nKGIpLGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZj1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6bnVsbCxnPWUuY2hpbGRyZW4samYoZCxcbmUpP2c9bnVsbDpudWxsIT09ZiYmamYoZCxmKSYmKGIuZWZmZWN0VGFnfD0xNiksWmcoYSxiKSwxMDczNzQxODIzIT09YyYmYi5tb2RlJjEmJmUuaGlkZGVuPyhiLmV4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjMsYj1udWxsKTooUChhLGIsZyxjKSxiPWIuY2hpbGQpLGI7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmT2coYiksbnVsbDtjYXNlIDEzOnJldHVybiBkaChhLGIsYyk7Y2FzZSA0OnJldHVybiBvZyhiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGQ9Yi5wZW5kaW5nUHJvcHMsbnVsbD09PWE/Yi5jaGlsZD1IZyhiLG51bGwsZCxjKTpQKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6Y2goZCxlKSxVZyhhLGIsZCxlLGMpO2Nhc2UgNzpyZXR1cm4gUChhLGIsYi5wZW5kaW5nUHJvcHMsYyksYi5jaGlsZDtjYXNlIDg6cmV0dXJuIFAoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLFxuYyksYi5jaGlsZDtjYXNlIDEyOnJldHVybiBQKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTA6YTp7ZD1iLnR5cGUuX2NvbnRleHQ7ZT1iLnBlbmRpbmdQcm9wcztnPWIubWVtb2l6ZWRQcm9wcztmPWUudmFsdWU7Z2coYixmKTtpZihudWxsIT09Zyl7dmFyIGg9Zy52YWx1ZTtmPWg9PT1mJiYoMCE9PWh8fDEvaD09PTEvZil8fGghPT1oJiZmIT09Zj8wOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHM/ZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHMoaCxmKToxMDczNzQxODIzKXwwO2lmKDA9PT1mKXtpZihnLmNoaWxkcmVuPT09ZS5jaGlsZHJlbiYmIUwuY3VycmVudCl7Yj1WZyhhLGIsYyk7YnJlYWsgYX19ZWxzZSBmb3IoZz1iLmNoaWxkLG51bGwhPT1nJiYoZy5yZXR1cm49Yik7bnVsbCE9PWc7KXtoPWcuZmlyc3RDb250ZXh0RGVwZW5kZW5jeTtpZihudWxsIT09aCl7ZG97aWYoaC5jb250ZXh0PT09ZCYmMCE9PShoLm9ic2VydmVkQml0cyZcbmYpKXtpZigxPT09Zy50YWcpe3ZhciBrPVRmKGMpO2sudGFnPTI7VmYoZyxrKX1pZigwPT09Zy5leHBpcmF0aW9uVGltZXx8Zy5leHBpcmF0aW9uVGltZT5jKWcuZXhwaXJhdGlvblRpbWU9YztrPWcuYWx0ZXJuYXRlO251bGwhPT1rJiYoMD09PWsuZXhwaXJhdGlvblRpbWV8fGsuZXhwaXJhdGlvblRpbWU+YykmJihrLmV4cGlyYXRpb25UaW1lPWMpO2Zvcih2YXIgbD1nLnJldHVybjtudWxsIT09bDspe2s9bC5hbHRlcm5hdGU7aWYoMD09PWwuY2hpbGRFeHBpcmF0aW9uVGltZXx8bC5jaGlsZEV4cGlyYXRpb25UaW1lPmMpbC5jaGlsZEV4cGlyYXRpb25UaW1lPWMsbnVsbCE9PWsmJigwPT09ay5jaGlsZEV4cGlyYXRpb25UaW1lfHxrLmNoaWxkRXhwaXJhdGlvblRpbWU+YykmJihrLmNoaWxkRXhwaXJhdGlvblRpbWU9Yyk7ZWxzZSBpZihudWxsIT09ayYmKDA9PT1rLmNoaWxkRXhwaXJhdGlvblRpbWV8fGsuY2hpbGRFeHBpcmF0aW9uVGltZT5jKSlrLmNoaWxkRXhwaXJhdGlvblRpbWU9XG5jO2Vsc2UgYnJlYWs7bD1sLnJldHVybn19az1nLmNoaWxkO2g9aC5uZXh0fXdoaWxlKG51bGwhPT1oKX1lbHNlIGs9MTA9PT1nLnRhZz9nLnR5cGU9PT1iLnR5cGU/bnVsbDpnLmNoaWxkOmcuY2hpbGQ7aWYobnVsbCE9PWspay5yZXR1cm49ZztlbHNlIGZvcihrPWc7bnVsbCE9PWs7KXtpZihrPT09Yil7az1udWxsO2JyZWFrfWc9ay5zaWJsaW5nO2lmKG51bGwhPT1nKXtnLnJldHVybj1rLnJldHVybjtrPWc7YnJlYWt9az1rLnJldHVybn1nPWt9fVAoYSxiLGUuY2hpbGRyZW4sYyk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgOTpyZXR1cm4gZT1iLnR5cGUsZj1iLnBlbmRpbmdQcm9wcyxkPWYuY2hpbGRyZW4saWcoYixjKSxlPWpnKGUsZi51bnN0YWJsZV9vYnNlcnZlZEJpdHMpLGQ9ZChlKSxiLmVmZmVjdFRhZ3w9MSxQKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxNDpyZXR1cm4gZT1iLnR5cGUsZj1jaChlLnR5cGUsYi5wZW5kaW5nUHJvcHMpLFdnKGEsYixlLGYsZCxjKTtjYXNlIDE1OnJldHVybiBYZyhhLFxuYixiLnR5cGUsYi5wZW5kaW5nUHJvcHMsZCxjKTtjYXNlIDE3OnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpjaChkLGUpLG51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxiLnRhZz0xLE0oZCk/KGE9ITAseGYoYikpOmE9ITEsaWcoYixjKSxBZyhiLGQsZSxjKSxDZyhiLGQsZSxjKSxhaChudWxsLGIsZCwhMCxhLGMpO2RlZmF1bHQ6cihcIjE1NlwiKX19ZnVuY3Rpb24gemgoYSl7YS5lZmZlY3RUYWd8PTR9dmFyIEFoPXZvaWQgMCxCaD12b2lkIDAsQ2g9dm9pZCAwLERoPXZvaWQgMDtcbkFoPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPWIuY2hpbGQ7bnVsbCE9PWM7KXtpZig1PT09Yy50YWd8fDY9PT1jLnRhZylhLmFwcGVuZENoaWxkKGMuc3RhdGVOb2RlKTtlbHNlIGlmKDQhPT1jLnRhZyYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1iKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fTtCaD1mdW5jdGlvbigpe307XG5DaD1mdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPWEubWVtb2l6ZWRQcm9wcztpZihmIT09ZCl7dmFyIGc9Yi5zdGF0ZU5vZGU7bmcoTy5jdXJyZW50KTthPW51bGw7c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOmY9UWMoZyxmKTtkPVFjKGcsZCk7YT1bXTticmVhaztjYXNlIFwib3B0aW9uXCI6Zj1NZShnLGYpO2Q9TWUoZyxkKTthPVtdO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpmPW4oe30sZix7dmFsdWU6dm9pZCAwfSk7ZD1uKHt9LGQse3ZhbHVlOnZvaWQgMH0pO2E9W107YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Zj1PZShnLGYpO2Q9T2UoZyxkKTthPVtdO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiIT09dHlwZW9mIGYub25DbGljayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQub25DbGljayYmKGcub25jbGljaz1lZil9YmYoYyxkKTtnPWM9dm9pZCAwO3ZhciBoPW51bGw7Zm9yKGMgaW4gZilpZighZC5oYXNPd25Qcm9wZXJ0eShjKSYmZi5oYXNPd25Qcm9wZXJ0eShjKSYmbnVsbCE9ZltjXSlpZihcInN0eWxlXCI9PT1cbmMpe3ZhciBrPWZbY107Zm9yKGcgaW4gaylrLmhhc093blByb3BlcnR5KGcpJiYoaHx8KGg9e30pLGhbZ109XCJcIil9ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIiE9PWMmJlwiY2hpbGRyZW5cIiE9PWMmJlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1jJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09YyYmXCJhdXRvRm9jdXNcIiE9PWMmJih1YS5oYXNPd25Qcm9wZXJ0eShjKT9hfHwoYT1bXSk6KGE9YXx8W10pLnB1c2goYyxudWxsKSk7Zm9yKGMgaW4gZCl7dmFyIGw9ZFtjXTtrPW51bGwhPWY/ZltjXTp2b2lkIDA7aWYoZC5oYXNPd25Qcm9wZXJ0eShjKSYmbCE9PWsmJihudWxsIT1sfHxudWxsIT1rKSlpZihcInN0eWxlXCI9PT1jKWlmKGspe2ZvcihnIGluIGspIWsuaGFzT3duUHJvcGVydHkoZyl8fGwmJmwuaGFzT3duUHJvcGVydHkoZyl8fChofHwoaD17fSksaFtnXT1cIlwiKTtmb3IoZyBpbiBsKWwuaGFzT3duUHJvcGVydHkoZykmJmtbZ10hPT1sW2ddJiYoaHx8XG4oaD17fSksaFtnXT1sW2ddKX1lbHNlIGh8fChhfHwoYT1bXSksYS5wdXNoKGMsaCkpLGg9bDtlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Yz8obD1sP2wuX19odG1sOnZvaWQgMCxrPWs/ay5fX2h0bWw6dm9pZCAwLG51bGwhPWwmJmshPT1sJiYoYT1hfHxbXSkucHVzaChjLFwiXCIrbCkpOlwiY2hpbGRyZW5cIj09PWM/az09PWx8fFwic3RyaW5nXCIhPT10eXBlb2YgbCYmXCJudW1iZXJcIiE9PXR5cGVvZiBsfHwoYT1hfHxbXSkucHVzaChjLFwiXCIrbCk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWMmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1jJiYodWEuaGFzT3duUHJvcGVydHkoYyk/KG51bGwhPWwmJmRmKGUsYyksYXx8az09PWx8fChhPVtdKSk6KGE9YXx8W10pLnB1c2goYyxsKSl9aCYmKGE9YXx8W10pLnB1c2goXCJzdHlsZVwiLGgpO2U9YTsoYi51cGRhdGVRdWV1ZT1lKSYmemgoYil9fTtEaD1mdW5jdGlvbihhLGIsYyxkKXtjIT09ZCYmemgoYil9O1xuZnVuY3Rpb24gRWgoYSxiKXt2YXIgYz1iLnNvdXJjZSxkPWIuc3RhY2s7bnVsbD09PWQmJm51bGwhPT1jJiYoZD1CYyhjKSk7bnVsbCE9PWMmJkFjKGMudHlwZSk7Yj1iLnZhbHVlO251bGwhPT1hJiYxPT09YS50YWcmJkFjKGEudHlwZSk7dHJ5e2NvbnNvbGUuZXJyb3IoYil9Y2F0Y2goZSl7c2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGU7fSl9fWZ1bmN0aW9uIEZoKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXRyeXtiKG51bGwpfWNhdGNoKGMpe0doKGEsYyl9ZWxzZSBiLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIEhoKGEpe1wiZnVuY3Rpb25cIj09PXR5cGVvZiBBZiYmQWYoYSk7c3dpdGNoKGEudGFnKXtjYXNlIDE6RmgoYSk7dmFyIGI9YS5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFVubW91bnQpdHJ5e2IucHJvcHM9YS5tZW1vaXplZFByb3BzLGIuc3RhdGU9YS5tZW1vaXplZFN0YXRlLGIuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChjKXtHaChhLGMpfWJyZWFrO2Nhc2UgNTpGaChhKTticmVhaztjYXNlIDQ6SWgoYSl9fWZ1bmN0aW9uIEpoKGEpe3JldHVybiA1PT09YS50YWd8fDM9PT1hLnRhZ3x8ND09PWEudGFnfVxuZnVuY3Rpb24gS2goYSl7YTp7Zm9yKHZhciBiPWEucmV0dXJuO251bGwhPT1iOyl7aWYoSmgoYikpe3ZhciBjPWI7YnJlYWsgYX1iPWIucmV0dXJufXIoXCIxNjBcIik7Yz12b2lkIDB9dmFyIGQ9Yj12b2lkIDA7c3dpdGNoKGMudGFnKXtjYXNlIDU6Yj1jLnN0YXRlTm9kZTtkPSExO2JyZWFrO2Nhc2UgMzpiPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztjYXNlIDQ6Yj1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7ZGVmYXVsdDpyKFwiMTYxXCIpfWMuZWZmZWN0VGFnJjE2JiYoWGUoYixcIlwiKSxjLmVmZmVjdFRhZyY9LTE3KTthOmI6Zm9yKGM9YTs7KXtmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fEpoKGMucmV0dXJuKSl7Yz1udWxsO2JyZWFrIGF9Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2ZvcihjPWMuc2libGluZzs1IT09Yy50YWcmJjYhPT1jLnRhZzspe2lmKGMuZWZmZWN0VGFnJjIpY29udGludWUgYjtcbmlmKG51bGw9PT1jLmNoaWxkfHw0PT09Yy50YWcpY29udGludWUgYjtlbHNlIGMuY2hpbGQucmV0dXJuPWMsYz1jLmNoaWxkfWlmKCEoYy5lZmZlY3RUYWcmMikpe2M9Yy5zdGF0ZU5vZGU7YnJlYWsgYX19Zm9yKHZhciBlPWE7Oyl7aWYoNT09PWUudGFnfHw2PT09ZS50YWcpaWYoYylpZihkKXt2YXIgZj1iLGc9ZS5zdGF0ZU5vZGUsaD1jOzg9PT1mLm5vZGVUeXBlP2YucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZyxoKTpmLmluc2VydEJlZm9yZShnLGgpfWVsc2UgYi5pbnNlcnRCZWZvcmUoZS5zdGF0ZU5vZGUsYyk7ZWxzZSBkPyhnPWIsaD1lLnN0YXRlTm9kZSw4PT09Zy5ub2RlVHlwZT8oZj1nLnBhcmVudE5vZGUsZi5pbnNlcnRCZWZvcmUoaCxnKSk6KGY9ZyxmLmFwcGVuZENoaWxkKGgpKSxnPWcuX3JlYWN0Um9vdENvbnRhaW5lcixudWxsIT09ZyYmdm9pZCAwIT09Z3x8bnVsbCE9PWYub25jbGlja3x8KGYub25jbGljaz1lZikpOmIuYXBwZW5kQ2hpbGQoZS5zdGF0ZU5vZGUpO1xuZWxzZSBpZig0IT09ZS50YWcmJm51bGwhPT1lLmNoaWxkKXtlLmNoaWxkLnJldHVybj1lO2U9ZS5jaGlsZDtjb250aW51ZX1pZihlPT09YSlicmVhaztmb3IoO251bGw9PT1lLnNpYmxpbmc7KXtpZihudWxsPT09ZS5yZXR1cm58fGUucmV0dXJuPT09YSlyZXR1cm47ZT1lLnJldHVybn1lLnNpYmxpbmcucmV0dXJuPWUucmV0dXJuO2U9ZS5zaWJsaW5nfX1cbmZ1bmN0aW9uIEloKGEpe2Zvcih2YXIgYj1hLGM9ITEsZD12b2lkIDAsZT12b2lkIDA7Oyl7aWYoIWMpe2M9Yi5yZXR1cm47YTpmb3IoOzspe251bGw9PT1jP3IoXCIxNjBcIik6dm9pZCAwO3N3aXRjaChjLnRhZyl7Y2FzZSA1OmQ9Yy5zdGF0ZU5vZGU7ZT0hMTticmVhayBhO2Nhc2UgMzpkPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZT0hMDticmVhayBhO2Nhc2UgNDpkPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZT0hMDticmVhayBhfWM9Yy5yZXR1cm59Yz0hMH1pZig1PT09Yi50YWd8fDY9PT1iLnRhZyl7YTpmb3IodmFyIGY9YixnPWY7OylpZihIaChnKSxudWxsIT09Zy5jaGlsZCYmNCE9PWcudGFnKWcuY2hpbGQucmV0dXJuPWcsZz1nLmNoaWxkO2Vsc2V7aWYoZz09PWYpYnJlYWs7Zm9yKDtudWxsPT09Zy5zaWJsaW5nOyl7aWYobnVsbD09PWcucmV0dXJufHxnLnJldHVybj09PWYpYnJlYWsgYTtnPWcucmV0dXJufWcuc2libGluZy5yZXR1cm49Zy5yZXR1cm47Zz1nLnNpYmxpbmd9ZT9cbihmPWQsZz1iLnN0YXRlTm9kZSw4PT09Zi5ub2RlVHlwZT9mLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZyk6Zi5yZW1vdmVDaGlsZChnKSk6ZC5yZW1vdmVDaGlsZChiLnN0YXRlTm9kZSl9ZWxzZSBpZig0PT09Yi50YWc/KGQ9Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyxlPSEwKTpIaChiKSxudWxsIT09Yi5jaGlsZCl7Yi5jaGlsZC5yZXR1cm49YjtiPWIuY2hpbGQ7Y29udGludWV9aWYoYj09PWEpYnJlYWs7Zm9yKDtudWxsPT09Yi5zaWJsaW5nOyl7aWYobnVsbD09PWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuO2I9Yi5yZXR1cm47ND09PWIudGFnJiYoYz0hMSl9Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319XG5mdW5jdGlvbiBMaChhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAxOmJyZWFrO2Nhc2UgNTp2YXIgYz1iLnN0YXRlTm9kZTtpZihudWxsIT1jKXt2YXIgZD1iLm1lbW9pemVkUHJvcHMsZT1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6ZDthPWIudHlwZTt2YXIgZj1iLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9bnVsbDtpZihudWxsIT09Zil7Y1tNYV09ZDtcImlucHV0XCI9PT1hJiZcInJhZGlvXCI9PT1kLnR5cGUmJm51bGwhPWQubmFtZSYmU2MoYyxkKTtjZihhLGUpO2I9Y2YoYSxkKTtmb3IoZT0wO2U8Zi5sZW5ndGg7ZSs9Mil7dmFyIGc9ZltlXSxoPWZbZSsxXTtcInN0eWxlXCI9PT1nPyRlKGMsaCk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zz9XZShjLGgpOlwiY2hpbGRyZW5cIj09PWc/WGUoYyxoKTpPYyhjLGcsaCxiKX1zd2l0Y2goYSl7Y2FzZSBcImlucHV0XCI6VGMoYyxkKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpRZShjLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphPWMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZSxcbmMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWQubXVsdGlwbGUsZj1kLnZhbHVlLG51bGwhPWY/TmUoYywhIWQubXVsdGlwbGUsZiwhMSk6YSE9PSEhZC5tdWx0aXBsZSYmKG51bGwhPWQuZGVmYXVsdFZhbHVlP05lKGMsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLCEwKTpOZShjLCEhZC5tdWx0aXBsZSxkLm11bHRpcGxlP1tdOlwiXCIsITEpKX19fWJyZWFrO2Nhc2UgNjpudWxsPT09Yi5zdGF0ZU5vZGU/cihcIjE2MlwiKTp2b2lkIDA7Yi5zdGF0ZU5vZGUubm9kZVZhbHVlPWIubWVtb2l6ZWRQcm9wczticmVhaztjYXNlIDM6YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDEzOmJyZWFrO2Nhc2UgMTc6YnJlYWs7ZGVmYXVsdDpyKFwiMTYzXCIpfX1mdW5jdGlvbiBNaChhLGIsYyl7Yz1UZihjKTtjLnRhZz0zO2MucGF5bG9hZD17ZWxlbWVudDpudWxsfTt2YXIgZD1iLnZhbHVlO2MuY2FsbGJhY2s9ZnVuY3Rpb24oKXtOaChkKTtFaChhLGIpfTtyZXR1cm4gY31cbmZ1bmN0aW9uIE9oKGEsYixjKXtjPVRmKGMpO2MudGFnPTM7dmFyIGQ9YS50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7dmFyIGU9Yi52YWx1ZTtjLnBheWxvYWQ9ZnVuY3Rpb24oKXtyZXR1cm4gZChlKX19dmFyIGY9YS5zdGF0ZU5vZGU7bnVsbCE9PWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLmNvbXBvbmVudERpZENhdGNoJiYoYy5jYWxsYmFjaz1mdW5jdGlvbigpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBkJiYobnVsbD09PVBoP1BoPW5ldyBTZXQoW3RoaXNdKTpQaC5hZGQodGhpcykpO3ZhciBjPWIudmFsdWUsZT1iLnN0YWNrO0VoKGEsYik7dGhpcy5jb21wb25lbnREaWRDYXRjaChjLHtjb21wb25lbnRTdGFjazpudWxsIT09ZT9lOlwiXCJ9KX0pO3JldHVybiBjfVxuZnVuY3Rpb24gUWgoYSl7c3dpdGNoKGEudGFnKXtjYXNlIDE6TShhLnR5cGUpJiZ0ZihhKTt2YXIgYj1hLmVmZmVjdFRhZztyZXR1cm4gYiYxMDI0PyhhLmVmZmVjdFRhZz1iJi0xMDI1fDY0LGEpOm51bGw7Y2FzZSAzOnJldHVybiBwZyhhKSx1ZihhKSxiPWEuZWZmZWN0VGFnLDAhPT0oYiY2NCk/cihcIjI4NVwiKTp2b2lkIDAsYS5lZmZlY3RUYWc9YiYtMTAyNXw2NCxhO2Nhc2UgNTpyZXR1cm4gcmcoYSksbnVsbDtjYXNlIDEzOmI9YS5lZmZlY3RUYWc7aWYoYiYxMDI0KXthLmVmZmVjdFRhZz1iJi0xMDI1fDY0O2I9YS5hbHRlcm5hdGU7Yj1udWxsIT09Yj9iLm1lbW9pemVkU3RhdGU6bnVsbDt2YXIgYz1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWM/Yz17YWxyZWFkeUNhcHR1cmVkOiEwLGRpZFRpbWVvdXQ6ITEsdGltZWRPdXRBdDowfTpiPT09Yz9jPXthbHJlYWR5Q2FwdHVyZWQ6ITAsZGlkVGltZW91dDpjLmRpZFRpbWVvdXQsdGltZWRPdXRBdDpjLnRpbWVkT3V0QXR9OmMuYWxyZWFkeUNhcHR1cmVkPVxuITA7YS5tZW1vaXplZFN0YXRlPWM7cmV0dXJuIGF9cmV0dXJuIG51bGw7Y2FzZSA0OnJldHVybiBwZyhhKSxudWxsO2Nhc2UgMTA6cmV0dXJuIGhnKGEpLG51bGw7ZGVmYXVsdDpyZXR1cm4gbnVsbH19dmFyIFJoPXtyZWFkQ29udGV4dDpqZ30sU2g9a2MuUmVhY3RDdXJyZW50T3duZXIsVGg9MCxVaD0wLFZoPSExLFE9bnVsbCxSPW51bGwsUz0wLFdoPS0xLFhoPSExLFQ9bnVsbCxZaD0hMSxQaD1udWxsO2Z1bmN0aW9uIFpoKCl7aWYobnVsbCE9PVEpZm9yKHZhciBhPVEucmV0dXJuO251bGwhPT1hOyl7dmFyIGI9YTtzd2l0Y2goYi50YWcpe2Nhc2UgMTp2YXIgYz1iLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7bnVsbCE9PWMmJnZvaWQgMCE9PWMmJnRmKGIpO2JyZWFrO2Nhc2UgMzpwZyhiKTt1ZihiKTticmVhaztjYXNlIDU6cmcoYik7YnJlYWs7Y2FzZSA0OnBnKGIpO2JyZWFrO2Nhc2UgMTA6aGcoYil9YT1hLnJldHVybn1SPW51bGw7Uz0wO1doPS0xO1hoPSExO1E9bnVsbH1cbmZ1bmN0aW9uICRoKGEpe2Zvcig7Oyl7dmFyIGI9YS5hbHRlcm5hdGUsYz1hLnJldHVybixkPWEuc2libGluZztpZigwPT09KGEuZWZmZWN0VGFnJjUxMikpe3ZhciBlPWI7Yj1hO3ZhciBmPWIucGVuZGluZ1Byb3BzO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmJyZWFrO2Nhc2UgMTY6YnJlYWs7Y2FzZSAxNTpjYXNlIDA6YnJlYWs7Y2FzZSAxOk0oYi50eXBlKSYmdGYoYik7YnJlYWs7Y2FzZSAzOnBnKGIpO3VmKGIpO2Y9Yi5zdGF0ZU5vZGU7Zi5wZW5kaW5nQ29udGV4dCYmKGYuY29udGV4dD1mLnBlbmRpbmdDb250ZXh0LGYucGVuZGluZ0NvbnRleHQ9bnVsbCk7aWYobnVsbD09PWV8fG51bGw9PT1lLmNoaWxkKVFnKGIpLGIuZWZmZWN0VGFnJj0tMztCaChiKTticmVhaztjYXNlIDU6cmcoYik7dmFyIGc9bmcobWcuY3VycmVudCksaD1iLnR5cGU7aWYobnVsbCE9PWUmJm51bGwhPWIuc3RhdGVOb2RlKUNoKGUsYixoLGYsZyksZS5yZWYhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD0xMjgpO1xuZWxzZSBpZihmKXt2YXIgaz1uZyhPLmN1cnJlbnQpO2lmKFFnKGIpKXtmPWI7ZT1mLnN0YXRlTm9kZTt2YXIgbD1mLnR5cGUsbT1mLm1lbW9pemVkUHJvcHMscD1nO2VbTGFdPWY7ZVtNYV09bTtoPXZvaWQgMDtnPWw7c3dpdGNoKGcpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6SChcImxvYWRcIixlKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IobD0wO2w8bGIubGVuZ3RoO2wrKylIKGxiW2xdLGUpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpIKFwiZXJyb3JcIixlKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpIKFwiZXJyb3JcIixlKTtIKFwibG9hZFwiLGUpO2JyZWFrO2Nhc2UgXCJmb3JtXCI6SChcInJlc2V0XCIsZSk7SChcInN1Ym1pdFwiLGUpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6SChcInRvZ2dsZVwiLGUpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOlJjKGUsbSk7SChcImludmFsaWRcIixlKTtkZihwLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmUuX3dyYXBwZXJTdGF0ZT1cbnt3YXNNdWx0aXBsZTohIW0ubXVsdGlwbGV9O0goXCJpbnZhbGlkXCIsZSk7ZGYocCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlBlKGUsbSksSChcImludmFsaWRcIixlKSxkZihwLFwib25DaGFuZ2VcIil9YmYoZyxtKTtsPW51bGw7Zm9yKGggaW4gbSltLmhhc093blByb3BlcnR5KGgpJiYoaz1tW2hdLFwiY2hpbGRyZW5cIj09PWg/XCJzdHJpbmdcIj09PXR5cGVvZiBrP2UudGV4dENvbnRlbnQhPT1rJiYobD1bXCJjaGlsZHJlblwiLGtdKTpcIm51bWJlclwiPT09dHlwZW9mIGsmJmUudGV4dENvbnRlbnQhPT1cIlwiK2smJihsPVtcImNoaWxkcmVuXCIsXCJcIitrXSk6dWEuaGFzT3duUHJvcGVydHkoaCkmJm51bGwhPWsmJmRmKHAsaCkpO3N3aXRjaChnKXtjYXNlIFwiaW5wdXRcIjppYyhlKTtiZChlLG0sITApO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmljKGUpO1JlKGUsbSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJvcHRpb25cIjpicmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBtLm9uQ2xpY2smJlxuKGUub25jbGljaz1lZil9aD1sO2YudXBkYXRlUXVldWU9aDtmPW51bGwhPT1oPyEwOiExO2YmJnpoKGIpfWVsc2V7bT1iO2U9aDtwPWY7bD05PT09Zy5ub2RlVHlwZT9nOmcub3duZXJEb2N1bWVudDtrPT09U2UuaHRtbCYmKGs9VGUoZSkpO2s9PT1TZS5odG1sP1wic2NyaXB0XCI9PT1lPyhlPWwuY3JlYXRlRWxlbWVudChcImRpdlwiKSxlLmlubmVySFRNTD1cIjxzY3JpcHQ+XFx4M2Mvc2NyaXB0PlwiLGw9ZS5yZW1vdmVDaGlsZChlLmZpcnN0Q2hpbGQpKTpcInN0cmluZ1wiPT09dHlwZW9mIHAuaXM/bD1sLmNyZWF0ZUVsZW1lbnQoZSx7aXM6cC5pc30pOihsPWwuY3JlYXRlRWxlbWVudChlKSxcInNlbGVjdFwiPT09ZSYmcC5tdWx0aXBsZSYmKGwubXVsdGlwbGU9ITApKTpsPWwuY3JlYXRlRWxlbWVudE5TKGssZSk7ZT1sO2VbTGFdPW07ZVtNYV09ZjtBaChlLGIsITEsITEpO3A9ZTtsPWg7bT1mO3ZhciB2PWcsQj1jZihsLG0pO3N3aXRjaChsKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOkgoXCJsb2FkXCIsXG5wKTtnPW07YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGc9MDtnPGxiLmxlbmd0aDtnKyspSChsYltnXSxwKTtnPW07YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkgoXCJlcnJvclwiLHApO2c9bTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpIKFwiZXJyb3JcIixwKTtIKFwibG9hZFwiLHApO2c9bTticmVhaztjYXNlIFwiZm9ybVwiOkgoXCJyZXNldFwiLHApO0goXCJzdWJtaXRcIixwKTtnPW07YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpIKFwidG9nZ2xlXCIscCk7Zz1tO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOlJjKHAsbSk7Zz1RYyhwLG0pO0goXCJpbnZhbGlkXCIscCk7ZGYodixcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpnPU1lKHAsbSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOnAuX3dyYXBwZXJTdGF0ZT17d2FzTXVsdGlwbGU6ISFtLm11bHRpcGxlfTtnPW4oe30sbSx7dmFsdWU6dm9pZCAwfSk7SChcImludmFsaWRcIixwKTtkZih2LFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6UGUocCxcbm0pO2c9T2UocCxtKTtIKFwiaW52YWxpZFwiLHApO2RmKHYsXCJvbkNoYW5nZVwiKTticmVhaztkZWZhdWx0Omc9bX1iZihsLGcpO2s9dm9pZCAwO3ZhciB3PWwsQz1wLHU9Zztmb3IoayBpbiB1KWlmKHUuaGFzT3duUHJvcGVydHkoaykpe3ZhciBxPXVba107XCJzdHlsZVwiPT09az8kZShDLHEpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWs/KHE9cT9xLl9faHRtbDp2b2lkIDAsbnVsbCE9cSYmV2UoQyxxKSk6XCJjaGlsZHJlblwiPT09az9cInN0cmluZ1wiPT09dHlwZW9mIHE/KFwidGV4dGFyZWFcIiE9PXd8fFwiXCIhPT1xKSYmWGUoQyxxKTpcIm51bWJlclwiPT09dHlwZW9mIHEmJlhlKEMsXCJcIitxKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09ayYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWsmJlwiYXV0b0ZvY3VzXCIhPT1rJiYodWEuaGFzT3duUHJvcGVydHkoayk/bnVsbCE9cSYmZGYodixrKTpudWxsIT1xJiZPYyhDLGsscSxCKSl9c3dpdGNoKGwpe2Nhc2UgXCJpbnB1dFwiOmljKHApO1xuYmQocCxtLCExKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjppYyhwKTtSZShwLG0pO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpudWxsIT1tLnZhbHVlJiZwLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJcIitQYyhtLnZhbHVlKSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmc9cDtnLm11bHRpcGxlPSEhbS5tdWx0aXBsZTtwPW0udmFsdWU7bnVsbCE9cD9OZShnLCEhbS5tdWx0aXBsZSxwLCExKTpudWxsIT1tLmRlZmF1bHRWYWx1ZSYmTmUoZywhIW0ubXVsdGlwbGUsbS5kZWZhdWx0VmFsdWUsITApO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGcub25DbGljayYmKHAub25jbGljaz1lZil9KGY9aGYoaCxmKSkmJnpoKGIpO2Iuc3RhdGVOb2RlPWV9bnVsbCE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCl9ZWxzZSBudWxsPT09Yi5zdGF0ZU5vZGU/cihcIjE2NlwiKTp2b2lkIDA7YnJlYWs7Y2FzZSA2OmUmJm51bGwhPWIuc3RhdGVOb2RlP0RoKGUsYixlLm1lbW9pemVkUHJvcHMsZik6KFwic3RyaW5nXCIhPT1cbnR5cGVvZiBmJiYobnVsbD09PWIuc3RhdGVOb2RlP3IoXCIxNjZcIik6dm9pZCAwKSxlPW5nKG1nLmN1cnJlbnQpLG5nKE8uY3VycmVudCksUWcoYik/KGY9YixoPWYuc3RhdGVOb2RlLGU9Zi5tZW1vaXplZFByb3BzLGhbTGFdPWYsKGY9aC5ub2RlVmFsdWUhPT1lKSYmemgoYikpOihoPWIsZj0oOT09PWUubm9kZVR5cGU/ZTplLm93bmVyRG9jdW1lbnQpLmNyZWF0ZVRleHROb2RlKGYpLGZbTGFdPWIsaC5zdGF0ZU5vZGU9ZikpO2JyZWFrO2Nhc2UgMTE6YnJlYWs7Y2FzZSAxMzpmPWIubWVtb2l6ZWRTdGF0ZTtoPW51bGwhPT1lP2UubWVtb2l6ZWRTdGF0ZTpudWxsOyhudWxsIT09ZiYmZi5kaWRUaW1lb3V0KSE9PShudWxsIT09aCYmaC5kaWRUaW1lb3V0KSYmKGIuZWZmZWN0VGFnfD00KTticmVhaztjYXNlIDc6YnJlYWs7Y2FzZSA4OmJyZWFrO2Nhc2UgMTI6YnJlYWs7Y2FzZSA0OnBnKGIpO0JoKGIpO2JyZWFrO2Nhc2UgMTA6aGcoYik7YnJlYWs7Y2FzZSA5OmJyZWFrO2Nhc2UgMTQ6YnJlYWs7XG5jYXNlIDE3Ok0oYi50eXBlKSYmdGYoYik7YnJlYWs7ZGVmYXVsdDpyKFwiMTU2XCIpfVE9bnVsbDtiPWE7aWYoMTA3Mzc0MTgyMz09PVN8fDEwNzM3NDE4MjMhPT1iLmNoaWxkRXhwaXJhdGlvblRpbWUpe2Y9MDtmb3IoaD1iLmNoaWxkO251bGwhPT1oOyl7ZT1oLmV4cGlyYXRpb25UaW1lO2c9aC5jaGlsZEV4cGlyYXRpb25UaW1lO2lmKDA9PT1mfHwwIT09ZSYmZTxmKWY9ZTtpZigwPT09Znx8MCE9PWcmJmc8ZilmPWc7aD1oLnNpYmxpbmd9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPWZ9bnVsbCE9PWMmJjA9PT0oYy5lZmZlY3RUYWcmNTEyKSYmKG51bGw9PT1jLmZpcnN0RWZmZWN0JiYoYy5maXJzdEVmZmVjdD1hLmZpcnN0RWZmZWN0KSxudWxsIT09YS5sYXN0RWZmZWN0JiYobnVsbCE9PWMubGFzdEVmZmVjdCYmKGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWEuZmlyc3RFZmZlY3QpLGMubGFzdEVmZmVjdD1hLmxhc3RFZmZlY3QpLDE8YS5lZmZlY3RUYWcmJihudWxsIT09Yy5sYXN0RWZmZWN0P1xuYy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YTpjLmZpcnN0RWZmZWN0PWEsYy5sYXN0RWZmZWN0PWEpKX1lbHNle2E9UWgoYSxTKTtpZihudWxsIT09YSlyZXR1cm4gYS5lZmZlY3RUYWcmPTUxMSxhO251bGwhPT1jJiYoYy5maXJzdEVmZmVjdD1jLmxhc3RFZmZlY3Q9bnVsbCxjLmVmZmVjdFRhZ3w9NTEyKX1pZihudWxsIT09ZClyZXR1cm4gZDtpZihudWxsIT09YylhPWM7ZWxzZSBicmVha31yZXR1cm4gbnVsbH1mdW5jdGlvbiBhaShhKXt2YXIgYj1laChhLmFsdGVybmF0ZSxhLFMpO2EubWVtb2l6ZWRQcm9wcz1hLnBlbmRpbmdQcm9wcztudWxsPT09YiYmKGI9JGgoYSkpO1NoLmN1cnJlbnQ9bnVsbDtyZXR1cm4gYn1cbmZ1bmN0aW9uIGJpKGEsYixjKXtWaD9yKFwiMjQzXCIpOnZvaWQgMDtWaD0hMDtTaC5jdXJyZW50RGlzcGF0Y2hlcj1SaDt2YXIgZD1hLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uO2lmKGQhPT1TfHxhIT09Unx8bnVsbD09PVEpWmgoKSxSPWEsUz1kLFE9R2YoUi5jdXJyZW50LG51bGwsUyksYS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9MDt2YXIgZT0hMTtkb3t0cnl7aWYoYilmb3IoO251bGwhPT1RJiYhY2koKTspUT1haShRKTtlbHNlIGZvcig7bnVsbCE9PVE7KVE9YWkoUSl9Y2F0Y2goQyl7aWYobnVsbD09PVEpZT0hMCxOaChDKTtlbHNle251bGw9PT1RP3IoXCIyNzFcIik6dm9pZCAwO3ZhciBmPVEsZz1mLnJldHVybjtpZihudWxsPT09ZyllPSEwLE5oKEMpO2Vsc2V7YTp7dmFyIGg9YSxrPWcsbD1mLG09QztnPVM7bC5lZmZlY3RUYWd8PTUxMjtsLmZpcnN0RWZmZWN0PWwubGFzdEVmZmVjdD1udWxsO2lmKG51bGwhPT1tJiZcIm9iamVjdFwiPT09dHlwZW9mIG0mJlwiZnVuY3Rpb25cIj09PVxudHlwZW9mIG0udGhlbil7dmFyIHA9bTttPWs7dmFyIHY9LTEsQj0tMTtkb3tpZigxMz09PW0udGFnKXt2YXIgdz1tLmFsdGVybmF0ZTtpZihudWxsIT09dyYmKHc9dy5tZW1vaXplZFN0YXRlLG51bGwhPT13JiZ3LmRpZFRpbWVvdXQpKXtCPTEwKih3LnRpbWVkT3V0QXQtMik7YnJlYWt9dz1tLnBlbmRpbmdQcm9wcy5tYXhEdXJhdGlvbjtpZihcIm51bWJlclwiPT09dHlwZW9mIHcpaWYoMD49dyl2PTA7ZWxzZSBpZigtMT09PXZ8fHc8dil2PXd9bT1tLnJldHVybn13aGlsZShudWxsIT09bSk7bT1rO2Rve2lmKHc9MTM9PT1tLnRhZyl2b2lkIDA9PT1tLm1lbW9pemVkUHJvcHMuZmFsbGJhY2s/dz0hMToodz1tLm1lbW9pemVkU3RhdGUsdz1udWxsPT09d3x8IXcuZGlkVGltZW91dCk7aWYodyl7az1kaS5iaW5kKG51bGwsaCxtLGwsMD09PShtLm1vZGUmMSk/MTpnKTtwLnRoZW4oayxrKTtpZigwPT09KG0ubW9kZSYxKSl7bS5lZmZlY3RUYWd8PTMyO1AobC5hbHRlcm5hdGUsbCxudWxsLGcpO1xubC5lZmZlY3RUYWcmPS01MTM7MT09PWwudGFnJiYobC5lZmZlY3RUYWcmPS00MjEsbnVsbD09PWwuYWx0ZXJuYXRlJiYobC50YWc9MTcpKTticmVhayBhfS0xPT09dj9oPTEwNzM3NDE4MjM6KC0xPT09QiYmKEI9MTAqKFBmKGgsZyktMiktNUUzKSxoPUIrdik7MDw9aCYmV2g8aCYmKFdoPWgpO20uZWZmZWN0VGFnfD0xMDI0O20uZXhwaXJhdGlvblRpbWU9ZzticmVhayBhfW09bS5yZXR1cm59d2hpbGUobnVsbCE9PW0pO209RXJyb3IoXCJBbiB1cGRhdGUgd2FzIHN1c3BlbmRlZCwgYnV0IG5vIHBsYWNlaG9sZGVyIFVJIHdhcyBwcm92aWRlZC5cIil9WGg9ITA7bT1iZyhtLGwpO2g9aztkb3tzd2l0Y2goaC50YWcpe2Nhc2UgMzpsPW07aC5lZmZlY3RUYWd8PTEwMjQ7aC5leHBpcmF0aW9uVGltZT1nO2c9TWgoaCxsLGcpO1dmKGgsZyk7YnJlYWsgYTtjYXNlIDE6aWYobD1tLGs9aC50eXBlLHA9aC5zdGF0ZU5vZGUsMD09PShoLmVmZmVjdFRhZyY2NCkmJihcImZ1bmN0aW9uXCI9PT10eXBlb2Ygay5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fFxubnVsbCE9PXAmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBwLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVBofHwhUGguaGFzKHApKSkpe2guZWZmZWN0VGFnfD0xMDI0O2guZXhwaXJhdGlvblRpbWU9ZztnPU9oKGgsbCxnKTtXZihoLGcpO2JyZWFrIGF9fWg9aC5yZXR1cm59d2hpbGUobnVsbCE9PWgpfVE9JGgoZik7Y29udGludWV9fX1icmVha313aGlsZSgxKTtWaD0hMTtmZz1lZz1kZz1TaC5jdXJyZW50RGlzcGF0Y2hlcj1udWxsO2lmKGUpUj1udWxsLGEuZmluaXNoZWRXb3JrPW51bGw7ZWxzZSBpZihudWxsIT09USlhLmZpbmlzaGVkV29yaz1udWxsO2Vsc2V7Yj1hLmN1cnJlbnQuYWx0ZXJuYXRlO251bGw9PT1iP3IoXCIyODFcIik6dm9pZCAwO1I9bnVsbDtpZihYaCl7ZT1hLmxhdGVzdFBlbmRpbmdUaW1lO2Y9YS5sYXRlc3RTdXNwZW5kZWRUaW1lO2c9YS5sYXRlc3RQaW5nZWRUaW1lO2lmKDAhPT1lJiZlPmR8fDAhPT1mJiZmPmR8fDAhPT1nJiZnPmQpe09mKGEsZCk7ZWkoYSxiLFxuZCxhLmV4cGlyYXRpb25UaW1lLC0xKTtyZXR1cm59aWYoIWEuZGlkRXJyb3ImJiFjKXthLmRpZEVycm9yPSEwO2Q9YS5uZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbj1kO2M9YS5leHBpcmF0aW9uVGltZT0xO2VpKGEsYixkLGMsLTEpO3JldHVybn19Y3x8LTE9PT1XaD8oYS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9ZCxhLmZpbmlzaGVkV29yaz1iKTooT2YoYSxkKSxjPTEwKihQZihhLGQpLTIpLGM8V2gmJihXaD1jKSxjPTEwKih2ZygpLTIpLGM9V2gtYyxlaShhLGIsZCxhLmV4cGlyYXRpb25UaW1lLDA+Yz8wOmMpKX19XG5mdW5jdGlvbiBHaChhLGIpe3ZhciBjO2E6e1ZoJiYhWWg/cihcIjI2M1wiKTp2b2lkIDA7Zm9yKGM9YS5yZXR1cm47bnVsbCE9PWM7KXtzd2l0Y2goYy50YWcpe2Nhc2UgMTp2YXIgZD1jLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09UGh8fCFQaC5oYXMoZCkpKXthPWJnKGIsYSk7YT1PaChjLGEsMSk7VmYoYyxhKTt4ZyhjLDEpO2M9dm9pZCAwO2JyZWFrIGF9YnJlYWs7Y2FzZSAzOmE9YmcoYixhKTthPU1oKGMsYSwxKTtWZihjLGEpO3hnKGMsMSk7Yz12b2lkIDA7YnJlYWsgYX1jPWMucmV0dXJufTM9PT1hLnRhZyYmKGM9YmcoYixhKSxjPU1oKGEsYywxKSxWZihhLGMpLHhnKGEsMSkpO2M9dm9pZCAwfXJldHVybiBjfVxuZnVuY3Rpb24gd2coYSxiKXswIT09VWg/YT1VaDpWaD9hPVloPzE6UzpiLm1vZGUmMT8oYT1maT8yKzEwKigoKGEtMisxNSkvMTB8MCkrMSk6MisyNSooKChhLTIrNTAwKS8yNXwwKSsxKSxudWxsIT09UiYmYT09PVMmJihhKz0xKSk6YT0xO2ZpJiZhPmdpJiYoZ2k9YSk7cmV0dXJuIGF9XG5mdW5jdGlvbiBkaShhLGIsYyxkKXt2YXIgZT1hLmVhcmxpZXN0U3VzcGVuZGVkVGltZTt2YXIgZj1hLmxhdGVzdFN1c3BlbmRlZFRpbWU7aWYoMCE9PWUmJmQ+PWUmJmQ8PWYpe2Y9ZT1kO2EuZGlkRXJyb3I9ITE7dmFyIGc9YS5sYXRlc3RQaW5nZWRUaW1lO2lmKDA9PT1nfHxnPGYpYS5sYXRlc3RQaW5nZWRUaW1lPWY7TmYoZixhKX1lbHNlIGU9dmcoKSxlPXdnKGUsYiksTWYoYSxlKTswIT09KGIubW9kZSYxKSYmYT09PVImJlM9PT1kJiYoUj1udWxsKTtoaShiLGUpOzA9PT0oYi5tb2RlJjEpJiYoaGkoYyxlKSwxPT09Yy50YWcmJm51bGwhPT1jLnN0YXRlTm9kZSYmKGI9VGYoZSksYi50YWc9MixWZihjLGIpKSk7Yz1hLmV4cGlyYXRpb25UaW1lOzAhPT1jJiZpaShhLGMpfVxuZnVuY3Rpb24gaGkoYSxiKXtpZigwPT09YS5leHBpcmF0aW9uVGltZXx8YS5leHBpcmF0aW9uVGltZT5iKWEuZXhwaXJhdGlvblRpbWU9Yjt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmKDA9PT1jLmV4cGlyYXRpb25UaW1lfHxjLmV4cGlyYXRpb25UaW1lPmIpJiYoYy5leHBpcmF0aW9uVGltZT1iKTt2YXIgZD1hLnJldHVybixlPW51bGw7aWYobnVsbD09PWQmJjM9PT1hLnRhZyllPWEuc3RhdGVOb2RlO2Vsc2UgZm9yKDtudWxsIT09ZDspe2M9ZC5hbHRlcm5hdGU7aWYoMD09PWQuY2hpbGRFeHBpcmF0aW9uVGltZXx8ZC5jaGlsZEV4cGlyYXRpb25UaW1lPmIpZC5jaGlsZEV4cGlyYXRpb25UaW1lPWI7bnVsbCE9PWMmJigwPT09Yy5jaGlsZEV4cGlyYXRpb25UaW1lfHxjLmNoaWxkRXhwaXJhdGlvblRpbWU+YikmJihjLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7aWYobnVsbD09PWQucmV0dXJuJiYzPT09ZC50YWcpe2U9ZC5zdGF0ZU5vZGU7YnJlYWt9ZD1kLnJldHVybn1yZXR1cm4gbnVsbD09PVxuZT9udWxsOmV9ZnVuY3Rpb24geGcoYSxiKXthPWhpKGEsYik7bnVsbCE9PWEmJighVmgmJjAhPT1TJiZiPFMmJlpoKCksTWYoYSxiKSxWaCYmIVloJiZSPT09YXx8aWkoYSxhLmV4cGlyYXRpb25UaW1lKSxqaT5raSYmKGppPTAscihcIjE4NVwiKSkpfWZ1bmN0aW9uIGxpKGEsYixjLGQsZSl7dmFyIGY9VWg7VWg9MTt0cnl7cmV0dXJuIGEoYixjLGQsZSl9ZmluYWxseXtVaD1mfX12YXIgVT1udWxsLFY9bnVsbCxtaT0wLG5pPXZvaWQgMCxXPSExLFg9bnVsbCxZPTAsZ2k9MCxvaT0hMSxwaT0hMSxxaT1udWxsLHJpPW51bGwsWj0hMSxzaT0hMSxmaT0hMSx0aT1udWxsLHVpPWRhLnVuc3RhYmxlX25vdygpLHZpPSh1aS8xMHwwKSsyLHdpPXZpLGtpPTUwLGppPTAseGk9bnVsbCx5aT0xO2Z1bmN0aW9uIHppKCl7dmk9KChkYS51bnN0YWJsZV9ub3coKS11aSkvMTB8MCkrMn1cbmZ1bmN0aW9uIEFpKGEsYil7aWYoMCE9PW1pKXtpZihiPm1pKXJldHVybjtudWxsIT09bmkmJmRhLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrKG5pKX1taT1iO2E9ZGEudW5zdGFibGVfbm93KCktdWk7bmk9ZGEudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayhCaSx7dGltZW91dDoxMCooYi0yKS1hfSl9ZnVuY3Rpb24gZWkoYSxiLGMsZCxlKXthLmV4cGlyYXRpb25UaW1lPWQ7MCE9PWV8fGNpKCk/MDxlJiYoYS50aW1lb3V0SGFuZGxlPWtmKENpLmJpbmQobnVsbCxhLGIsYyksZSkpOihhLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT1jLGEuZmluaXNoZWRXb3JrPWIpfWZ1bmN0aW9uIENpKGEsYixjKXthLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT1jO2EuZmluaXNoZWRXb3JrPWI7emkoKTt3aT12aTtEaShhLGMpfWZ1bmN0aW9uIHZnKCl7aWYoVylyZXR1cm4gd2k7RWkoKTtpZigwPT09WXx8MTA3Mzc0MTgyMz09PVkpemkoKSx3aT12aTtyZXR1cm4gd2l9XG5mdW5jdGlvbiBpaShhLGIpe2lmKG51bGw9PT1hLm5leHRTY2hlZHVsZWRSb290KWEuZXhwaXJhdGlvblRpbWU9YixudWxsPT09Vj8oVT1WPWEsYS5uZXh0U2NoZWR1bGVkUm9vdD1hKTooVj1WLm5leHRTY2hlZHVsZWRSb290PWEsVi5uZXh0U2NoZWR1bGVkUm9vdD1VKTtlbHNle3ZhciBjPWEuZXhwaXJhdGlvblRpbWU7aWYoMD09PWN8fGI8YylhLmV4cGlyYXRpb25UaW1lPWJ9V3x8KFo/c2kmJihYPWEsWT0xLEZpKGEsMSwhMCkpOjE9PT1iP0dpKDEsbnVsbCk6QWkoYSxiKSl9XG5mdW5jdGlvbiBFaSgpe3ZhciBhPTAsYj1udWxsO2lmKG51bGwhPT1WKWZvcih2YXIgYz1WLGQ9VTtudWxsIT09ZDspe3ZhciBlPWQuZXhwaXJhdGlvblRpbWU7aWYoMD09PWUpe251bGw9PT1jfHxudWxsPT09Vj9yKFwiMjQ0XCIpOnZvaWQgMDtpZihkPT09ZC5uZXh0U2NoZWR1bGVkUm9vdCl7VT1WPWQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDticmVha31lbHNlIGlmKGQ9PT1VKVU9ZT1kLm5leHRTY2hlZHVsZWRSb290LFYubmV4dFNjaGVkdWxlZFJvb3Q9ZSxkLm5leHRTY2hlZHVsZWRSb290PW51bGw7ZWxzZSBpZihkPT09Vil7Vj1jO1YubmV4dFNjaGVkdWxlZFJvb3Q9VTtkLm5leHRTY2hlZHVsZWRSb290PW51bGw7YnJlYWt9ZWxzZSBjLm5leHRTY2hlZHVsZWRSb290PWQubmV4dFNjaGVkdWxlZFJvb3QsZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2Q9Yy5uZXh0U2NoZWR1bGVkUm9vdH1lbHNle2lmKDA9PT1hfHxlPGEpYT1lLGI9ZDtpZihkPT09VilicmVhaztpZigxPT09YSlicmVhaztcbmM9ZDtkPWQubmV4dFNjaGVkdWxlZFJvb3R9fVg9YjtZPWF9ZnVuY3Rpb24gQmkoYSl7aWYoYS5kaWRUaW1lb3V0JiZudWxsIT09VSl7emkoKTt2YXIgYj1VO2Rve3ZhciBjPWIuZXhwaXJhdGlvblRpbWU7MCE9PWMmJnZpPj1jJiYoYi5uZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbj12aSk7Yj1iLm5leHRTY2hlZHVsZWRSb290fXdoaWxlKGIhPT1VKX1HaSgwLGEpfVxuZnVuY3Rpb24gR2koYSxiKXtyaT1iO0VpKCk7aWYobnVsbCE9PXJpKWZvcih6aSgpLHdpPXZpO251bGwhPT1YJiYwIT09WSYmKDA9PT1hfHxhPj1ZKSYmKCFvaXx8dmk+PVkpOylGaShYLFksdmk+PVkpLEVpKCksemkoKSx3aT12aTtlbHNlIGZvcig7bnVsbCE9PVgmJjAhPT1ZJiYoMD09PWF8fGE+PVkpOylGaShYLFksITApLEVpKCk7bnVsbCE9PXJpJiYobWk9MCxuaT1udWxsKTswIT09WSYmQWkoWCxZKTtyaT1udWxsO29pPSExO2ppPTA7eGk9bnVsbDtpZihudWxsIT09dGkpZm9yKGE9dGksdGk9bnVsbCxiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBjPWFbYl07dHJ5e2MuX29uQ29tcGxldGUoKX1jYXRjaChkKXtwaXx8KHBpPSEwLHFpPWQpfX1pZihwaSl0aHJvdyBhPXFpLHFpPW51bGwscGk9ITEsYTt9ZnVuY3Rpb24gRGkoYSxiKXtXP3IoXCIyNTNcIik6dm9pZCAwO1g9YTtZPWI7RmkoYSxiLCEwKTtHaSgxLG51bGwpfVxuZnVuY3Rpb24gRmkoYSxiLGMpe1c/cihcIjI0NVwiKTp2b2lkIDA7Vz0hMDtpZihudWxsPT09cml8fGMpe3ZhciBkPWEuZmluaXNoZWRXb3JrO251bGwhPT1kP0hpKGEsZCxiKTooYS5maW5pc2hlZFdvcms9bnVsbCxkPWEudGltZW91dEhhbmRsZSwtMSE9PWQmJihhLnRpbWVvdXRIYW5kbGU9LTEsbGYoZCkpLGJpKGEsITEsYyksZD1hLmZpbmlzaGVkV29yayxudWxsIT09ZCYmSGkoYSxkLGIpKX1lbHNlIGQ9YS5maW5pc2hlZFdvcmssbnVsbCE9PWQ/SGkoYSxkLGIpOihhLmZpbmlzaGVkV29yaz1udWxsLGQ9YS50aW1lb3V0SGFuZGxlLC0xIT09ZCYmKGEudGltZW91dEhhbmRsZT0tMSxsZihkKSksYmkoYSwhMCxjKSxkPWEuZmluaXNoZWRXb3JrLG51bGwhPT1kJiYoY2koKT9hLmZpbmlzaGVkV29yaz1kOkhpKGEsZCxiKSkpO1c9ITF9XG5mdW5jdGlvbiBIaShhLGIsYyl7dmFyIGQ9YS5maXJzdEJhdGNoO2lmKG51bGwhPT1kJiZkLl9leHBpcmF0aW9uVGltZTw9YyYmKG51bGw9PT10aT90aT1bZF06dGkucHVzaChkKSxkLl9kZWZlcikpe2EuZmluaXNoZWRXb3JrPWI7YS5leHBpcmF0aW9uVGltZT0wO3JldHVybn1hLmZpbmlzaGVkV29yaz1udWxsO2E9PT14aT9qaSsrOih4aT1hLGppPTApO1loPVZoPSEwO2EuY3VycmVudD09PWI/cihcIjE3N1wiKTp2b2lkIDA7dmFyIGU9YS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU7MD09PWU/cihcIjI2MVwiKTp2b2lkIDA7YS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9MDt2YXIgZj1iLmV4cGlyYXRpb25UaW1lLGc9Yi5jaGlsZEV4cGlyYXRpb25UaW1lLGg9MD09PWZ8fDAhPT1nJiZnPGY/ZzpmO2EuZGlkRXJyb3I9ITE7aWYoMD09PWgpYS5lYXJsaWVzdFBlbmRpbmdUaW1lPTAsYS5sYXRlc3RQZW5kaW5nVGltZT0wLGEuZWFybGllc3RTdXNwZW5kZWRUaW1lPTAsYS5sYXRlc3RTdXNwZW5kZWRUaW1lPVxuMCxhLmxhdGVzdFBpbmdlZFRpbWU9MDtlbHNle3ZhciBrPWEubGF0ZXN0UGVuZGluZ1RpbWU7MCE9PWsmJihrPGg/YS5lYXJsaWVzdFBlbmRpbmdUaW1lPWEubGF0ZXN0UGVuZGluZ1RpbWU9MDphLmVhcmxpZXN0UGVuZGluZ1RpbWU8aCYmKGEuZWFybGllc3RQZW5kaW5nVGltZT1hLmxhdGVzdFBlbmRpbmdUaW1lKSk7dmFyIGw9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU7MD09PWw/TWYoYSxoKTpoPmEubGF0ZXN0U3VzcGVuZGVkVGltZT8oYS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFBpbmdlZFRpbWU9MCxNZihhLGgpKTpoPGwmJk1mKGEsaCl9TmYoMCxhKTtTaC5jdXJyZW50PW51bGw7aWYoMTxiLmVmZmVjdFRhZylpZihudWxsIT09Yi5sYXN0RWZmZWN0KXtiLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1iO3ZhciBtPWIuZmlyc3RFZmZlY3R9ZWxzZSBtPWI7ZWxzZSBtPWIuZmlyc3RFZmZlY3Q7ZmY9Y2U7dmFyIHA9cGUoKTtpZihxZShwKSl7aWYoXCJzZWxlY3Rpb25TdGFydFwiaW5cbnApdmFyIHY9e3N0YXJ0OnAuc2VsZWN0aW9uU3RhcnQsZW5kOnAuc2VsZWN0aW9uRW5kfTtlbHNlIGE6e3ZhciBCPXAub3duZXJEb2N1bWVudCx3PUImJkIuZGVmYXVsdFZpZXd8fHdpbmRvdyxDPXcuZ2V0U2VsZWN0aW9uJiZ3LmdldFNlbGVjdGlvbigpO2lmKEMmJjAhPT1DLnJhbmdlQ291bnQpe3ZhciB1PUMuYW5jaG9yTm9kZSxxPUMuYW5jaG9yT2Zmc2V0LEE9Qy5mb2N1c05vZGUsZmU9Qy5mb2N1c09mZnNldDt0cnl7dS5ub2RlVHlwZSxBLm5vZGVUeXBlfWNhdGNoKGRiKXt2PW51bGw7YnJlYWsgYX12YXIgSWI9MCxKYz0tMSxLYz0tMSxOaT0wLE9pPTAsdD1wLEpiPW51bGw7Yjpmb3IoOzspe2Zvcih2YXIgTGM7Oyl7dCE9PXV8fDAhPT1xJiYzIT09dC5ub2RlVHlwZXx8KEpjPUliK3EpO3QhPT1BfHwwIT09ZmUmJjMhPT10Lm5vZGVUeXBlfHwoS2M9SWIrZmUpOzM9PT10Lm5vZGVUeXBlJiYoSWIrPXQubm9kZVZhbHVlLmxlbmd0aCk7aWYobnVsbD09PShMYz10LmZpcnN0Q2hpbGQpKWJyZWFrO1xuSmI9dDt0PUxjfWZvcig7Oyl7aWYodD09PXApYnJlYWsgYjtKYj09PXUmJisrTmk9PT1xJiYoSmM9SWIpO0piPT09QSYmKytPaT09PWZlJiYoS2M9SWIpO2lmKG51bGwhPT0oTGM9dC5uZXh0U2libGluZykpYnJlYWs7dD1KYjtKYj10LnBhcmVudE5vZGV9dD1MY312PS0xPT09SmN8fC0xPT09S2M/bnVsbDp7c3RhcnQ6SmMsZW5kOktjfX1lbHNlIHY9bnVsbH12YXIgZmg9dnx8e3N0YXJ0OjAsZW5kOjB9fWVsc2UgZmg9bnVsbDtnZj17Zm9jdXNlZEVsZW06cCxzZWxlY3Rpb25SYW5nZTpmaH07Y2U9ITE7Zm9yKFQ9bTtudWxsIT09VDspe3ZhciBnaD0hMSxoaD12b2lkIDA7dHJ5e2Zvcig7bnVsbCE9PVQ7KXtpZihULmVmZmVjdFRhZyYyNTYpe3ZhciB2ZT1ULmFsdGVybmF0ZTthOnt2YXIgUWI9VDtzd2l0Y2goUWIudGFnKXtjYXNlIDE6aWYoUWIuZWZmZWN0VGFnJjI1NiYmbnVsbCE9PXZlKXt2YXIgWmk9dmUubWVtb2l6ZWRQcm9wcywkaT12ZS5tZW1vaXplZFN0YXRlLFZjPVFiLnN0YXRlTm9kZTtcblZjLnByb3BzPVFiLm1lbW9pemVkUHJvcHM7VmMuc3RhdGU9UWIubWVtb2l6ZWRTdGF0ZTt2YXIgYWo9VmMuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoWmksJGkpO1ZjLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlPWFqfWJyZWFrIGE7Y2FzZSAzOmNhc2UgNTpjYXNlIDY6Y2FzZSA0OmNhc2UgMTc6YnJlYWsgYTtkZWZhdWx0OnIoXCIxNjNcIil9fX1UPVQubmV4dEVmZmVjdH19Y2F0Y2goZGIpe2doPSEwLGhoPWRifWdoJiYobnVsbD09PVQ/cihcIjE3OFwiKTp2b2lkIDAsR2goVCxoaCksbnVsbCE9PVQmJihUPVQubmV4dEVmZmVjdCkpfWZvcihUPW07bnVsbCE9PVQ7KXt2YXIgaWg9ITEsamg9dm9pZCAwO3RyeXtmb3IoO251bGwhPT1UOyl7dmFyIHdlPVQuZWZmZWN0VGFnO3dlJjE2JiZYZShULnN0YXRlTm9kZSxcIlwiKTtpZih3ZSYxMjgpe3ZhciBraD1ULmFsdGVybmF0ZTtpZihudWxsIT09a2gpe3ZhciBXYz1raC5yZWY7bnVsbCE9PVdjJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIFdjP1xuV2MobnVsbCk6V2MuY3VycmVudD1udWxsKX19c3dpdGNoKHdlJjE0KXtjYXNlIDI6S2goVCk7VC5lZmZlY3RUYWcmPS0zO2JyZWFrO2Nhc2UgNjpLaChUKTtULmVmZmVjdFRhZyY9LTM7TGgoVC5hbHRlcm5hdGUsVCk7YnJlYWs7Y2FzZSA0OkxoKFQuYWx0ZXJuYXRlLFQpO2JyZWFrO2Nhc2UgODp2YXIgbGg9VDtJaChsaCk7dmFyIFJiPWxoO1JiLnJldHVybj1udWxsO1JiLmNoaWxkPW51bGw7UmIuYWx0ZXJuYXRlJiYoUmIuYWx0ZXJuYXRlLmNoaWxkPW51bGwsUmIuYWx0ZXJuYXRlLnJldHVybj1udWxsKX1UPVQubmV4dEVmZmVjdH19Y2F0Y2goZGIpe2loPSEwLGpoPWRifWloJiYobnVsbD09PVQ/cihcIjE3OFwiKTp2b2lkIDAsR2goVCxqaCksbnVsbCE9PVQmJihUPVQubmV4dEVmZmVjdCkpfXZhciBtaD1nZixiaj1wZSgpLEU9bWguZm9jdXNlZEVsZW0sZWI9bWguc2VsZWN0aW9uUmFuZ2U7aWYoYmohPT1FJiZFJiZFLm93bmVyRG9jdW1lbnQmJm9lKEUub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsXG5FKSl7aWYobnVsbCE9PWViJiZxZShFKSl7dmFyIG5oPWViLnN0YXJ0LHhlPWViLmVuZDt2b2lkIDA9PT14ZSYmKHhlPW5oKTtpZihcInNlbGVjdGlvblN0YXJ0XCJpbiBFKUUuc2VsZWN0aW9uU3RhcnQ9bmgsRS5zZWxlY3Rpb25FbmQ9TWF0aC5taW4oeGUsRS52YWx1ZS5sZW5ndGgpO2Vsc2V7dmFyIHllPUUub3duZXJEb2N1bWVudHx8ZG9jdW1lbnQsYmE9KHllJiZ5ZS5kZWZhdWx0Vmlld3x8d2luZG93KS5nZXRTZWxlY3Rpb24oKSxvaD1FLnRleHRDb250ZW50Lmxlbmd0aCxmYj1NYXRoLm1pbihlYi5zdGFydCxvaCksU2I9dm9pZCAwPT09ZWIuZW5kP2ZiOk1hdGgubWluKGViLmVuZCxvaCk7aWYoIWJhLmV4dGVuZCYmZmI+U2Ipe3ZhciBjaj1TYjtTYj1mYjtmYj1jan12YXIgVGI9bmUoRSxmYiksSmE9bmUoRSxTYik7aWYoVGImJkphJiYoMSE9PWJhLnJhbmdlQ291bnR8fGJhLmFuY2hvck5vZGUhPT1UYi5ub2RlfHxiYS5hbmNob3JPZmZzZXQhPT1UYi5vZmZzZXR8fGJhLmZvY3VzTm9kZSE9PVxuSmEubm9kZXx8YmEuZm9jdXNPZmZzZXQhPT1KYS5vZmZzZXQpKXt2YXIgWGM9eWUuY3JlYXRlUmFuZ2UoKTtYYy5zZXRTdGFydChUYi5ub2RlLFRiLm9mZnNldCk7YmEucmVtb3ZlQWxsUmFuZ2VzKCk7ZmI+U2I/KGJhLmFkZFJhbmdlKFhjKSxiYS5leHRlbmQoSmEubm9kZSxKYS5vZmZzZXQpKTooWGMuc2V0RW5kKEphLm5vZGUsSmEub2Zmc2V0KSxiYS5hZGRSYW5nZShYYykpfX19Zm9yKHZhciB6ZT1bXSxnYj1FO2diPWdiLnBhcmVudE5vZGU7KTE9PT1nYi5ub2RlVHlwZSYmemUucHVzaCh7ZWxlbWVudDpnYixsZWZ0OmdiLnNjcm9sbExlZnQsdG9wOmdiLnNjcm9sbFRvcH0pO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBFLmZvY3VzJiZFLmZvY3VzKCk7Zm9yKHZhciBBZT0wO0FlPHplLmxlbmd0aDtBZSsrKXt2YXIgWWM9emVbQWVdO1ljLmVsZW1lbnQuc2Nyb2xsTGVmdD1ZYy5sZWZ0O1ljLmVsZW1lbnQuc2Nyb2xsVG9wPVljLnRvcH19Z2Y9bnVsbDtjZT0hIWZmO2ZmPW51bGw7YS5jdXJyZW50PVxuYjtmb3IoVD1tO251bGwhPT1UOyl7dmFyIHBoPSExLHFoPXZvaWQgMDt0cnl7Zm9yKHZhciBkaj1lO251bGwhPT1UOyl7dmFyIHJoPVQuZWZmZWN0VGFnO2lmKHJoJjM2KXt2YXIgWmM9dm9pZCAwLGhiPVQuYWx0ZXJuYXRlLHg9VCxzaD1kajtzd2l0Y2goeC50YWcpe2Nhc2UgMTp2YXIgY2E9eC5zdGF0ZU5vZGU7aWYoeC5lZmZlY3RUYWcmNClpZihudWxsPT09aGIpY2EucHJvcHM9eC5tZW1vaXplZFByb3BzLGNhLnN0YXRlPXgubWVtb2l6ZWRTdGF0ZSxjYS5jb21wb25lbnREaWRNb3VudCgpO2Vsc2V7dmFyIGVqPWhiLm1lbW9pemVkUHJvcHMsZmo9aGIubWVtb2l6ZWRTdGF0ZTtjYS5wcm9wcz14Lm1lbW9pemVkUHJvcHM7Y2Euc3RhdGU9eC5tZW1vaXplZFN0YXRlO2NhLmNvbXBvbmVudERpZFVwZGF0ZShlaixmaixjYS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSl9dmFyIHRoPXgudXBkYXRlUXVldWU7bnVsbCE9PXRoJiYoY2EucHJvcHM9eC5tZW1vaXplZFByb3BzLFxuY2Euc3RhdGU9eC5tZW1vaXplZFN0YXRlLCRmKHgsdGgsY2Esc2gpKTticmVhaztjYXNlIDM6dmFyIHVoPXgudXBkYXRlUXVldWU7aWYobnVsbCE9PXVoKXt2YXIgQmU9bnVsbDtpZihudWxsIT09eC5jaGlsZClzd2l0Y2goeC5jaGlsZC50YWcpe2Nhc2UgNTpCZT14LmNoaWxkLnN0YXRlTm9kZTticmVhaztjYXNlIDE6QmU9eC5jaGlsZC5zdGF0ZU5vZGV9JGYoeCx1aCxCZSxzaCl9YnJlYWs7Y2FzZSA1OnZhciBnaj14LnN0YXRlTm9kZTtudWxsPT09aGImJnguZWZmZWN0VGFnJjQmJmhmKHgudHlwZSx4Lm1lbW9pemVkUHJvcHMpJiZnai5mb2N1cygpO2JyZWFrO2Nhc2UgNjpicmVhaztjYXNlIDQ6YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDEzOmlmKHguZWZmZWN0VGFnJjMyKXt4Lm1lbW9pemVkU3RhdGU9e2FscmVhZHlDYXB0dXJlZDohMCxkaWRUaW1lb3V0OiExLHRpbWVkT3V0QXQ6MH07eGcoeCwxKTticmVha312YXIgdmg9bnVsbCE9PWhiP2hiLm1lbW9pemVkU3RhdGU6bnVsbCxcblViPXgubWVtb2l6ZWRTdGF0ZSxoaj1udWxsIT09dmg/dmguZGlkVGltZW91dDohMSxDZT14O2lmKG51bGw9PT1VYilaYz0hMTtlbHNlIGlmKFpjPVViLmRpZFRpbWVvdXQpQ2U9eC5jaGlsZCxVYi5hbHJlYWR5Q2FwdHVyZWQ9ITEsMD09PVViLnRpbWVkT3V0QXQmJihVYi50aW1lZE91dEF0PXZnKCkpO2lmKFpjIT09aGomJm51bGwhPT1DZSlhOmZvcih2YXIgRGU9Q2Usd2g9WmMsej1EZTs7KXtpZig1PT09ei50YWcpe3ZhciBpaj16LnN0YXRlTm9kZTtpZih3aClpai5zdHlsZS5kaXNwbGF5PVwibm9uZVwiO2Vsc2V7dmFyIGpqPXouc3RhdGVOb2RlLCRjPXoubWVtb2l6ZWRQcm9wcy5zdHlsZSxraj12b2lkIDAhPT0kYyYmbnVsbCE9PSRjJiYkYy5oYXNPd25Qcm9wZXJ0eShcImRpc3BsYXlcIik/JGMuZGlzcGxheTpudWxsO2pqLnN0eWxlLmRpc3BsYXk9a2p9fWVsc2UgaWYoNj09PXoudGFnKXouc3RhdGVOb2RlLm5vZGVWYWx1ZT13aD9cIlwiOnoubWVtb2l6ZWRQcm9wcztlbHNlIGlmKG51bGwhPT1cbnouY2hpbGQpe3ouY2hpbGQucmV0dXJuPXo7ej16LmNoaWxkO2NvbnRpbnVlfWlmKHo9PT1EZSlicmVhayBhO2Zvcig7bnVsbD09PXouc2libGluZzspe2lmKG51bGw9PT16LnJldHVybnx8ei5yZXR1cm49PT1EZSlicmVhayBhO3o9ei5yZXR1cm59ei5zaWJsaW5nLnJldHVybj16LnJldHVybjt6PXouc2libGluZ31icmVhaztjYXNlIDE3OmJyZWFrO2RlZmF1bHQ6cihcIjE2M1wiKX19aWYocmgmMTI4KXt2YXIgYWQ9VC5yZWY7aWYobnVsbCE9PWFkKXt2YXIgeGg9VC5zdGF0ZU5vZGU7c3dpdGNoKFQudGFnKXtjYXNlIDU6dmFyIEVlPXhoO2JyZWFrO2RlZmF1bHQ6RWU9eGh9XCJmdW5jdGlvblwiPT09dHlwZW9mIGFkP2FkKEVlKTphZC5jdXJyZW50PUVlfX12YXIgbGo9VC5uZXh0RWZmZWN0O1QubmV4dEVmZmVjdD1udWxsO1Q9bGp9fWNhdGNoKGRiKXtwaD0hMCxxaD1kYn1waCYmKG51bGw9PT1UP3IoXCIxNzhcIik6dm9pZCAwLEdoKFQscWgpLG51bGwhPT1UJiYoVD1ULm5leHRFZmZlY3QpKX1WaD1cblloPSExO1wiZnVuY3Rpb25cIj09PXR5cGVvZiB6ZiYmemYoYi5zdGF0ZU5vZGUpO3ZhciBGZT1iLmV4cGlyYXRpb25UaW1lLEdlPWIuY2hpbGRFeHBpcmF0aW9uVGltZSx5aD0wPT09RmV8fDAhPT1HZSYmR2U8RmU/R2U6RmU7MD09PXloJiYoUGg9bnVsbCk7YS5leHBpcmF0aW9uVGltZT15aDthLmZpbmlzaGVkV29yaz1udWxsfWZ1bmN0aW9uIGNpKCl7cmV0dXJuIG9pPyEwOm51bGw9PT1yaXx8cmkudGltZVJlbWFpbmluZygpPnlpPyExOm9pPSEwfWZ1bmN0aW9uIE5oKGEpe251bGw9PT1YP3IoXCIyNDZcIik6dm9pZCAwO1guZXhwaXJhdGlvblRpbWU9MDtwaXx8KHBpPSEwLHFpPWEpfWZ1bmN0aW9uIElpKGEsYil7dmFyIGM9WjtaPSEwO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5eyhaPWMpfHxXfHxHaSgxLG51bGwpfX1mdW5jdGlvbiBKaShhLGIpe2lmKFomJiFzaSl7c2k9ITA7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7c2k9ITF9fXJldHVybiBhKGIpfVxuZnVuY3Rpb24gS2koYSxiLGMpe2lmKGZpKXJldHVybiBhKGIsYyk7Wnx8V3x8MD09PWdpfHwoR2koZ2ksbnVsbCksZ2k9MCk7dmFyIGQ9ZmksZT1aO1o9Zmk9ITA7dHJ5e3JldHVybiBhKGIsYyl9ZmluYWxseXtmaT1kLChaPWUpfHxXfHxHaSgxLG51bGwpfX1cbmZ1bmN0aW9uIExpKGEsYixjLGQsZSl7dmFyIGY9Yi5jdXJyZW50O2E6aWYoYyl7Yz1jLl9yZWFjdEludGVybmFsRmliZXI7Yjp7Mj09PUdkKGMpJiYxPT09Yy50YWc/dm9pZCAwOnIoXCIxNzBcIik7dmFyIGc9Yztkb3tzd2l0Y2goZy50YWcpe2Nhc2UgMzpnPWcuc3RhdGVOb2RlLmNvbnRleHQ7YnJlYWsgYjtjYXNlIDE6aWYoTShnLnR5cGUpKXtnPWcuc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGJ9fWc9Zy5yZXR1cm59d2hpbGUobnVsbCE9PWcpO3IoXCIxNzFcIik7Zz12b2lkIDB9aWYoMT09PWMudGFnKXt2YXIgaD1jLnR5cGU7aWYoTShoKSl7Yz13ZihjLGgsZyk7YnJlYWsgYX19Yz1nfWVsc2UgYz1xZjtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPWU7ZT1UZihkKTtlLnBheWxvYWQ9e2VsZW1lbnQ6YX07Yj12b2lkIDA9PT1iP251bGw6YjtudWxsIT09YiYmKGUuY2FsbGJhY2s9Yik7XG5WZihmLGUpO3hnKGYsZCk7cmV0dXJuIGR9ZnVuY3Rpb24gTWkoYSxiLGMsZCl7dmFyIGU9Yi5jdXJyZW50LGY9dmcoKTtlPXdnKGYsZSk7cmV0dXJuIExpKGEsYixjLGUsZCl9ZnVuY3Rpb24gUGkoYSl7YT1hLmN1cnJlbnQ7aWYoIWEuY2hpbGQpcmV0dXJuIG51bGw7c3dpdGNoKGEuY2hpbGQudGFnKXtjYXNlIDU6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlO2RlZmF1bHQ6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlfX1mdW5jdGlvbiBRaShhLGIsYyl7dmFyIGQ9Mzxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOm51bGw7cmV0dXJueyQkdHlwZW9mOm5jLGtleTpudWxsPT1kP251bGw6XCJcIitkLGNoaWxkcmVuOmEsY29udGFpbmVySW5mbzpiLGltcGxlbWVudGF0aW9uOmN9fVxuTmI9ZnVuY3Rpb24oYSxiLGMpe3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpUYyhhLGMpO2I9Yy5uYW1lO2lmKFwicmFkaW9cIj09PWMudHlwZSYmbnVsbCE9Yil7Zm9yKGM9YTtjLnBhcmVudE5vZGU7KWM9Yy5wYXJlbnROb2RlO2M9Yy5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRbbmFtZT1cIitKU09OLnN0cmluZ2lmeShcIlwiK2IpKyddW3R5cGU9XCJyYWRpb1wiXScpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspe3ZhciBkPWNbYl07aWYoZCE9PWEmJmQuZm9ybT09PWEuZm9ybSl7dmFyIGU9UWEoZCk7ZT92b2lkIDA6cihcIjkwXCIpO2pjKGQpO1RjKGQsZSl9fX1icmVhaztjYXNlIFwidGV4dGFyZWFcIjpRZShhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMudmFsdWUsbnVsbCE9YiYmTmUoYSwhIWMubXVsdGlwbGUsYiwhMSl9fTtcbmZ1bmN0aW9uIFJpKGEpe3ZhciBiPTIrMjUqKCgodmcoKS0yKzUwMCkvMjV8MCkrMSk7Yjw9VGgmJihiPVRoKzEpO3RoaXMuX2V4cGlyYXRpb25UaW1lPVRoPWI7dGhpcy5fcm9vdD1hO3RoaXMuX2NhbGxiYWNrcz10aGlzLl9uZXh0PW51bGw7dGhpcy5faGFzQ2hpbGRyZW49dGhpcy5fZGlkQ29tcGxldGU9ITE7dGhpcy5fY2hpbGRyZW49bnVsbDt0aGlzLl9kZWZlcj0hMH1SaS5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEpe3RoaXMuX2RlZmVyP3ZvaWQgMDpyKFwiMjUwXCIpO3RoaXMuX2hhc0NoaWxkcmVuPSEwO3RoaXMuX2NoaWxkcmVuPWE7dmFyIGI9dGhpcy5fcm9vdC5faW50ZXJuYWxSb290LGM9dGhpcy5fZXhwaXJhdGlvblRpbWUsZD1uZXcgU2k7TGkoYSxiLG51bGwsYyxkLl9vbkNvbW1pdCk7cmV0dXJuIGR9O1xuUmkucHJvdG90eXBlLnRoZW49ZnVuY3Rpb24oYSl7aWYodGhpcy5fZGlkQ29tcGxldGUpYSgpO2Vsc2V7dmFyIGI9dGhpcy5fY2FsbGJhY2tzO251bGw9PT1iJiYoYj10aGlzLl9jYWxsYmFja3M9W10pO2IucHVzaChhKX19O1xuUmkucHJvdG90eXBlLmNvbW1pdD1mdW5jdGlvbigpe3ZhciBhPXRoaXMuX3Jvb3QuX2ludGVybmFsUm9vdCxiPWEuZmlyc3RCYXRjaDt0aGlzLl9kZWZlciYmbnVsbCE9PWI/dm9pZCAwOnIoXCIyNTFcIik7aWYodGhpcy5faGFzQ2hpbGRyZW4pe3ZhciBjPXRoaXMuX2V4cGlyYXRpb25UaW1lO2lmKGIhPT10aGlzKXt0aGlzLl9oYXNDaGlsZHJlbiYmKGM9dGhpcy5fZXhwaXJhdGlvblRpbWU9Yi5fZXhwaXJhdGlvblRpbWUsdGhpcy5yZW5kZXIodGhpcy5fY2hpbGRyZW4pKTtmb3IodmFyIGQ9bnVsbCxlPWI7ZSE9PXRoaXM7KWQ9ZSxlPWUuX25leHQ7bnVsbD09PWQ/cihcIjI1MVwiKTp2b2lkIDA7ZC5fbmV4dD1lLl9uZXh0O3RoaXMuX25leHQ9YjthLmZpcnN0QmF0Y2g9dGhpc310aGlzLl9kZWZlcj0hMTtEaShhLGMpO2I9dGhpcy5fbmV4dDt0aGlzLl9uZXh0PW51bGw7Yj1hLmZpcnN0QmF0Y2g9YjtudWxsIT09YiYmYi5faGFzQ2hpbGRyZW4mJmIucmVuZGVyKGIuX2NoaWxkcmVuKX1lbHNlIHRoaXMuX25leHQ9XG5udWxsLHRoaXMuX2RlZmVyPSExfTtSaS5wcm90b3R5cGUuX29uQ29tcGxldGU9ZnVuY3Rpb24oKXtpZighdGhpcy5fZGlkQ29tcGxldGUpe3RoaXMuX2RpZENvbXBsZXRlPSEwO3ZhciBhPXRoaXMuX2NhbGxiYWNrcztpZihudWxsIT09YSlmb3IodmFyIGI9MDtiPGEubGVuZ3RoO2IrKykoMCxhW2JdKSgpfX07ZnVuY3Rpb24gU2koKXt0aGlzLl9jYWxsYmFja3M9bnVsbDt0aGlzLl9kaWRDb21taXQ9ITE7dGhpcy5fb25Db21taXQ9dGhpcy5fb25Db21taXQuYmluZCh0aGlzKX1TaS5wcm90b3R5cGUudGhlbj1mdW5jdGlvbihhKXtpZih0aGlzLl9kaWRDb21taXQpYSgpO2Vsc2V7dmFyIGI9dGhpcy5fY2FsbGJhY2tzO251bGw9PT1iJiYoYj10aGlzLl9jYWxsYmFja3M9W10pO2IucHVzaChhKX19O1xuU2kucHJvdG90eXBlLl9vbkNvbW1pdD1mdW5jdGlvbigpe2lmKCF0aGlzLl9kaWRDb21taXQpe3RoaXMuX2RpZENvbW1pdD0hMDt2YXIgYT10aGlzLl9jYWxsYmFja3M7aWYobnVsbCE9PWEpZm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBjPWFbYl07XCJmdW5jdGlvblwiIT09dHlwZW9mIGM/cihcIjE5MVwiLGMpOnZvaWQgMDtjKCl9fX07XG5mdW5jdGlvbiBUaShhLGIsYyl7Yj1OKDMsbnVsbCxudWxsLGI/MzowKTthPXtjdXJyZW50OmIsY29udGFpbmVySW5mbzphLHBlbmRpbmdDaGlsZHJlbjpudWxsLGVhcmxpZXN0UGVuZGluZ1RpbWU6MCxsYXRlc3RQZW5kaW5nVGltZTowLGVhcmxpZXN0U3VzcGVuZGVkVGltZTowLGxhdGVzdFN1c3BlbmRlZFRpbWU6MCxsYXRlc3RQaW5nZWRUaW1lOjAsZGlkRXJyb3I6ITEscGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lOjAsZmluaXNoZWRXb3JrOm51bGwsdGltZW91dEhhbmRsZTotMSxjb250ZXh0Om51bGwscGVuZGluZ0NvbnRleHQ6bnVsbCxoeWRyYXRlOmMsbmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT246MCxleHBpcmF0aW9uVGltZTowLGZpcnN0QmF0Y2g6bnVsbCxuZXh0U2NoZWR1bGVkUm9vdDpudWxsfTt0aGlzLl9pbnRlcm5hbFJvb3Q9Yi5zdGF0ZU5vZGU9YX1cblRpLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLl9pbnRlcm5hbFJvb3QsZD1uZXcgU2k7Yj12b2lkIDA9PT1iP251bGw6YjtudWxsIT09YiYmZC50aGVuKGIpO01pKGEsYyxudWxsLGQuX29uQ29tbWl0KTtyZXR1cm4gZH07VGkucHJvdG90eXBlLnVubW91bnQ9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5faW50ZXJuYWxSb290LGM9bmV3IFNpO2E9dm9pZCAwPT09YT9udWxsOmE7bnVsbCE9PWEmJmMudGhlbihhKTtNaShudWxsLGIsbnVsbCxjLl9vbkNvbW1pdCk7cmV0dXJuIGN9O1RpLnByb3RvdHlwZS5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXRoaXMuX2ludGVybmFsUm9vdCxlPW5ldyBTaTtjPXZvaWQgMD09PWM/bnVsbDpjO251bGwhPT1jJiZlLnRoZW4oYyk7TWkoYixkLGEsZS5fb25Db21taXQpO3JldHVybiBlfTtcblRpLnByb3RvdHlwZS5jcmVhdGVCYXRjaD1mdW5jdGlvbigpe3ZhciBhPW5ldyBSaSh0aGlzKSxiPWEuX2V4cGlyYXRpb25UaW1lLGM9dGhpcy5faW50ZXJuYWxSb290LGQ9Yy5maXJzdEJhdGNoO2lmKG51bGw9PT1kKWMuZmlyc3RCYXRjaD1hLGEuX25leHQ9bnVsbDtlbHNle2ZvcihjPW51bGw7bnVsbCE9PWQmJmQuX2V4cGlyYXRpb25UaW1lPD1iOyljPWQsZD1kLl9uZXh0O2EuX25leHQ9ZDtudWxsIT09YyYmKGMuX25leHQ9YSl9cmV0dXJuIGF9O2Z1bmN0aW9uIFVpKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlJiYoOCE9PWEubm9kZVR5cGV8fFwiIHJlYWN0LW1vdW50LXBvaW50LXVuc3RhYmxlIFwiIT09YS5ub2RlVmFsdWUpKX1ZYj1JaTtaYj1LaTskYj1mdW5jdGlvbigpe1d8fDA9PT1naXx8KEdpKGdpLG51bGwpLGdpPTApfTtcbmZ1bmN0aW9uIFZpKGEsYil7Ynx8KGI9YT85PT09YS5ub2RlVHlwZT9hLmRvY3VtZW50RWxlbWVudDphLmZpcnN0Q2hpbGQ6bnVsbCxiPSEoIWJ8fDEhPT1iLm5vZGVUeXBlfHwhYi5oYXNBdHRyaWJ1dGUoXCJkYXRhLXJlYWN0cm9vdFwiKSkpO2lmKCFiKWZvcih2YXIgYztjPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGMpO3JldHVybiBuZXcgVGkoYSwhMSxiKX1cbmZ1bmN0aW9uIFdpKGEsYixjLGQsZSl7VWkoYyk/dm9pZCAwOnIoXCIyMDBcIik7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgZz1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1QaShmLl9pbnRlcm5hbFJvb3QpO2cuY2FsbChhKX19bnVsbCE9YT9mLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcihhLGIsZSk6Zi5yZW5kZXIoYixlKX1lbHNle2Y9Yy5fcmVhY3RSb290Q29udGFpbmVyPVZpKGMsZCk7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBoPWU7ZT1mdW5jdGlvbigpe3ZhciBhPVBpKGYuX2ludGVybmFsUm9vdCk7aC5jYWxsKGEpfX1KaShmdW5jdGlvbigpe251bGwhPWE/Zi5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIoYSxiLGUpOmYucmVuZGVyKGIsZSl9KX1yZXR1cm4gUGkoZi5faW50ZXJuYWxSb290KX1cbmZ1bmN0aW9uIFhpKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7VWkoYik/dm9pZCAwOnIoXCIyMDBcIik7cmV0dXJuIFFpKGEsYixudWxsLGMpfVxudmFyIFlpPXtjcmVhdGVQb3J0YWw6WGksZmluZERPTU5vZGU6ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFsRmliZXI7dm9pZCAwPT09YiYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcj9yKFwiMTg4XCIpOnIoXCIyNjhcIixPYmplY3Qua2V5cyhhKSkpO2E9SmQoYik7YT1udWxsPT09YT9udWxsOmEuc3RhdGVOb2RlO3JldHVybiBhfSxoeWRyYXRlOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gV2kobnVsbCxhLGIsITAsYyl9LHJlbmRlcjpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIFdpKG51bGwsYSxiLCExLGMpfSx1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcjpmdW5jdGlvbihhLGIsYyxkKXtudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFsRmliZXI/cihcIjM4XCIpOnZvaWQgMDtyZXR1cm4gV2koYSxiLGMsITEsZCl9LHVubW91bnRDb21wb25lbnRBdE5vZGU6ZnVuY3Rpb24oYSl7VWkoYSk/XG52b2lkIDA6cihcIjQwXCIpO3JldHVybiBhLl9yZWFjdFJvb3RDb250YWluZXI/KEppKGZ1bmN0aW9uKCl7V2kobnVsbCxudWxsLGEsITEsZnVuY3Rpb24oKXthLl9yZWFjdFJvb3RDb250YWluZXI9bnVsbH0pfSksITApOiExfSx1bnN0YWJsZV9jcmVhdGVQb3J0YWw6ZnVuY3Rpb24oKXtyZXR1cm4gWGkuYXBwbHkodm9pZCAwLGFyZ3VtZW50cyl9LHVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzOklpLHVuc3RhYmxlX2ludGVyYWN0aXZlVXBkYXRlczpLaSxmbHVzaFN5bmM6ZnVuY3Rpb24oYSxiKXtXP3IoXCIxODdcIik6dm9pZCAwO3ZhciBjPVo7Wj0hMDt0cnl7cmV0dXJuIGxpKGEsYil9ZmluYWxseXtaPWMsR2koMSxudWxsKX19LHVuc3RhYmxlX2ZsdXNoQ29udHJvbGxlZDpmdW5jdGlvbihhKXt2YXIgYj1aO1o9ITA7dHJ5e2xpKGEpfWZpbmFsbHl7KFo9Yil8fFd8fEdpKDEsbnVsbCl9fSxfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDp7RXZlbnRzOltPYSxcblBhLFFhLEdhLmluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSxzYSxXYSxmdW5jdGlvbihhKXtCYShhLFZhKX0sV2IsWGIsZWUsSWFdfSx1bnN0YWJsZV9jcmVhdGVSb290OmZ1bmN0aW9uKGEsYil7VWkoYSk/dm9pZCAwOnIoXCIyNzhcIik7cmV0dXJuIG5ldyBUaShhLCEwLG51bGwhPWImJiEwPT09Yi5oeWRyYXRlKX19OyhmdW5jdGlvbihhKXt2YXIgYj1hLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlO3JldHVybiBDZihuKHt9LGEse2ZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9SmQoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOmZ1bmN0aW9uKGEpe3JldHVybiBiP2IoYSk6bnVsbH19KSl9KSh7ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6TmEsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNi42LjBcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9KTtcbnZhciBtaj17ZGVmYXVsdDpZaX0sbmo9bWomJllpfHxtajttb2R1bGUuZXhwb3J0cz1uai5kZWZhdWx0fHxuajtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjYuMFxuICogc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBjPW51bGwsZj0zLGg9LTEsaz0tMSxsPSExLG09ITEsbj1cIm9iamVjdFwiPT09dHlwZW9mIHBlcmZvcm1hbmNlJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgcGVyZm9ybWFuY2Uubm93LHE9e3RpbWVSZW1haW5pbmc6bj9mdW5jdGlvbigpe2lmKG51bGwhPT1jJiZjLmV4cGlyYXRpb25UaW1lPGspcmV0dXJuIDA7dmFyIGE9cCgpLXBlcmZvcm1hbmNlLm5vdygpO3JldHVybiAwPGE/YTowfTpmdW5jdGlvbigpe2lmKG51bGwhPT1jJiZjLmV4cGlyYXRpb25UaW1lPGspcmV0dXJuIDA7dmFyIGE9cCgpLURhdGUubm93KCk7cmV0dXJuIDA8YT9hOjB9LGRpZFRpbWVvdXQ6ITF9O2Z1bmN0aW9uIHIoKXtpZighbCl7dmFyIGE9Yy5leHBpcmF0aW9uVGltZTttP3QoKTptPSEwO3UodixhKX19XG5mdW5jdGlvbiB3KCl7dmFyIGE9YyxiPWMubmV4dDtpZihjPT09YiljPW51bGw7ZWxzZXt2YXIgZD1jLnByZXZpb3VzO2M9ZC5uZXh0PWI7Yi5wcmV2aW91cz1kfWEubmV4dD1hLnByZXZpb3VzPW51bGw7ZD1hLmNhbGxiYWNrO2I9YS5leHBpcmF0aW9uVGltZTthPWEucHJpb3JpdHlMZXZlbDt2YXIgZT1mLFI9aztmPWE7az1iO3RyeXt2YXIgZz1kKHEpfWZpbmFsbHl7Zj1lLGs9Un1pZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZylpZihnPXtjYWxsYmFjazpnLHByaW9yaXR5TGV2ZWw6YSxleHBpcmF0aW9uVGltZTpiLG5leHQ6bnVsbCxwcmV2aW91czpudWxsfSxudWxsPT09YyljPWcubmV4dD1nLnByZXZpb3VzPWc7ZWxzZXtkPW51bGw7YT1jO2Rve2lmKGEuZXhwaXJhdGlvblRpbWU+PWIpe2Q9YTticmVha31hPWEubmV4dH13aGlsZShhIT09Yyk7bnVsbD09PWQ/ZD1jOmQ9PT1jJiYoYz1nLHIoKSk7Yj1kLnByZXZpb3VzO2IubmV4dD1kLnByZXZpb3VzPWc7Zy5uZXh0PWQ7Zy5wcmV2aW91cz1cbmJ9fWZ1bmN0aW9uIHgoKXtpZigtMT09PWgmJm51bGwhPT1jJiYxPT09Yy5wcmlvcml0eUxldmVsKXtsPSEwO3EuZGlkVGltZW91dD0hMDt0cnl7ZG8gdygpO3doaWxlKG51bGwhPT1jJiYxPT09Yy5wcmlvcml0eUxldmVsKX1maW5hbGx5e2w9ITEsbnVsbCE9PWM/cigpOm09ITF9fX1mdW5jdGlvbiB2KGEpe2w9ITA7cS5kaWRUaW1lb3V0PWE7dHJ5e2lmKGEpZm9yKDtudWxsIT09Yzspe3ZhciBiPWV4cG9ydHMudW5zdGFibGVfbm93KCk7aWYoYy5leHBpcmF0aW9uVGltZTw9Yil7ZG8gdygpO3doaWxlKG51bGwhPT1jJiZjLmV4cGlyYXRpb25UaW1lPD1iKX1lbHNlIGJyZWFrfWVsc2UgaWYobnVsbCE9PWMpe2RvIHcoKTt3aGlsZShudWxsIT09YyYmMDxwKCktZXhwb3J0cy51bnN0YWJsZV9ub3coKSl9fWZpbmFsbHl7bD0hMSxudWxsIT09Yz9yKCk6bT0hMSx4KCl9fVxudmFyIHk9RGF0ZSx6PVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6dm9pZCAwLEE9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwLEI9XCJmdW5jdGlvblwiPT09dHlwZW9mIHJlcXVlc3RBbmltYXRpb25GcmFtZT9yZXF1ZXN0QW5pbWF0aW9uRnJhbWU6dm9pZCAwLEM9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNhbmNlbEFuaW1hdGlvbkZyYW1lP2NhbmNlbEFuaW1hdGlvbkZyYW1lOnZvaWQgMCxELEU7ZnVuY3Rpb24gRihhKXtEPUIoZnVuY3Rpb24oYil7QShFKTthKGIpfSk7RT16KGZ1bmN0aW9uKCl7QyhEKTthKGV4cG9ydHMudW5zdGFibGVfbm93KCkpfSwxMDApfWlmKG4pe3ZhciBHPXBlcmZvcm1hbmNlO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIEcubm93KCl9fWVsc2UgZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4geS5ub3coKX07dmFyIHUsdCxwO1xuaWYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiB3aW5kb3cmJndpbmRvdy5fc2NoZWRNb2NrKXt2YXIgSD13aW5kb3cuX3NjaGVkTW9jazt1PUhbMF07dD1IWzFdO3A9SFsyXX1lbHNlIGlmKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcImZ1bmN0aW9uXCIhPT10eXBlb2Ygd2luZG93LmFkZEV2ZW50TGlzdGVuZXIpe3ZhciBJPW51bGwsSj0tMSxLPWZ1bmN0aW9uKGEsYil7aWYobnVsbCE9PUkpe3ZhciBkPUk7ST1udWxsO3RyeXtKPWIsZChhKX1maW5hbGx5e0o9LTF9fX07dT1mdW5jdGlvbihhLGIpey0xIT09Sj9zZXRUaW1lb3V0KHUsMCxhLGIpOihJPWEsc2V0VGltZW91dChLLGIsITAsYiksc2V0VGltZW91dChLLDEwNzM3NDE4MjMsITEsMTA3Mzc0MTgyMykpfTt0PWZ1bmN0aW9uKCl7ST1udWxsfTtwPWZ1bmN0aW9uKCl7cmV0dXJuIEluZmluaXR5fTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybi0xPT09Sj8wOkp9fWVsc2V7XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjb25zb2xlJiZcbihcImZ1bmN0aW9uXCIhPT10eXBlb2YgQiYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgcmVxdWVzdEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL2ZiLm1lL3JlYWN0LXBvbHlmaWxsc1wiKSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgQyYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgY2FuY2VsQW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpKTt2YXIgTD1udWxsLE09ITEsTj0tMSxPPSExLFA9ITEsUT0wLFM9MzMsVD0zMztwPWZ1bmN0aW9uKCl7cmV0dXJuIFF9O3ZhciBVPVwiX19yZWFjdElkbGVDYWxsYmFjayRcIitNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKTt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIixcbmZ1bmN0aW9uKGEpe2lmKGEuc291cmNlPT09d2luZG93JiZhLmRhdGE9PT1VKXtNPSExO2E9TDt2YXIgYj1OO0w9bnVsbDtOPS0xO3ZhciBkPWV4cG9ydHMudW5zdGFibGVfbm93KCksZT0hMTtpZigwPj1RLWQpaWYoLTEhPT1iJiZiPD1kKWU9ITA7ZWxzZXtPfHwoTz0hMCxGKFYpKTtMPWE7Tj1iO3JldHVybn1pZihudWxsIT09YSl7UD0hMDt0cnl7YShlKX1maW5hbGx5e1A9ITF9fX19LCExKTt2YXIgVj1mdW5jdGlvbihhKXtpZihudWxsIT09TCl7RihWKTt2YXIgYj1hLVErVDtiPFQmJlM8VD8oOD5iJiYoYj04KSxUPWI8Uz9TOmIpOlM9YjtRPWErVDtNfHwoTT0hMCx3aW5kb3cucG9zdE1lc3NhZ2UoVSxcIipcIikpfWVsc2UgTz0hMX07dT1mdW5jdGlvbihhLGIpe0w9YTtOPWI7UHx8MD5iP3dpbmRvdy5wb3N0TWVzc2FnZShVLFwiKlwiKTpPfHwoTz0hMCxGKFYpKX07dD1mdW5jdGlvbigpe0w9bnVsbDtNPSExO049LTF9fWV4cG9ydHMudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHk9MTtcbmV4cG9ydHMudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHk9MjtleHBvcnRzLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5PTM7ZXhwb3J0cy51bnN0YWJsZV9JZGxlUHJpb3JpdHk9NDtleHBvcnRzLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eT1mdW5jdGlvbihhLGIpe3N3aXRjaChhKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzpjYXNlIDQ6YnJlYWs7ZGVmYXVsdDphPTN9dmFyIGQ9ZixlPWg7Zj1hO2g9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTt0cnl7cmV0dXJuIGIoKX1maW5hbGx5e2Y9ZCxoPWUseCgpfX07XG5leHBvcnRzLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiKXt2YXIgZD0tMSE9PWg/aDpleHBvcnRzLnVuc3RhYmxlX25vdygpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWImJlwibnVtYmVyXCI9PT10eXBlb2YgYi50aW1lb3V0KWI9ZCtiLnRpbWVvdXQ7ZWxzZSBzd2l0Y2goZil7Y2FzZSAxOmI9ZCstMTticmVhaztjYXNlIDI6Yj1kKzI1MDticmVhaztjYXNlIDQ6Yj1kKzEwNzM3NDE4MjM7YnJlYWs7ZGVmYXVsdDpiPWQrNUUzfWE9e2NhbGxiYWNrOmEscHJpb3JpdHlMZXZlbDpmLGV4cGlyYXRpb25UaW1lOmIsbmV4dDpudWxsLHByZXZpb3VzOm51bGx9O2lmKG51bGw9PT1jKWM9YS5uZXh0PWEucHJldmlvdXM9YSxyKCk7ZWxzZXtkPW51bGw7dmFyIGU9Yztkb3tpZihlLmV4cGlyYXRpb25UaW1lPmIpe2Q9ZTticmVha31lPWUubmV4dH13aGlsZShlIT09Yyk7bnVsbD09PWQ/ZD1jOmQ9PT1jJiYoYz1hLHIoKSk7Yj1kLnByZXZpb3VzO2IubmV4dD1kLnByZXZpb3VzPVxuYTthLm5leHQ9ZDthLnByZXZpb3VzPWJ9cmV0dXJuIGF9O2V4cG9ydHMudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9YS5uZXh0O2lmKG51bGwhPT1iKXtpZihiPT09YSljPW51bGw7ZWxzZXthPT09YyYmKGM9Yik7dmFyIGQ9YS5wcmV2aW91cztkLm5leHQ9YjtiLnByZXZpb3VzPWR9YS5uZXh0PWEucHJldmlvdXM9bnVsbH19O2V4cG9ydHMudW5zdGFibGVfd3JhcENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPWY7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGQ9ZixlPWg7Zj1iO2g9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTt0cnl7cmV0dXJuIGEuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZpbmFsbHl7Zj1kLGg9ZSx4KCl9fX07ZXhwb3J0cy51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbD1mdW5jdGlvbigpe3JldHVybiBmfTtcbiIsImltcG9ydCBSZWFjdCwgeyBSZWFjdE5vZGUsIFB1cmVDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBSb3V0ZUNvbXBvbmVudFByb3BzIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5pbXBvcnQgcXVlcnlTdHJpbmcgZnJvbSAncXVlcnktc3RyaW5nJztcblxuaW50ZXJmYWNlIFByb3BzIGV4dGVuZHMgRGVmYXVsdFByb3BzLCBQaWNrPFJvdXRlQ29tcG9uZW50UHJvcHMsICdoaXN0b3J5JyB8ICdsb2NhdGlvbic+IHtcbiAgdG90YWxJdGVtczogbnVtYmVyO1xuICBvbkNoYW5nZTogKHBhZ2VOdW1iZXI6IG51bWJlcikgPT4gdm9pZDtcbiAgbWFyZ2luVG9wPzogbnVtYmVyO1xufVxuXG5pbnRlcmZhY2UgRGVmYXVsdFByb3BzIHtcbiAgZGVmYXVsdEN1cnJQYWdlOiBudW1iZXI7XG4gIC8qKiBNYXhpbXVtIGRpc3BsYXllZCBidXR0b25zIHVudGlsIHZpZXcgd2lsbCBzd2l0Y2ggdG8gZ3JvdXAgbW9kZS4gKi9cbiAgbWF4Vmlld0J0bkxlbmd0aDogbnVtYmVyO1xuICAvKiogVGhlIGxlbmd0aCBvZiBkaXNwbGF5ZWQgYnV0dG9uIGdyb3VwLCBzdXBwb3J0cyBvbmx5IG9kZCBudW1iZXJzLiAqL1xuICBidG5Hcm91cExlbmd0aDogbnVtYmVyO1xuICBwYWdlU2l6ZTogbnVtYmVyO1xuICBsZWZ0QnRuVHh0OiBzdHJpbmc7XG4gIHJpZ2h0QnRuVHh0OiBzdHJpbmc7XG59XG5cbmludGVyZmFjZSBTdGF0ZSB7XG4gIGJ1dHRvbnM6IG51bWJlcltdO1xuICBzaG93TGVmdEFycjogYm9vbGVhbjtcbiAgc2hvd1JpZ2h0QXJyOiBib29sZWFuO1xuICBjdXJQYWdlSW5kZXg6IG51bWJlcjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGFnaW5hdGlvbiBleHRlbmRzIFB1cmVDb21wb25lbnQ8UHJvcHMsIFN0YXRlPiB7XG4gIHN0YXRpYyBkZWZhdWx0UHJvcHM6IERlZmF1bHRQcm9wcyA9IHtcbiAgICBtYXhWaWV3QnRuTGVuZ3RoOiAxMCxcbiAgICBkZWZhdWx0Q3VyclBhZ2U6IDEsXG4gICAgYnRuR3JvdXBMZW5ndGg6IDUsXG4gICAgcGFnZVNpemU6IDEwMCxcbiAgICBsZWZ0QnRuVHh0OiAnUHJldmlvdXMgcGFnZScsXG4gICAgcmlnaHRCdG5UeHQ6ICdOZXh0IHBhZ2UnLFxuICB9O1xuXG4gIGRlZmF1bHRDdXJyUGFnZSA9IDE7XG4gIGJ0bkdyb3VwTGVuZ3RoID0gNTtcblxuICBjb25zdHJ1Y3Rvcihwcm9wczogUHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgY29uc3QgcGFnZXMgPSBNYXRoLmNlaWwocHJvcHMudG90YWxJdGVtcyAvIHByb3BzLnBhZ2VTaXplKTtcblxuICAgIGlmIChwYWdlcyA8IHByb3BzLmRlZmF1bHRDdXJyUGFnZSkge1xuICAgICAgdGhpcy51cGRhdGVIaXN0b3J5KDEpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmRlZmF1bHRDdXJyUGFnZSA9IHByb3BzLmRlZmF1bHRDdXJyUGFnZTtcbiAgICB9XG5cbiAgICBpZiAocHJvcHMuYnRuR3JvdXBMZW5ndGggJSAyID09PSAxKSB7XG4gICAgICB0aGlzLmJ0bkdyb3VwTGVuZ3RoID0gcHJvcHMuYnRuR3JvdXBMZW5ndGg7XG4gICAgfVxuXG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGJ1dHRvbnM6IEFycmF5LmZyb20oeyBsZW5ndGg6IHBhZ2VzIH0sIChidG4sIGkpID0+IGkgKyAxKSxcbiAgICAgIHNob3dMZWZ0QXJyOiBmYWxzZSxcbiAgICAgIHNob3dSaWdodEFycjogZmFsc2UsXG4gICAgICBjdXJQYWdlSW5kZXg6IHRoaXMuZGVmYXVsdEN1cnJQYWdlIC0gMSxcbiAgICB9O1xuICB9XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdGhpcy51cGRhdGVBcnJzVmlzKHRoaXMuZGVmYXVsdEN1cnJQYWdlIC0gMSk7XG4gIH1cblxuICBjaGFuZ2VDdXIgPSAoaW5kZXg6IG51bWJlcikgPT4ge1xuICAgIGlmICh0aGlzLnN0YXRlLmN1clBhZ2VJbmRleCA9PT0gaW5kZXgpIHsgcmV0dXJuOyB9XG5cbiAgICB0aGlzLnNldFN0YXRlKHsgY3VyUGFnZUluZGV4OiBpbmRleCB9KTtcblxuICAgIGNvbnN0IGN1clBhZ2UgPSBpbmRleCArIDE7XG4gICAgdGhpcy5wcm9wcy5vbkNoYW5nZShjdXJQYWdlKTtcbiAgICB0aGlzLnVwZGF0ZUFycnNWaXMoaW5kZXgpO1xuICAgIHRoaXMudXBkYXRlSGlzdG9yeShjdXJQYWdlKTtcbiAgfVxuXG4gIHVwZGF0ZUhpc3RvcnkgPSAoY3VyUGFnZTogbnVtYmVyKSA9PiB7XG4gICAgY29uc3Qgc2VhcmNoT2JqID0ge1xuICAgICAgLi4ucXVlcnlTdHJpbmcucGFyc2UodGhpcy5wcm9wcy5sb2NhdGlvbi5zZWFyY2gpLFxuICAgICAgcGFnZTogY3VyUGFnZSxcbiAgICB9O1xuXG4gICAgdGhpcy5wcm9wcy5oaXN0b3J5LnB1c2goeyBzZWFyY2g6IHF1ZXJ5U3RyaW5nLnN0cmluZ2lmeShzZWFyY2hPYmopIH0pO1xuICB9XG5cbiAgZ29UbyA9IChkaXJlY3Rpb246ICduZXh0JyB8ICdwcmV2JykgPT4ge1xuICAgIGxldCBuZXdJbmRleDogbnVtYmVyO1xuICAgIGlmIChkaXJlY3Rpb24gPT09ICduZXh0Jykge1xuICAgICAgbmV3SW5kZXggPSB0aGlzLnN0YXRlLmN1clBhZ2VJbmRleCArIDE7XG4gICAgfSBlbHNlIHtcbiAgICAgIG5ld0luZGV4ID0gdGhpcy5zdGF0ZS5jdXJQYWdlSW5kZXggLSAxO1xuICAgIH1cblxuICAgIHRoaXMuY2hhbmdlQ3VyKG5ld0luZGV4KTtcbiAgfVxuXG4gIGdvVG9QcmV2ID0gKCkgPT4gdGhpcy5nb1RvKCdwcmV2Jyk7XG5cbiAgZ29Ub05leHQgPSAoKSA9PiB0aGlzLmdvVG8oJ25leHQnKTtcblxuICB1cGRhdGVBcnJzVmlzID0gKGN1ckluZGV4OiBudW1iZXIpID0+IHtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIHNob3dMZWZ0QXJyOiAhIXRoaXMuc3RhdGUuYnV0dG9uc1tjdXJJbmRleCAtIDFdLFxuICAgICAgc2hvd1JpZ2h0QXJyOiAhIXRoaXMuc3RhdGUuYnV0dG9uc1tjdXJJbmRleCArIDFdLFxuICAgIH0pO1xuICB9XG5cbiAgcmVuZGVyQnRuID0gKGJ0bjogbnVtYmVyLCBpOiBudW1iZXIpID0+IHtcbiAgICBjb25zdCBjaGFuZ2VDdXJyZW50ID0gKCkgPT4gdGhpcy5jaGFuZ2VDdXIoaSk7XG4gICAgcmV0dXJuIChcbiAgICAgIDxidXR0b25cbiAgICAgICAga2V5PXtpfVxuICAgICAgICBjbGFzc05hbWU9e2BsbHMtcGFnZS1idG4gbGxzLWJ1dHRvbiAke3RoaXMuc3RhdGUuY3VyUGFnZUluZGV4ID09PSBpID8gJ2N1cicgOiAnJ31gfVxuICAgICAgICBvbkNsaWNrPXtjaGFuZ2VDdXJyZW50fVxuICAgICAgPlxuICAgICAgICB7YnRufVxuICAgICAgPC9idXR0b24+XG4gICAgKTtcbiAgfVxuXG4gIHJlbmRlckRvdHNCb3ggPSAoaTogbnVtYmVyKSA9PiA8ZGl2IGtleT17aX0gY2xhc3NOYW1lPVwibGxzLWRvdHMtYm94XCI+Li4uPC9kaXY+O1xuXG4gIHJlbmRlckJ1dHRvbnMgPSAoKTogUmVhY3ROb2RlID0+IHtcbiAgICBsZXQgYnV0dG9uTm9kZXM6IFJlYWN0Tm9kZSA9IG51bGw7XG5cbiAgICAvLyBSZW5kZXIgYWxsIGJ1dHRvbnMgbW9kZVxuICAgIGlmICh0aGlzLnByb3BzLm1heFZpZXdCdG5MZW5ndGggPj0gdGhpcy5zdGF0ZS5idXR0b25zLmxlbmd0aCkge1xuICAgICAgYnV0dG9uTm9kZXMgPSB0aGlzLnN0YXRlLmJ1dHRvbnMubWFwKChidG4sIGkpID0+IChcbiAgICAgICAgdGhpcy5yZW5kZXJCdG4oYnRuLCBpKVxuICAgICAgKSk7XG4gICAgLy8gUmVuZGVyIGdyb3VwIGJ1dHRvbnMgbW9kZVxuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBjdXJJbmRleCA9IHRoaXMuc3RhdGUuY3VyUGFnZUluZGV4O1xuICAgICAgY29uc3QgYnRuc0xlbmd0aCA9IHRoaXMuc3RhdGUuYnV0dG9ucy5sZW5ndGg7XG4gICAgICBjb25zdCBsYXN0QnRuR3JvdXBJbmRleCA9IGJ0bnNMZW5ndGggLSAodGhpcy5idG5Hcm91cExlbmd0aCArIDEpO1xuICAgICAgY29uc3QgbGFzdEJ0bkluZGV4ID0gYnRuc0xlbmd0aCAtIDE7XG4gICAgICBjb25zdCBjZW50cmFsQnRuR3JvdXBHYXAgPSBNYXRoLmZsb29yKHRoaXMuYnRuR3JvdXBMZW5ndGggLyAyKTtcbiAgICAgIC8vIFJlbmRlciBzdGFydCBidXR0b25zIGdyb3VwLCBkb3RzIG1hcmtlciBhbmQgbGFzdCBwYWdlIGJ1dHRvblxuICAgICAgaWYgKGN1ckluZGV4IDwgdGhpcy5idG5Hcm91cExlbmd0aCkge1xuICAgICAgICBidXR0b25Ob2RlcyA9IHRoaXMuc3RhdGUuYnV0dG9ucy5tYXAoKGJ0biwgaSkgPT4ge1xuICAgICAgICAgIGlmIChpIDwgdGhpcy5idG5Hcm91cExlbmd0aCB8fCBpID09PSBsYXN0QnRuSW5kZXgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnJlbmRlckJ0bihidG4sIGkpO1xuICAgICAgICAgIH0gZWxzZSBpZiAoaSA9PT0gdGhpcy5idG5Hcm91cExlbmd0aCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucmVuZGVyRG90c0JveChpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgLy8gUmVuZGVyIGZpcnN0IHBhZ2UgYnV0dG9uLCBkb3RzIG1hcmtlciBhbmQgbGFzdCBidXR0b25zIGdyb3VwXG4gICAgICB9IGVsc2UgaWYgKGN1ckluZGV4ID4gbGFzdEJ0bkdyb3VwSW5kZXgpIHtcbiAgICAgICAgYnV0dG9uTm9kZXMgPSB0aGlzLnN0YXRlLmJ1dHRvbnMubWFwKChidG4sIGkpID0+IHtcbiAgICAgICAgICBpZiAoaSA9PT0gMCB8fCBpID4gbGFzdEJ0bkdyb3VwSW5kZXgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnJlbmRlckJ0bihidG4sIGkpO1xuICAgICAgICAgIH0gZWxzZSBpZiAoaSA9PT0gbGFzdEJ0bkdyb3VwSW5kZXgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnJlbmRlckRvdHNCb3goaSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIC8vIFJlbmRlciBmaXJzdCBwYWdlIGJ1dHRvbiwgZmlyc3QgZG90cyBtYXJrZXIsIGNlbnRyYWwgZ3JvdXAsIGxhc3QgZG90cyBtYXJrZXIgYW5kIGxhc3QgcGFnZSBidXR0b25cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGJ1dHRvbk5vZGVzID0gdGhpcy5zdGF0ZS5idXR0b25zLm1hcCgoYnRuLCBpKSA9PiB7XG4gICAgICAgICAgaWYgKFxuICAgICAgICAgICAgaSA9PT0gMFxuICAgICAgICAgICAgfHwgaSA9PT0gbGFzdEJ0bkluZGV4XG4gICAgICAgICAgICB8fCAoaSA+PSBjdXJJbmRleCAtIGNlbnRyYWxCdG5Hcm91cEdhcCAmJiBpIDw9IGN1ckluZGV4ICsgY2VudHJhbEJ0bkdyb3VwR2FwKVxuICAgICAgICAgICkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucmVuZGVyQnRuKGJ0biwgaSk7XG4gICAgICAgICAgfSBlbHNlIGlmIChpID09PSAxIHx8IGkgPT09IChidG5zTGVuZ3RoIC0gMikpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnJlbmRlckRvdHNCb3goaSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gYnV0dG9uTm9kZXM7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBtYXJnaW5Ub3AsIGxlZnRCdG5UeHQsIHJpZ2h0QnRuVHh0IH0gPSB0aGlzLnByb3BzO1xuICAgIHJldHVybiB0aGlzLnN0YXRlLmJ1dHRvbnMubGVuZ3RoID4gMSAmJiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImxscy1wYWdpbmF0aW9uLWNvbnRhaW5lclwiIHN0eWxlPXt7IG1hcmdpblRvcCB9fT5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJsbHMtYnV0dG9uLWJveFwiPlxuICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgIGNsYXNzTmFtZT1cImxscy1hcnItYnRuLWxlZnQgbGxzLWJ1dHRvblwiXG4gICAgICAgICAgICBvbkNsaWNrPXt0aGlzLmdvVG9QcmV2fVxuICAgICAgICAgICAgc3R5bGU9e3sgdmlzaWJpbGl0eTogdGhpcy5zdGF0ZS5zaG93TGVmdEFyciA/ICd2aXNpYmxlJyA6ICdoaWRkZW4nIH19XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPHNwYW4+e2xlZnRCdG5UeHR9PC9zcGFuPlxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgIHt0aGlzLnJlbmRlckJ1dHRvbnMoKX1cbiAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJsbHMtYXJyLWJ0bi1yaWdodCBsbHMtYnV0dG9uXCJcbiAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMuZ29Ub05leHR9XG4gICAgICAgICAgICBzdHlsZT17eyB2aXNpYmlsaXR5OiB0aGlzLnN0YXRlLnNob3dSaWdodEFyciA/ICd2aXNpYmxlJyA6ICdoaWRkZW4nIH19XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPHNwYW4+e3JpZ2h0QnRuVHh0fTwvc3Bhbj5cbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG4iLCIndXNlIHN0cmljdCc7XG52YXIgc3RyaWN0VXJpRW5jb2RlID0gcmVxdWlyZSgnc3RyaWN0LXVyaS1lbmNvZGUnKTtcbnZhciBvYmplY3RBc3NpZ24gPSByZXF1aXJlKCdvYmplY3QtYXNzaWduJyk7XG52YXIgZGVjb2RlQ29tcG9uZW50ID0gcmVxdWlyZSgnZGVjb2RlLXVyaS1jb21wb25lbnQnKTtcblxuZnVuY3Rpb24gZW5jb2RlckZvckFycmF5Rm9ybWF0KG9wdHMpIHtcblx0c3dpdGNoIChvcHRzLmFycmF5Rm9ybWF0KSB7XG5cdFx0Y2FzZSAnaW5kZXgnOlxuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uIChrZXksIHZhbHVlLCBpbmRleCkge1xuXHRcdFx0XHRyZXR1cm4gdmFsdWUgPT09IG51bGwgPyBbXG5cdFx0XHRcdFx0ZW5jb2RlKGtleSwgb3B0cyksXG5cdFx0XHRcdFx0J1snLFxuXHRcdFx0XHRcdGluZGV4LFxuXHRcdFx0XHRcdCddJ1xuXHRcdFx0XHRdLmpvaW4oJycpIDogW1xuXHRcdFx0XHRcdGVuY29kZShrZXksIG9wdHMpLFxuXHRcdFx0XHRcdCdbJyxcblx0XHRcdFx0XHRlbmNvZGUoaW5kZXgsIG9wdHMpLFxuXHRcdFx0XHRcdCddPScsXG5cdFx0XHRcdFx0ZW5jb2RlKHZhbHVlLCBvcHRzKVxuXHRcdFx0XHRdLmpvaW4oJycpO1xuXHRcdFx0fTtcblxuXHRcdGNhc2UgJ2JyYWNrZXQnOlxuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG5cdFx0XHRcdHJldHVybiB2YWx1ZSA9PT0gbnVsbCA/IGVuY29kZShrZXksIG9wdHMpIDogW1xuXHRcdFx0XHRcdGVuY29kZShrZXksIG9wdHMpLFxuXHRcdFx0XHRcdCdbXT0nLFxuXHRcdFx0XHRcdGVuY29kZSh2YWx1ZSwgb3B0cylcblx0XHRcdFx0XS5qb2luKCcnKTtcblx0XHRcdH07XG5cblx0XHRkZWZhdWx0OlxuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG5cdFx0XHRcdHJldHVybiB2YWx1ZSA9PT0gbnVsbCA/IGVuY29kZShrZXksIG9wdHMpIDogW1xuXHRcdFx0XHRcdGVuY29kZShrZXksIG9wdHMpLFxuXHRcdFx0XHRcdCc9Jyxcblx0XHRcdFx0XHRlbmNvZGUodmFsdWUsIG9wdHMpXG5cdFx0XHRcdF0uam9pbignJyk7XG5cdFx0XHR9O1xuXHR9XG59XG5cbmZ1bmN0aW9uIHBhcnNlckZvckFycmF5Rm9ybWF0KG9wdHMpIHtcblx0dmFyIHJlc3VsdDtcblxuXHRzd2l0Y2ggKG9wdHMuYXJyYXlGb3JtYXQpIHtcblx0XHRjYXNlICdpbmRleCc6XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24gKGtleSwgdmFsdWUsIGFjY3VtdWxhdG9yKSB7XG5cdFx0XHRcdHJlc3VsdCA9IC9cXFsoXFxkKilcXF0kLy5leGVjKGtleSk7XG5cblx0XHRcdFx0a2V5ID0ga2V5LnJlcGxhY2UoL1xcW1xcZCpcXF0kLywgJycpO1xuXG5cdFx0XHRcdGlmICghcmVzdWx0KSB7XG5cdFx0XHRcdFx0YWNjdW11bGF0b3Jba2V5XSA9IHZhbHVlO1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmIChhY2N1bXVsYXRvcltrZXldID09PSB1bmRlZmluZWQpIHtcblx0XHRcdFx0XHRhY2N1bXVsYXRvcltrZXldID0ge307XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRhY2N1bXVsYXRvcltrZXldW3Jlc3VsdFsxXV0gPSB2YWx1ZTtcblx0XHRcdH07XG5cblx0XHRjYXNlICdicmFja2V0Jzpcblx0XHRcdHJldHVybiBmdW5jdGlvbiAoa2V5LCB2YWx1ZSwgYWNjdW11bGF0b3IpIHtcblx0XHRcdFx0cmVzdWx0ID0gLyhcXFtcXF0pJC8uZXhlYyhrZXkpO1xuXHRcdFx0XHRrZXkgPSBrZXkucmVwbGFjZSgvXFxbXFxdJC8sICcnKTtcblxuXHRcdFx0XHRpZiAoIXJlc3VsdCkge1xuXHRcdFx0XHRcdGFjY3VtdWxhdG9yW2tleV0gPSB2YWx1ZTtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH0gZWxzZSBpZiAoYWNjdW11bGF0b3Jba2V5XSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdFx0YWNjdW11bGF0b3Jba2V5XSA9IFt2YWx1ZV07XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0YWNjdW11bGF0b3Jba2V5XSA9IFtdLmNvbmNhdChhY2N1bXVsYXRvcltrZXldLCB2YWx1ZSk7XG5cdFx0XHR9O1xuXG5cdFx0ZGVmYXVsdDpcblx0XHRcdHJldHVybiBmdW5jdGlvbiAoa2V5LCB2YWx1ZSwgYWNjdW11bGF0b3IpIHtcblx0XHRcdFx0aWYgKGFjY3VtdWxhdG9yW2tleV0gPT09IHVuZGVmaW5lZCkge1xuXHRcdFx0XHRcdGFjY3VtdWxhdG9yW2tleV0gPSB2YWx1ZTtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRhY2N1bXVsYXRvcltrZXldID0gW10uY29uY2F0KGFjY3VtdWxhdG9yW2tleV0sIHZhbHVlKTtcblx0XHRcdH07XG5cdH1cbn1cblxuZnVuY3Rpb24gZW5jb2RlKHZhbHVlLCBvcHRzKSB7XG5cdGlmIChvcHRzLmVuY29kZSkge1xuXHRcdHJldHVybiBvcHRzLnN0cmljdCA/IHN0cmljdFVyaUVuY29kZSh2YWx1ZSkgOiBlbmNvZGVVUklDb21wb25lbnQodmFsdWUpO1xuXHR9XG5cblx0cmV0dXJuIHZhbHVlO1xufVxuXG5mdW5jdGlvbiBrZXlzU29ydGVyKGlucHV0KSB7XG5cdGlmIChBcnJheS5pc0FycmF5KGlucHV0KSkge1xuXHRcdHJldHVybiBpbnB1dC5zb3J0KCk7XG5cdH0gZWxzZSBpZiAodHlwZW9mIGlucHV0ID09PSAnb2JqZWN0Jykge1xuXHRcdHJldHVybiBrZXlzU29ydGVyKE9iamVjdC5rZXlzKGlucHV0KSkuc29ydChmdW5jdGlvbiAoYSwgYikge1xuXHRcdFx0cmV0dXJuIE51bWJlcihhKSAtIE51bWJlcihiKTtcblx0XHR9KS5tYXAoZnVuY3Rpb24gKGtleSkge1xuXHRcdFx0cmV0dXJuIGlucHV0W2tleV07XG5cdFx0fSk7XG5cdH1cblxuXHRyZXR1cm4gaW5wdXQ7XG59XG5cbmZ1bmN0aW9uIGV4dHJhY3Qoc3RyKSB7XG5cdHZhciBxdWVyeVN0YXJ0ID0gc3RyLmluZGV4T2YoJz8nKTtcblx0aWYgKHF1ZXJ5U3RhcnQgPT09IC0xKSB7XG5cdFx0cmV0dXJuICcnO1xuXHR9XG5cdHJldHVybiBzdHIuc2xpY2UocXVlcnlTdGFydCArIDEpO1xufVxuXG5mdW5jdGlvbiBwYXJzZShzdHIsIG9wdHMpIHtcblx0b3B0cyA9IG9iamVjdEFzc2lnbih7YXJyYXlGb3JtYXQ6ICdub25lJ30sIG9wdHMpO1xuXG5cdHZhciBmb3JtYXR0ZXIgPSBwYXJzZXJGb3JBcnJheUZvcm1hdChvcHRzKTtcblxuXHQvLyBDcmVhdGUgYW4gb2JqZWN0IHdpdGggbm8gcHJvdG90eXBlXG5cdC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9zaW5kcmVzb3JodXMvcXVlcnktc3RyaW5nL2lzc3Vlcy80N1xuXHR2YXIgcmV0ID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcblxuXHRpZiAodHlwZW9mIHN0ciAhPT0gJ3N0cmluZycpIHtcblx0XHRyZXR1cm4gcmV0O1xuXHR9XG5cblx0c3RyID0gc3RyLnRyaW0oKS5yZXBsYWNlKC9eWz8jJl0vLCAnJyk7XG5cblx0aWYgKCFzdHIpIHtcblx0XHRyZXR1cm4gcmV0O1xuXHR9XG5cblx0c3RyLnNwbGl0KCcmJykuZm9yRWFjaChmdW5jdGlvbiAocGFyYW0pIHtcblx0XHR2YXIgcGFydHMgPSBwYXJhbS5yZXBsYWNlKC9cXCsvZywgJyAnKS5zcGxpdCgnPScpO1xuXHRcdC8vIEZpcmVmb3ggKHByZSA0MCkgZGVjb2RlcyBgJTNEYCB0byBgPWBcblx0XHQvLyBodHRwczovL2dpdGh1Yi5jb20vc2luZHJlc29yaHVzL3F1ZXJ5LXN0cmluZy9wdWxsLzM3XG5cdFx0dmFyIGtleSA9IHBhcnRzLnNoaWZ0KCk7XG5cdFx0dmFyIHZhbCA9IHBhcnRzLmxlbmd0aCA+IDAgPyBwYXJ0cy5qb2luKCc9JykgOiB1bmRlZmluZWQ7XG5cblx0XHQvLyBtaXNzaW5nIGA9YCBzaG91bGQgYmUgYG51bGxgOlxuXHRcdC8vIGh0dHA6Ly93My5vcmcvVFIvMjAxMi9XRC11cmwtMjAxMjA1MjQvI2NvbGxlY3QtdXJsLXBhcmFtZXRlcnNcblx0XHR2YWwgPSB2YWwgPT09IHVuZGVmaW5lZCA/IG51bGwgOiBkZWNvZGVDb21wb25lbnQodmFsKTtcblxuXHRcdGZvcm1hdHRlcihkZWNvZGVDb21wb25lbnQoa2V5KSwgdmFsLCByZXQpO1xuXHR9KTtcblxuXHRyZXR1cm4gT2JqZWN0LmtleXMocmV0KS5zb3J0KCkucmVkdWNlKGZ1bmN0aW9uIChyZXN1bHQsIGtleSkge1xuXHRcdHZhciB2YWwgPSByZXRba2V5XTtcblx0XHRpZiAoQm9vbGVhbih2YWwpICYmIHR5cGVvZiB2YWwgPT09ICdvYmplY3QnICYmICFBcnJheS5pc0FycmF5KHZhbCkpIHtcblx0XHRcdC8vIFNvcnQgb2JqZWN0IGtleXMsIG5vdCB2YWx1ZXNcblx0XHRcdHJlc3VsdFtrZXldID0ga2V5c1NvcnRlcih2YWwpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZXN1bHRba2V5XSA9IHZhbDtcblx0XHR9XG5cblx0XHRyZXR1cm4gcmVzdWx0O1xuXHR9LCBPYmplY3QuY3JlYXRlKG51bGwpKTtcbn1cblxuZXhwb3J0cy5leHRyYWN0ID0gZXh0cmFjdDtcbmV4cG9ydHMucGFyc2UgPSBwYXJzZTtcblxuZXhwb3J0cy5zdHJpbmdpZnkgPSBmdW5jdGlvbiAob2JqLCBvcHRzKSB7XG5cdHZhciBkZWZhdWx0cyA9IHtcblx0XHRlbmNvZGU6IHRydWUsXG5cdFx0c3RyaWN0OiB0cnVlLFxuXHRcdGFycmF5Rm9ybWF0OiAnbm9uZSdcblx0fTtcblxuXHRvcHRzID0gb2JqZWN0QXNzaWduKGRlZmF1bHRzLCBvcHRzKTtcblxuXHRpZiAob3B0cy5zb3J0ID09PSBmYWxzZSkge1xuXHRcdG9wdHMuc29ydCA9IGZ1bmN0aW9uICgpIHt9O1xuXHR9XG5cblx0dmFyIGZvcm1hdHRlciA9IGVuY29kZXJGb3JBcnJheUZvcm1hdChvcHRzKTtcblxuXHRyZXR1cm4gb2JqID8gT2JqZWN0LmtleXMob2JqKS5zb3J0KG9wdHMuc29ydCkubWFwKGZ1bmN0aW9uIChrZXkpIHtcblx0XHR2YXIgdmFsID0gb2JqW2tleV07XG5cblx0XHRpZiAodmFsID09PSB1bmRlZmluZWQpIHtcblx0XHRcdHJldHVybiAnJztcblx0XHR9XG5cblx0XHRpZiAodmFsID09PSBudWxsKSB7XG5cdFx0XHRyZXR1cm4gZW5jb2RlKGtleSwgb3B0cyk7XG5cdFx0fVxuXG5cdFx0aWYgKEFycmF5LmlzQXJyYXkodmFsKSkge1xuXHRcdFx0dmFyIHJlc3VsdCA9IFtdO1xuXG5cdFx0XHR2YWwuc2xpY2UoKS5mb3JFYWNoKGZ1bmN0aW9uICh2YWwyKSB7XG5cdFx0XHRcdGlmICh2YWwyID09PSB1bmRlZmluZWQpIHtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXN1bHQucHVzaChmb3JtYXR0ZXIoa2V5LCB2YWwyLCByZXN1bHQubGVuZ3RoKSk7XG5cdFx0XHR9KTtcblxuXHRcdFx0cmV0dXJuIHJlc3VsdC5qb2luKCcmJyk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGVuY29kZShrZXksIG9wdHMpICsgJz0nICsgZW5jb2RlKHZhbCwgb3B0cyk7XG5cdH0pLmZpbHRlcihmdW5jdGlvbiAoeCkge1xuXHRcdHJldHVybiB4Lmxlbmd0aCA+IDA7XG5cdH0pLmpvaW4oJyYnKSA6ICcnO1xufTtcblxuZXhwb3J0cy5wYXJzZVVybCA9IGZ1bmN0aW9uIChzdHIsIG9wdHMpIHtcblx0cmV0dXJuIHtcblx0XHR1cmw6IHN0ci5zcGxpdCgnPycpWzBdIHx8ICcnLFxuXHRcdHF1ZXJ5OiBwYXJzZShleHRyYWN0KHN0ciksIG9wdHMpXG5cdH07XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoc3RyKSB7XG5cdHJldHVybiBlbmNvZGVVUklDb21wb25lbnQoc3RyKS5yZXBsYWNlKC9bIScoKSpdL2csIGZ1bmN0aW9uIChjKSB7XG5cdFx0cmV0dXJuICclJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKTtcblx0fSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHRva2VuID0gJyVbYS1mMC05XXsyfSc7XG52YXIgc2luZ2xlTWF0Y2hlciA9IG5ldyBSZWdFeHAodG9rZW4sICdnaScpO1xudmFyIG11bHRpTWF0Y2hlciA9IG5ldyBSZWdFeHAoJygnICsgdG9rZW4gKyAnKSsnLCAnZ2knKTtcblxuZnVuY3Rpb24gZGVjb2RlQ29tcG9uZW50cyhjb21wb25lbnRzLCBzcGxpdCkge1xuXHR0cnkge1xuXHRcdC8vIFRyeSB0byBkZWNvZGUgdGhlIGVudGlyZSBzdHJpbmcgZmlyc3Rcblx0XHRyZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KGNvbXBvbmVudHMuam9pbignJykpO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBEbyBub3RoaW5nXG5cdH1cblxuXHRpZiAoY29tcG9uZW50cy5sZW5ndGggPT09IDEpIHtcblx0XHRyZXR1cm4gY29tcG9uZW50cztcblx0fVxuXG5cdHNwbGl0ID0gc3BsaXQgfHwgMTtcblxuXHQvLyBTcGxpdCB0aGUgYXJyYXkgaW4gMiBwYXJ0c1xuXHR2YXIgbGVmdCA9IGNvbXBvbmVudHMuc2xpY2UoMCwgc3BsaXQpO1xuXHR2YXIgcmlnaHQgPSBjb21wb25lbnRzLnNsaWNlKHNwbGl0KTtcblxuXHRyZXR1cm4gQXJyYXkucHJvdG90eXBlLmNvbmNhdC5jYWxsKFtdLCBkZWNvZGVDb21wb25lbnRzKGxlZnQpLCBkZWNvZGVDb21wb25lbnRzKHJpZ2h0KSk7XG59XG5cbmZ1bmN0aW9uIGRlY29kZShpbnB1dCkge1xuXHR0cnkge1xuXHRcdHJldHVybiBkZWNvZGVVUklDb21wb25lbnQoaW5wdXQpO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHR2YXIgdG9rZW5zID0gaW5wdXQubWF0Y2goc2luZ2xlTWF0Y2hlcik7XG5cblx0XHRmb3IgKHZhciBpID0gMTsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuXHRcdFx0aW5wdXQgPSBkZWNvZGVDb21wb25lbnRzKHRva2VucywgaSkuam9pbignJyk7XG5cblx0XHRcdHRva2VucyA9IGlucHV0Lm1hdGNoKHNpbmdsZU1hdGNoZXIpO1xuXHRcdH1cblxuXHRcdHJldHVybiBpbnB1dDtcblx0fVxufVxuXG5mdW5jdGlvbiBjdXN0b21EZWNvZGVVUklDb21wb25lbnQoaW5wdXQpIHtcblx0Ly8gS2VlcCB0cmFjayBvZiBhbGwgdGhlIHJlcGxhY2VtZW50cyBhbmQgcHJlZmlsbCB0aGUgbWFwIHdpdGggdGhlIGBCT01gXG5cdHZhciByZXBsYWNlTWFwID0ge1xuXHRcdCclRkUlRkYnOiAnXFx1RkZGRFxcdUZGRkQnLFxuXHRcdCclRkYlRkUnOiAnXFx1RkZGRFxcdUZGRkQnXG5cdH07XG5cblx0dmFyIG1hdGNoID0gbXVsdGlNYXRjaGVyLmV4ZWMoaW5wdXQpO1xuXHR3aGlsZSAobWF0Y2gpIHtcblx0XHR0cnkge1xuXHRcdFx0Ly8gRGVjb2RlIGFzIGJpZyBjaHVua3MgYXMgcG9zc2libGVcblx0XHRcdHJlcGxhY2VNYXBbbWF0Y2hbMF1dID0gZGVjb2RlVVJJQ29tcG9uZW50KG1hdGNoWzBdKTtcblx0XHR9IGNhdGNoIChlcnIpIHtcblx0XHRcdHZhciByZXN1bHQgPSBkZWNvZGUobWF0Y2hbMF0pO1xuXG5cdFx0XHRpZiAocmVzdWx0ICE9PSBtYXRjaFswXSkge1xuXHRcdFx0XHRyZXBsYWNlTWFwW21hdGNoWzBdXSA9IHJlc3VsdDtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRtYXRjaCA9IG11bHRpTWF0Y2hlci5leGVjKGlucHV0KTtcblx0fVxuXG5cdC8vIEFkZCBgJUMyYCBhdCB0aGUgZW5kIG9mIHRoZSBtYXAgdG8gbWFrZSBzdXJlIGl0IGRvZXMgbm90IHJlcGxhY2UgdGhlIGNvbWJpbmF0b3IgYmVmb3JlIGV2ZXJ5dGhpbmcgZWxzZVxuXHRyZXBsYWNlTWFwWyclQzInXSA9ICdcXHVGRkZEJztcblxuXHR2YXIgZW50cmllcyA9IE9iamVjdC5rZXlzKHJlcGxhY2VNYXApO1xuXG5cdGZvciAodmFyIGkgPSAwOyBpIDwgZW50cmllcy5sZW5ndGg7IGkrKykge1xuXHRcdC8vIFJlcGxhY2UgYWxsIGRlY29kZWQgY29tcG9uZW50c1xuXHRcdHZhciBrZXkgPSBlbnRyaWVzW2ldO1xuXHRcdGlucHV0ID0gaW5wdXQucmVwbGFjZShuZXcgUmVnRXhwKGtleSwgJ2cnKSwgcmVwbGFjZU1hcFtrZXldKTtcblx0fVxuXG5cdHJldHVybiBpbnB1dDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZW5jb2RlZFVSSSkge1xuXHRpZiAodHlwZW9mIGVuY29kZWRVUkkgIT09ICdzdHJpbmcnKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgYGVuY29kZWRVUklgIHRvIGJlIG9mIHR5cGUgYHN0cmluZ2AsIGdvdCBgJyArIHR5cGVvZiBlbmNvZGVkVVJJICsgJ2AnKTtcblx0fVxuXG5cdHRyeSB7XG5cdFx0ZW5jb2RlZFVSSSA9IGVuY29kZWRVUkkucmVwbGFjZSgvXFwrL2csICcgJyk7XG5cblx0XHQvLyBUcnkgdGhlIGJ1aWx0IGluIGRlY29kZXIgZmlyc3Rcblx0XHRyZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KGVuY29kZWRVUkkpO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBGYWxsYmFjayB0byBhIG1vcmUgYWR2YW5jZWQgZGVjb2RlclxuXHRcdHJldHVybiBjdXN0b21EZWNvZGVVUklDb21wb25lbnQoZW5jb2RlZFVSSSk7XG5cdH1cbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcblxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIHNoaW0ocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICBpZiAoc2VjcmV0ID09PSBSZWFjdFByb3BUeXBlc1NlY3JldCkge1xuICAgICAgLy8gSXQgaXMgc3RpbGwgc2FmZSB3aGVuIGNhbGxlZCBmcm9tIFJlYWN0LlxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgZXJyID0gbmV3IEVycm9yKFxuICAgICAgJ0NhbGxpbmcgUHJvcFR5cGVzIHZhbGlkYXRvcnMgZGlyZWN0bHkgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgYHByb3AtdHlwZXNgIHBhY2thZ2UuICcgK1xuICAgICAgJ1VzZSBQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMoKSB0byBjYWxsIHRoZW0uICcgK1xuICAgICAgJ1JlYWQgbW9yZSBhdCBodHRwOi8vZmIubWUvdXNlLWNoZWNrLXByb3AtdHlwZXMnXG4gICAgKTtcbiAgICBlcnIubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB0aHJvdyBlcnI7XG4gIH07XG4gIHNoaW0uaXNSZXF1aXJlZCA9IHNoaW07XG4gIGZ1bmN0aW9uIGdldFNoaW0oKSB7XG4gICAgcmV0dXJuIHNoaW07XG4gIH07XG4gIC8vIEltcG9ydGFudCFcbiAgLy8gS2VlcCB0aGlzIGxpc3QgaW4gc3luYyB3aXRoIHByb2R1Y3Rpb24gdmVyc2lvbiBpbiBgLi9mYWN0b3J5V2l0aFR5cGVDaGVja2Vycy5qc2AuXG4gIHZhciBSZWFjdFByb3BUeXBlcyA9IHtcbiAgICBhcnJheTogc2hpbSxcbiAgICBib29sOiBzaGltLFxuICAgIGZ1bmM6IHNoaW0sXG4gICAgbnVtYmVyOiBzaGltLFxuICAgIG9iamVjdDogc2hpbSxcbiAgICBzdHJpbmc6IHNoaW0sXG4gICAgc3ltYm9sOiBzaGltLFxuXG4gICAgYW55OiBzaGltLFxuICAgIGFycmF5T2Y6IGdldFNoaW0sXG4gICAgZWxlbWVudDogc2hpbSxcbiAgICBpbnN0YW5jZU9mOiBnZXRTaGltLFxuICAgIG5vZGU6IHNoaW0sXG4gICAgb2JqZWN0T2Y6IGdldFNoaW0sXG4gICAgb25lT2Y6IGdldFNoaW0sXG4gICAgb25lT2ZUeXBlOiBnZXRTaGltLFxuICAgIHNoYXBlOiBnZXRTaGltLFxuICAgIGV4YWN0OiBnZXRTaGltXG4gIH07XG5cbiAgUmVhY3RQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMgPSBlbXB0eUZ1bmN0aW9uO1xuICBSZWFjdFByb3BUeXBlcy5Qcm9wVHlwZXMgPSBSZWFjdFByb3BUeXBlcztcblxuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKGFycikge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFycikgPT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9pbmRleC5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL2luZGV4LnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL2luZGV4LnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5wYWdlcy1jb250YWluZXJ7d2lkdGg6MjUwcHg7aGVpZ2h0OjM1MHB4O2JvcmRlcjoxcHggc29saWQgIzAwMDttYXJnaW46MjBweCBhdXRvO2Rpc3BsYXk6ZmxleDtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcn0ucGFnZXMtY29udGFpbmVyIC5wYWdle2ZvbnQtZmFtaWx5OidDb3VyaWVyIE5ldycsIENvdXJpZXIsIG1vbm9zcGFjZTtmb250LXNpemU6MzBweDtkaXNwbGF5Om5vbmV9LnBhZ2VzLWNvbnRhaW5lciAucGFnZS5jdXJ7ZGlzcGxheTpibG9ja31oMnt0ZXh0LWFsaWduOmNlbnRlcjtmb250LWZhbWlseTonQ291cmllciBOZXcnLCBDb3VyaWVyLCBtb25vc3BhY2U7bWFyZ2luLXRvcDo1MHB4fVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsIlxuLyoqXG4gKiBXaGVuIHNvdXJjZSBtYXBzIGFyZSBlbmFibGVkLCBgc3R5bGUtbG9hZGVyYCB1c2VzIGEgbGluayBlbGVtZW50IHdpdGggYSBkYXRhLXVyaSB0b1xuICogZW1iZWQgdGhlIGNzcyBvbiB0aGUgcGFnZS4gVGhpcyBicmVha3MgYWxsIHJlbGF0aXZlIHVybHMgYmVjYXVzZSBub3cgdGhleSBhcmUgcmVsYXRpdmUgdG8gYVxuICogYnVuZGxlIGluc3RlYWQgb2YgdGhlIGN1cnJlbnQgcGFnZS5cbiAqXG4gKiBPbmUgc29sdXRpb24gaXMgdG8gb25seSB1c2UgZnVsbCB1cmxzLCBidXQgdGhhdCBtYXkgYmUgaW1wb3NzaWJsZS5cbiAqXG4gKiBJbnN0ZWFkLCB0aGlzIGZ1bmN0aW9uIFwiZml4ZXNcIiB0aGUgcmVsYXRpdmUgdXJscyB0byBiZSBhYnNvbHV0ZSBhY2NvcmRpbmcgdG8gdGhlIGN1cnJlbnQgcGFnZSBsb2NhdGlvbi5cbiAqXG4gKiBBIHJ1ZGltZW50YXJ5IHRlc3Qgc3VpdGUgaXMgbG9jYXRlZCBhdCBgdGVzdC9maXhVcmxzLmpzYCBhbmQgY2FuIGJlIHJ1biB2aWEgdGhlIGBucG0gdGVzdGAgY29tbWFuZC5cbiAqXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzKSB7XG4gIC8vIGdldCBjdXJyZW50IGxvY2F0aW9uXG4gIHZhciBsb2NhdGlvbiA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgd2luZG93LmxvY2F0aW9uO1xuXG4gIGlmICghbG9jYXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJmaXhVcmxzIHJlcXVpcmVzIHdpbmRvdy5sb2NhdGlvblwiKTtcbiAgfVxuXG5cdC8vIGJsYW5rIG9yIG51bGw/XG5cdGlmICghY3NzIHx8IHR5cGVvZiBjc3MgIT09IFwic3RyaW5nXCIpIHtcblx0ICByZXR1cm4gY3NzO1xuICB9XG5cbiAgdmFyIGJhc2VVcmwgPSBsb2NhdGlvbi5wcm90b2NvbCArIFwiLy9cIiArIGxvY2F0aW9uLmhvc3Q7XG4gIHZhciBjdXJyZW50RGlyID0gYmFzZVVybCArIGxvY2F0aW9uLnBhdGhuYW1lLnJlcGxhY2UoL1xcL1teXFwvXSokLywgXCIvXCIpO1xuXG5cdC8vIGNvbnZlcnQgZWFjaCB1cmwoLi4uKVxuXHQvKlxuXHRUaGlzIHJlZ3VsYXIgZXhwcmVzc2lvbiBpcyBqdXN0IGEgd2F5IHRvIHJlY3Vyc2l2ZWx5IG1hdGNoIGJyYWNrZXRzIHdpdGhpblxuXHRhIHN0cmluZy5cblxuXHQgL3VybFxccypcXCggID0gTWF0Y2ggb24gdGhlIHdvcmQgXCJ1cmxcIiB3aXRoIGFueSB3aGl0ZXNwYWNlIGFmdGVyIGl0IGFuZCB0aGVuIGEgcGFyZW5zXG5cdCAgICggID0gU3RhcnQgYSBjYXB0dXJpbmcgZ3JvdXBcblx0ICAgICAoPzogID0gU3RhcnQgYSBub24tY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgICAgIFteKShdICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAoPzogID0gU3RhcnQgYW5vdGhlciBub24tY2FwdHVyaW5nIGdyb3Vwc1xuXHQgICAgICAgICAgICAgICAgIFteKShdKyAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgICAgICAgICAgXFwoICA9IE1hdGNoIGEgc3RhcnQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICAgICAgW14pKF0qICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgIFxcKSAgPSBNYXRjaCBhIGVuZCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKSAgPSBFbmQgR3JvdXBcbiAgICAgICAgICAgICAgKlxcKSA9IE1hdGNoIGFueXRoaW5nIGFuZCB0aGVuIGEgY2xvc2UgcGFyZW5zXG4gICAgICAgICAgKSAgPSBDbG9zZSBub24tY2FwdHVyaW5nIGdyb3VwXG4gICAgICAgICAgKiAgPSBNYXRjaCBhbnl0aGluZ1xuICAgICAgICkgID0gQ2xvc2UgY2FwdHVyaW5nIGdyb3VwXG5cdCBcXCkgID0gTWF0Y2ggYSBjbG9zZSBwYXJlbnNcblxuXHQgL2dpICA9IEdldCBhbGwgbWF0Y2hlcywgbm90IHRoZSBmaXJzdC4gIEJlIGNhc2UgaW5zZW5zaXRpdmUuXG5cdCAqL1xuXHR2YXIgZml4ZWRDc3MgPSBjc3MucmVwbGFjZSgvdXJsXFxzKlxcKCgoPzpbXikoXXxcXCgoPzpbXikoXSt8XFwoW14pKF0qXFwpKSpcXCkpKilcXCkvZ2ksIGZ1bmN0aW9uKGZ1bGxNYXRjaCwgb3JpZ1VybCkge1xuXHRcdC8vIHN0cmlwIHF1b3RlcyAoaWYgdGhleSBleGlzdClcblx0XHR2YXIgdW5xdW90ZWRPcmlnVXJsID0gb3JpZ1VybFxuXHRcdFx0LnRyaW0oKVxuXHRcdFx0LnJlcGxhY2UoL15cIiguKilcIiQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSlcblx0XHRcdC5yZXBsYWNlKC9eJyguKiknJC8sIGZ1bmN0aW9uKG8sICQxKXsgcmV0dXJuICQxOyB9KTtcblxuXHRcdC8vIGFscmVhZHkgYSBmdWxsIHVybD8gbm8gY2hhbmdlXG5cdFx0aWYgKC9eKCN8ZGF0YTp8aHR0cDpcXC9cXC98aHR0cHM6XFwvXFwvfGZpbGU6XFwvXFwvXFwvfFxccyokKS9pLnRlc3QodW5xdW90ZWRPcmlnVXJsKSkge1xuXHRcdCAgcmV0dXJuIGZ1bGxNYXRjaDtcblx0XHR9XG5cblx0XHQvLyBjb252ZXJ0IHRoZSB1cmwgdG8gYSBmdWxsIHVybFxuXHRcdHZhciBuZXdVcmw7XG5cblx0XHRpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvL1wiKSA9PT0gMCkge1xuXHRcdCAgXHQvL1RPRE86IHNob3VsZCB3ZSBhZGQgcHJvdG9jb2w/XG5cdFx0XHRuZXdVcmwgPSB1bnF1b3RlZE9yaWdVcmw7XG5cdFx0fSBlbHNlIGlmICh1bnF1b3RlZE9yaWdVcmwuaW5kZXhPZihcIi9cIikgPT09IDApIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIHRoZSBiYXNlIHVybFxuXHRcdFx0bmV3VXJsID0gYmFzZVVybCArIHVucXVvdGVkT3JpZ1VybDsgLy8gYWxyZWFkeSBzdGFydHMgd2l0aCAnLydcblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gcGF0aCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gY3VycmVudCBkaXJlY3Rvcnlcblx0XHRcdG5ld1VybCA9IGN1cnJlbnREaXIgKyB1bnF1b3RlZE9yaWdVcmwucmVwbGFjZSgvXlxcLlxcLy8sIFwiXCIpOyAvLyBTdHJpcCBsZWFkaW5nICcuLydcblx0XHR9XG5cblx0XHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIHVybCguLi4pXG5cdFx0cmV0dXJuIFwidXJsKFwiICsgSlNPTi5zdHJpbmdpZnkobmV3VXJsKSArIFwiKVwiO1xuXHR9KTtcblxuXHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIGNzc1xuXHRyZXR1cm4gZml4ZWRDc3M7XG59O1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vcGFnaW5hdGlvbi5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL3BhZ2luYXRpb24uc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vcGFnaW5hdGlvbi5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIubGxzLXBhZ2luYXRpb24tY29udGFpbmVye2Rpc3BsYXk6ZmxleDtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyfS5sbHMtcGFnaW5hdGlvbi1jb250YWluZXIgLmxscy1idXR0b24tYm94e2Rpc3BsYXk6ZmxleDtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2VlbjthbGlnbi1pdGVtczpjZW50ZXJ9Lmxscy1wYWdpbmF0aW9uLWNvbnRhaW5lciAubGxzLXBhZ2UtYnRuLC5sbHMtcGFnaW5hdGlvbi1jb250YWluZXIgLmxscy1idXR0b257Y29sb3I6IzgzODc5NztjdXJzb3I6cG9pbnRlcn0ubGxzLXBhZ2luYXRpb24tY29udGFpbmVyIC5sbHMtcGFnZS1idG46aG92ZXIsLmxscy1wYWdpbmF0aW9uLWNvbnRhaW5lciAubGxzLWJ1dHRvbjpob3Zlcntjb2xvcjojNGU1NDZifS5sbHMtcGFnaW5hdGlvbi1jb250YWluZXIgLmxscy1idXR0b257Ym9yZGVyOjA7b3V0bGluZTpub25lO2JhY2tncm91bmQ6dHJhbnNwYXJlbnQ7cGFkZGluZzowO2Rpc3BsYXk6YmxvY2s7Zm9udC1zaXplOjEycHg7dGV4dC10cmFuc2Zvcm06dXBwZXJjYXNlfS5sbHMtcGFnaW5hdGlvbi1jb250YWluZXIgLmxscy1hcnItYnRuLWxlZnR7bWFyZ2luLXJpZ2h0OjI1cHh9Lmxscy1wYWdpbmF0aW9uLWNvbnRhaW5lciAubGxzLWFyci1idG4tbGVmdCBzcGFuOjpiZWZvcmV7Y29udGVudDpcXFwiXFxcXDIwMzlcXFwiO2ZvbnQtc2l6ZToxNnB4O21hcmdpbi1yaWdodDo1cHh9Lmxscy1wYWdpbmF0aW9uLWNvbnRhaW5lciAubGxzLWFyci1idG4tcmlnaHR7bWFyZ2luLWxlZnQ6MjBweH0ubGxzLXBhZ2luYXRpb24tY29udGFpbmVyIC5sbHMtYXJyLWJ0bi1yaWdodCBzcGFuOjphZnRlcntjb250ZW50OlxcXCJcXFxcMjAzQVxcXCI7Zm9udC1zaXplOjE2cHg7bWFyZ2luLWxlZnQ6NXB4fS5sbHMtcGFnaW5hdGlvbi1jb250YWluZXIgLmxscy1wYWdlLWJ0bntmb250LXNpemU6MXJlbTtmb250LXdlaWdodDpub3JtYWw7cGFkZGluZzoycHggNXB4O21hcmdpbi1yaWdodDo1cHh9Lmxscy1wYWdpbmF0aW9uLWNvbnRhaW5lciAubGxzLXBhZ2UtYnRuOmhvdmVye3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmV9Lmxscy1wYWdpbmF0aW9uLWNvbnRhaW5lciAubGxzLXBhZ2UtYnRuLmN1cnt0ZXh0LWRlY29yYXRpb246bm9uZTtmb250LXdlaWdodDo2MDA7Y29sb3I6IzRlNTQ2YjtjdXJzb3I6ZGVmYXVsdH0ubGxzLWRvdHMtYm94e21hcmdpbi1yaWdodDo1cHh9XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIiwiZnVuY3Rpb24gaXNBYnNvbHV0ZShwYXRobmFtZSkge1xuICByZXR1cm4gcGF0aG5hbWUuY2hhckF0KDApID09PSAnLyc7XG59XG5cbi8vIEFib3V0IDEuNXggZmFzdGVyIHRoYW4gdGhlIHR3by1hcmcgdmVyc2lvbiBvZiBBcnJheSNzcGxpY2UoKVxuZnVuY3Rpb24gc3BsaWNlT25lKGxpc3QsIGluZGV4KSB7XG4gIGZvciAodmFyIGkgPSBpbmRleCwgayA9IGkgKyAxLCBuID0gbGlzdC5sZW5ndGg7IGsgPCBuOyBpICs9IDEsIGsgKz0gMSkge1xuICAgIGxpc3RbaV0gPSBsaXN0W2tdO1xuICB9XG5cbiAgbGlzdC5wb3AoKTtcbn1cblxuLy8gVGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBiYXNlZCBoZWF2aWx5IG9uIG5vZGUncyB1cmwucGFyc2VcbmZ1bmN0aW9uIHJlc29sdmVQYXRobmFtZSh0bykge1xuICB2YXIgZnJvbSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogJyc7XG5cbiAgdmFyIHRvUGFydHMgPSB0byAmJiB0by5zcGxpdCgnLycpIHx8IFtdO1xuICB2YXIgZnJvbVBhcnRzID0gZnJvbSAmJiBmcm9tLnNwbGl0KCcvJykgfHwgW107XG5cbiAgdmFyIGlzVG9BYnMgPSB0byAmJiBpc0Fic29sdXRlKHRvKTtcbiAgdmFyIGlzRnJvbUFicyA9IGZyb20gJiYgaXNBYnNvbHV0ZShmcm9tKTtcbiAgdmFyIG11c3RFbmRBYnMgPSBpc1RvQWJzIHx8IGlzRnJvbUFicztcblxuICBpZiAodG8gJiYgaXNBYnNvbHV0ZSh0bykpIHtcbiAgICAvLyB0byBpcyBhYnNvbHV0ZVxuICAgIGZyb21QYXJ0cyA9IHRvUGFydHM7XG4gIH0gZWxzZSBpZiAodG9QYXJ0cy5sZW5ndGgpIHtcbiAgICAvLyB0byBpcyByZWxhdGl2ZSwgZHJvcCB0aGUgZmlsZW5hbWVcbiAgICBmcm9tUGFydHMucG9wKCk7XG4gICAgZnJvbVBhcnRzID0gZnJvbVBhcnRzLmNvbmNhdCh0b1BhcnRzKTtcbiAgfVxuXG4gIGlmICghZnJvbVBhcnRzLmxlbmd0aCkgcmV0dXJuICcvJztcblxuICB2YXIgaGFzVHJhaWxpbmdTbGFzaCA9IHZvaWQgMDtcbiAgaWYgKGZyb21QYXJ0cy5sZW5ndGgpIHtcbiAgICB2YXIgbGFzdCA9IGZyb21QYXJ0c1tmcm9tUGFydHMubGVuZ3RoIC0gMV07XG4gICAgaGFzVHJhaWxpbmdTbGFzaCA9IGxhc3QgPT09ICcuJyB8fCBsYXN0ID09PSAnLi4nIHx8IGxhc3QgPT09ICcnO1xuICB9IGVsc2Uge1xuICAgIGhhc1RyYWlsaW5nU2xhc2ggPSBmYWxzZTtcbiAgfVxuXG4gIHZhciB1cCA9IDA7XG4gIGZvciAodmFyIGkgPSBmcm9tUGFydHMubGVuZ3RoOyBpID49IDA7IGktLSkge1xuICAgIHZhciBwYXJ0ID0gZnJvbVBhcnRzW2ldO1xuXG4gICAgaWYgKHBhcnQgPT09ICcuJykge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgfSBlbHNlIGlmIChwYXJ0ID09PSAnLi4nKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICAgIHVwKys7XG4gICAgfSBlbHNlIGlmICh1cCkge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgICB1cC0tO1xuICAgIH1cbiAgfVxuXG4gIGlmICghbXVzdEVuZEFicykgZm9yICg7IHVwLS07IHVwKSB7XG4gICAgZnJvbVBhcnRzLnVuc2hpZnQoJy4uJyk7XG4gIH1pZiAobXVzdEVuZEFicyAmJiBmcm9tUGFydHNbMF0gIT09ICcnICYmICghZnJvbVBhcnRzWzBdIHx8ICFpc0Fic29sdXRlKGZyb21QYXJ0c1swXSkpKSBmcm9tUGFydHMudW5zaGlmdCgnJyk7XG5cbiAgdmFyIHJlc3VsdCA9IGZyb21QYXJ0cy5qb2luKCcvJyk7XG5cbiAgaWYgKGhhc1RyYWlsaW5nU2xhc2ggJiYgcmVzdWx0LnN1YnN0cigtMSkgIT09ICcvJykgcmVzdWx0ICs9ICcvJztcblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZGVmYXVsdCByZXNvbHZlUGF0aG5hbWU7IiwidmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9O1xuXG5mdW5jdGlvbiB2YWx1ZUVxdWFsKGEsIGIpIHtcbiAgaWYgKGEgPT09IGIpIHJldHVybiB0cnVlO1xuXG4gIGlmIChhID09IG51bGwgfHwgYiA9PSBudWxsKSByZXR1cm4gZmFsc2U7XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkoYSkpIHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShiKSAmJiBhLmxlbmd0aCA9PT0gYi5sZW5ndGggJiYgYS5ldmVyeShmdW5jdGlvbiAoaXRlbSwgaW5kZXgpIHtcbiAgICAgIHJldHVybiB2YWx1ZUVxdWFsKGl0ZW0sIGJbaW5kZXhdKTtcbiAgICB9KTtcbiAgfVxuXG4gIHZhciBhVHlwZSA9IHR5cGVvZiBhID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihhKTtcbiAgdmFyIGJUeXBlID0gdHlwZW9mIGIgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKGIpO1xuXG4gIGlmIChhVHlwZSAhPT0gYlR5cGUpIHJldHVybiBmYWxzZTtcblxuICBpZiAoYVR5cGUgPT09ICdvYmplY3QnKSB7XG4gICAgdmFyIGFWYWx1ZSA9IGEudmFsdWVPZigpO1xuICAgIHZhciBiVmFsdWUgPSBiLnZhbHVlT2YoKTtcblxuICAgIGlmIChhVmFsdWUgIT09IGEgfHwgYlZhbHVlICE9PSBiKSByZXR1cm4gdmFsdWVFcXVhbChhVmFsdWUsIGJWYWx1ZSk7XG5cbiAgICB2YXIgYUtleXMgPSBPYmplY3Qua2V5cyhhKTtcbiAgICB2YXIgYktleXMgPSBPYmplY3Qua2V5cyhiKTtcblxuICAgIGlmIChhS2V5cy5sZW5ndGggIT09IGJLZXlzLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuXG4gICAgcmV0dXJuIGFLZXlzLmV2ZXJ5KGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIHJldHVybiB2YWx1ZUVxdWFsKGFba2V5XSwgYltrZXldKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdmFsdWVFcXVhbDsiLCJleHBvcnQgdmFyIGFkZExlYWRpbmdTbGFzaCA9IGZ1bmN0aW9uIGFkZExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nID8gcGF0aCA6ICcvJyArIHBhdGg7XG59O1xuXG5leHBvcnQgdmFyIHN0cmlwTGVhZGluZ1NsYXNoID0gZnVuY3Rpb24gc3RyaXBMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICcvJyA/IHBhdGguc3Vic3RyKDEpIDogcGF0aDtcbn07XG5cbmV4cG9ydCB2YXIgaGFzQmFzZW5hbWUgPSBmdW5jdGlvbiBoYXNCYXNlbmFtZShwYXRoLCBwcmVmaXgpIHtcbiAgcmV0dXJuIG5ldyBSZWdFeHAoJ14nICsgcHJlZml4ICsgJyhcXFxcL3xcXFxcP3wjfCQpJywgJ2knKS50ZXN0KHBhdGgpO1xufTtcblxuZXhwb3J0IHZhciBzdHJpcEJhc2VuYW1lID0gZnVuY3Rpb24gc3RyaXBCYXNlbmFtZShwYXRoLCBwcmVmaXgpIHtcbiAgcmV0dXJuIGhhc0Jhc2VuYW1lKHBhdGgsIHByZWZpeCkgPyBwYXRoLnN1YnN0cihwcmVmaXgubGVuZ3RoKSA6IHBhdGg7XG59O1xuXG5leHBvcnQgdmFyIHN0cmlwVHJhaWxpbmdTbGFzaCA9IGZ1bmN0aW9uIHN0cmlwVHJhaWxpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdChwYXRoLmxlbmd0aCAtIDEpID09PSAnLycgPyBwYXRoLnNsaWNlKDAsIC0xKSA6IHBhdGg7XG59O1xuXG5leHBvcnQgdmFyIHBhcnNlUGF0aCA9IGZ1bmN0aW9uIHBhcnNlUGF0aChwYXRoKSB7XG4gIHZhciBwYXRobmFtZSA9IHBhdGggfHwgJy8nO1xuICB2YXIgc2VhcmNoID0gJyc7XG4gIHZhciBoYXNoID0gJyc7XG5cbiAgdmFyIGhhc2hJbmRleCA9IHBhdGhuYW1lLmluZGV4T2YoJyMnKTtcbiAgaWYgKGhhc2hJbmRleCAhPT0gLTEpIHtcbiAgICBoYXNoID0gcGF0aG5hbWUuc3Vic3RyKGhhc2hJbmRleCk7XG4gICAgcGF0aG5hbWUgPSBwYXRobmFtZS5zdWJzdHIoMCwgaGFzaEluZGV4KTtcbiAgfVxuXG4gIHZhciBzZWFyY2hJbmRleCA9IHBhdGhuYW1lLmluZGV4T2YoJz8nKTtcbiAgaWYgKHNlYXJjaEluZGV4ICE9PSAtMSkge1xuICAgIHNlYXJjaCA9IHBhdGhuYW1lLnN1YnN0cihzZWFyY2hJbmRleCk7XG4gICAgcGF0aG5hbWUgPSBwYXRobmFtZS5zdWJzdHIoMCwgc2VhcmNoSW5kZXgpO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBwYXRobmFtZTogcGF0aG5hbWUsXG4gICAgc2VhcmNoOiBzZWFyY2ggPT09ICc/JyA/ICcnIDogc2VhcmNoLFxuICAgIGhhc2g6IGhhc2ggPT09ICcjJyA/ICcnIDogaGFzaFxuICB9O1xufTtcblxuZXhwb3J0IHZhciBjcmVhdGVQYXRoID0gZnVuY3Rpb24gY3JlYXRlUGF0aChsb2NhdGlvbikge1xuICB2YXIgcGF0aG5hbWUgPSBsb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgIHNlYXJjaCA9IGxvY2F0aW9uLnNlYXJjaCxcbiAgICAgIGhhc2ggPSBsb2NhdGlvbi5oYXNoO1xuXG5cbiAgdmFyIHBhdGggPSBwYXRobmFtZSB8fCAnLyc7XG5cbiAgaWYgKHNlYXJjaCAmJiBzZWFyY2ggIT09ICc/JykgcGF0aCArPSBzZWFyY2guY2hhckF0KDApID09PSAnPycgPyBzZWFyY2ggOiAnPycgKyBzZWFyY2g7XG5cbiAgaWYgKGhhc2ggJiYgaGFzaCAhPT0gJyMnKSBwYXRoICs9IGhhc2guY2hhckF0KDApID09PSAnIycgPyBoYXNoIDogJyMnICsgaGFzaDtcblxuICByZXR1cm4gcGF0aDtcbn07IiwidmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuaW1wb3J0IHJlc29sdmVQYXRobmFtZSBmcm9tICdyZXNvbHZlLXBhdGhuYW1lJztcbmltcG9ydCB2YWx1ZUVxdWFsIGZyb20gJ3ZhbHVlLWVxdWFsJztcbmltcG9ydCB7IHBhcnNlUGF0aCB9IGZyb20gJy4vUGF0aFV0aWxzJztcblxuZXhwb3J0IHZhciBjcmVhdGVMb2NhdGlvbiA9IGZ1bmN0aW9uIGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBrZXksIGN1cnJlbnRMb2NhdGlvbikge1xuICB2YXIgbG9jYXRpb24gPSB2b2lkIDA7XG4gIGlmICh0eXBlb2YgcGF0aCA9PT0gJ3N0cmluZycpIHtcbiAgICAvLyBUd28tYXJnIGZvcm06IHB1c2gocGF0aCwgc3RhdGUpXG4gICAgbG9jYXRpb24gPSBwYXJzZVBhdGgocGF0aCk7XG4gICAgbG9jYXRpb24uc3RhdGUgPSBzdGF0ZTtcbiAgfSBlbHNlIHtcbiAgICAvLyBPbmUtYXJnIGZvcm06IHB1c2gobG9jYXRpb24pXG4gICAgbG9jYXRpb24gPSBfZXh0ZW5kcyh7fSwgcGF0aCk7XG5cbiAgICBpZiAobG9jYXRpb24ucGF0aG5hbWUgPT09IHVuZGVmaW5lZCkgbG9jYXRpb24ucGF0aG5hbWUgPSAnJztcblxuICAgIGlmIChsb2NhdGlvbi5zZWFyY2gpIHtcbiAgICAgIGlmIChsb2NhdGlvbi5zZWFyY2guY2hhckF0KDApICE9PSAnPycpIGxvY2F0aW9uLnNlYXJjaCA9ICc/JyArIGxvY2F0aW9uLnNlYXJjaDtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9jYXRpb24uc2VhcmNoID0gJyc7XG4gICAgfVxuXG4gICAgaWYgKGxvY2F0aW9uLmhhc2gpIHtcbiAgICAgIGlmIChsb2NhdGlvbi5oYXNoLmNoYXJBdCgwKSAhPT0gJyMnKSBsb2NhdGlvbi5oYXNoID0gJyMnICsgbG9jYXRpb24uaGFzaDtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9jYXRpb24uaGFzaCA9ICcnO1xuICAgIH1cblxuICAgIGlmIChzdGF0ZSAhPT0gdW5kZWZpbmVkICYmIGxvY2F0aW9uLnN0YXRlID09PSB1bmRlZmluZWQpIGxvY2F0aW9uLnN0YXRlID0gc3RhdGU7XG4gIH1cblxuICB0cnkge1xuICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gZGVjb2RlVVJJKGxvY2F0aW9uLnBhdGhuYW1lKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGlmIChlIGluc3RhbmNlb2YgVVJJRXJyb3IpIHtcbiAgICAgIHRocm93IG5ldyBVUklFcnJvcignUGF0aG5hbWUgXCInICsgbG9jYXRpb24ucGF0aG5hbWUgKyAnXCIgY291bGQgbm90IGJlIGRlY29kZWQuICcgKyAnVGhpcyBpcyBsaWtlbHkgY2F1c2VkIGJ5IGFuIGludmFsaWQgcGVyY2VudC1lbmNvZGluZy4nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgZTtcbiAgICB9XG4gIH1cblxuICBpZiAoa2V5KSBsb2NhdGlvbi5rZXkgPSBrZXk7XG5cbiAgaWYgKGN1cnJlbnRMb2NhdGlvbikge1xuICAgIC8vIFJlc29sdmUgaW5jb21wbGV0ZS9yZWxhdGl2ZSBwYXRobmFtZSByZWxhdGl2ZSB0byBjdXJyZW50IGxvY2F0aW9uLlxuICAgIGlmICghbG9jYXRpb24ucGF0aG5hbWUpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gY3VycmVudExvY2F0aW9uLnBhdGhuYW1lO1xuICAgIH0gZWxzZSBpZiAobG9jYXRpb24ucGF0aG5hbWUuY2hhckF0KDApICE9PSAnLycpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gcmVzb2x2ZVBhdGhuYW1lKGxvY2F0aW9uLnBhdGhuYW1lLCBjdXJyZW50TG9jYXRpb24ucGF0aG5hbWUpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICAvLyBXaGVuIHRoZXJlIGlzIG5vIHByaW9yIGxvY2F0aW9uIGFuZCBwYXRobmFtZSBpcyBlbXB0eSwgc2V0IGl0IHRvIC9cbiAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9ICcvJztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbG9jYXRpb247XG59O1xuXG5leHBvcnQgdmFyIGxvY2F0aW9uc0FyZUVxdWFsID0gZnVuY3Rpb24gbG9jYXRpb25zQXJlRXF1YWwoYSwgYikge1xuICByZXR1cm4gYS5wYXRobmFtZSA9PT0gYi5wYXRobmFtZSAmJiBhLnNlYXJjaCA9PT0gYi5zZWFyY2ggJiYgYS5oYXNoID09PSBiLmhhc2ggJiYgYS5rZXkgPT09IGIua2V5ICYmIHZhbHVlRXF1YWwoYS5zdGF0ZSwgYi5zdGF0ZSk7XG59OyIsImltcG9ydCB3YXJuaW5nIGZyb20gJ3dhcm5pbmcnO1xuXG52YXIgY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIgPSBmdW5jdGlvbiBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpIHtcbiAgdmFyIHByb21wdCA9IG51bGw7XG5cbiAgdmFyIHNldFByb21wdCA9IGZ1bmN0aW9uIHNldFByb21wdChuZXh0UHJvbXB0KSB7XG4gICAgd2FybmluZyhwcm9tcHQgPT0gbnVsbCwgJ0EgaGlzdG9yeSBzdXBwb3J0cyBvbmx5IG9uZSBwcm9tcHQgYXQgYSB0aW1lJyk7XG5cbiAgICBwcm9tcHQgPSBuZXh0UHJvbXB0O1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChwcm9tcHQgPT09IG5leHRQcm9tcHQpIHByb21wdCA9IG51bGw7XG4gICAgfTtcbiAgfTtcblxuICB2YXIgY29uZmlybVRyYW5zaXRpb25UbyA9IGZ1bmN0aW9uIGNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgY2FsbGJhY2spIHtcbiAgICAvLyBUT0RPOiBJZiBhbm90aGVyIHRyYW5zaXRpb24gc3RhcnRzIHdoaWxlIHdlJ3JlIHN0aWxsIGNvbmZpcm1pbmdcbiAgICAvLyB0aGUgcHJldmlvdXMgb25lLCB3ZSBtYXkgZW5kIHVwIGluIGEgd2VpcmQgc3RhdGUuIEZpZ3VyZSBvdXQgdGhlXG4gICAgLy8gYmVzdCB3YXkgdG8gaGFuZGxlIHRoaXMuXG4gICAgaWYgKHByb21wdCAhPSBudWxsKSB7XG4gICAgICB2YXIgcmVzdWx0ID0gdHlwZW9mIHByb21wdCA9PT0gJ2Z1bmN0aW9uJyA/IHByb21wdChsb2NhdGlvbiwgYWN0aW9uKSA6IHByb21wdDtcblxuICAgICAgaWYgKHR5cGVvZiByZXN1bHQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGlmICh0eXBlb2YgZ2V0VXNlckNvbmZpcm1hdGlvbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgIGdldFVzZXJDb25maXJtYXRpb24ocmVzdWx0LCBjYWxsYmFjayk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgd2FybmluZyhmYWxzZSwgJ0EgaGlzdG9yeSBuZWVkcyBhIGdldFVzZXJDb25maXJtYXRpb24gZnVuY3Rpb24gaW4gb3JkZXIgdG8gdXNlIGEgcHJvbXB0IG1lc3NhZ2UnKTtcblxuICAgICAgICAgIGNhbGxiYWNrKHRydWUpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBSZXR1cm4gZmFsc2UgZnJvbSBhIHRyYW5zaXRpb24gaG9vayB0byBjYW5jZWwgdGhlIHRyYW5zaXRpb24uXG4gICAgICAgIGNhbGxiYWNrKHJlc3VsdCAhPT0gZmFsc2UpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjYWxsYmFjayh0cnVlKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIGxpc3RlbmVycyA9IFtdO1xuXG4gIHZhciBhcHBlbmRMaXN0ZW5lciA9IGZ1bmN0aW9uIGFwcGVuZExpc3RlbmVyKGZuKSB7XG4gICAgdmFyIGlzQWN0aXZlID0gdHJ1ZTtcblxuICAgIHZhciBsaXN0ZW5lciA9IGZ1bmN0aW9uIGxpc3RlbmVyKCkge1xuICAgICAgaWYgKGlzQWN0aXZlKSBmbi5hcHBseSh1bmRlZmluZWQsIGFyZ3VtZW50cyk7XG4gICAgfTtcblxuICAgIGxpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpc0FjdGl2ZSA9IGZhbHNlO1xuICAgICAgbGlzdGVuZXJzID0gbGlzdGVuZXJzLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICByZXR1cm4gaXRlbSAhPT0gbGlzdGVuZXI7XG4gICAgICB9KTtcbiAgICB9O1xuICB9O1xuXG4gIHZhciBub3RpZnlMaXN0ZW5lcnMgPSBmdW5jdGlvbiBub3RpZnlMaXN0ZW5lcnMoKSB7XG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgbGlzdGVuZXJzLmZvckVhY2goZnVuY3Rpb24gKGxpc3RlbmVyKSB7XG4gICAgICByZXR1cm4gbGlzdGVuZXIuYXBwbHkodW5kZWZpbmVkLCBhcmdzKTtcbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4ge1xuICAgIHNldFByb21wdDogc2V0UHJvbXB0LFxuICAgIGNvbmZpcm1UcmFuc2l0aW9uVG86IGNvbmZpcm1UcmFuc2l0aW9uVG8sXG4gICAgYXBwZW5kTGlzdGVuZXI6IGFwcGVuZExpc3RlbmVyLFxuICAgIG5vdGlmeUxpc3RlbmVyczogbm90aWZ5TGlzdGVuZXJzXG4gIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcjsiLCJleHBvcnQgdmFyIGNhblVzZURPTSA9ICEhKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5kb2N1bWVudCAmJiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5cbmV4cG9ydCB2YXIgYWRkRXZlbnRMaXN0ZW5lciA9IGZ1bmN0aW9uIGFkZEV2ZW50TGlzdGVuZXIobm9kZSwgZXZlbnQsIGxpc3RlbmVyKSB7XG4gIHJldHVybiBub2RlLmFkZEV2ZW50TGlzdGVuZXIgPyBub2RlLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnQsIGxpc3RlbmVyLCBmYWxzZSkgOiBub2RlLmF0dGFjaEV2ZW50KCdvbicgKyBldmVudCwgbGlzdGVuZXIpO1xufTtcblxuZXhwb3J0IHZhciByZW1vdmVFdmVudExpc3RlbmVyID0gZnVuY3Rpb24gcmVtb3ZlRXZlbnRMaXN0ZW5lcihub2RlLCBldmVudCwgbGlzdGVuZXIpIHtcbiAgcmV0dXJuIG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lciA/IG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudCwgbGlzdGVuZXIsIGZhbHNlKSA6IG5vZGUuZGV0YWNoRXZlbnQoJ29uJyArIGV2ZW50LCBsaXN0ZW5lcik7XG59O1xuXG5leHBvcnQgdmFyIGdldENvbmZpcm1hdGlvbiA9IGZ1bmN0aW9uIGdldENvbmZpcm1hdGlvbihtZXNzYWdlLCBjYWxsYmFjaykge1xuICByZXR1cm4gY2FsbGJhY2sod2luZG93LmNvbmZpcm0obWVzc2FnZSkpO1xufTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1hbGVydFxuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgSFRNTDUgaGlzdG9yeSBBUEkgaXMgc3VwcG9ydGVkLiBUYWtlbiBmcm9tIE1vZGVybml6ci5cbiAqXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9mZWF0dXJlLWRldGVjdHMvaGlzdG9yeS5qc1xuICogY2hhbmdlZCB0byBhdm9pZCBmYWxzZSBuZWdhdGl2ZXMgZm9yIFdpbmRvd3MgUGhvbmVzOiBodHRwczovL2dpdGh1Yi5jb20vcmVhY3Rqcy9yZWFjdC1yb3V0ZXIvaXNzdWVzLzU4NlxuICovXG5leHBvcnQgdmFyIHN1cHBvcnRzSGlzdG9yeSA9IGZ1bmN0aW9uIHN1cHBvcnRzSGlzdG9yeSgpIHtcbiAgdmFyIHVhID0gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQ7XG5cbiAgaWYgKCh1YS5pbmRleE9mKCdBbmRyb2lkIDIuJykgIT09IC0xIHx8IHVhLmluZGV4T2YoJ0FuZHJvaWQgNC4wJykgIT09IC0xKSAmJiB1YS5pbmRleE9mKCdNb2JpbGUgU2FmYXJpJykgIT09IC0xICYmIHVhLmluZGV4T2YoJ0Nocm9tZScpID09PSAtMSAmJiB1YS5pbmRleE9mKCdXaW5kb3dzIFBob25lJykgPT09IC0xKSByZXR1cm4gZmFsc2U7XG5cbiAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5ICYmICdwdXNoU3RhdGUnIGluIHdpbmRvdy5oaXN0b3J5O1xufTtcblxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgYnJvd3NlciBmaXJlcyBwb3BzdGF0ZSBvbiBoYXNoIGNoYW5nZS5cbiAqIElFMTAgYW5kIElFMTEgZG8gbm90LlxuICovXG5leHBvcnQgdmFyIHN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UgPSBmdW5jdGlvbiBzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlKCkge1xuICByZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignVHJpZGVudCcpID09PSAtMTtcbn07XG5cbi8qKlxuICogUmV0dXJucyBmYWxzZSBpZiB1c2luZyBnbyhuKSB3aXRoIGhhc2ggaGlzdG9yeSBjYXVzZXMgYSBmdWxsIHBhZ2UgcmVsb2FkLlxuICovXG5leHBvcnQgdmFyIHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoID0gZnVuY3Rpb24gc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2goKSB7XG4gIHJldHVybiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdGaXJlZm94JykgPT09IC0xO1xufTtcblxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgYSBnaXZlbiBwb3BzdGF0ZSBldmVudCBpcyBhbiBleHRyYW5lb3VzIFdlYktpdCBldmVudC5cbiAqIEFjY291bnRzIGZvciB0aGUgZmFjdCB0aGF0IENocm9tZSBvbiBpT1MgZmlyZXMgcmVhbCBwb3BzdGF0ZSBldmVudHNcbiAqIGNvbnRhaW5pbmcgdW5kZWZpbmVkIHN0YXRlIHdoZW4gcHJlc3NpbmcgdGhlIGJhY2sgYnV0dG9uLlxuICovXG5leHBvcnQgdmFyIGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQgPSBmdW5jdGlvbiBpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50KGV2ZW50KSB7XG4gIHJldHVybiBldmVudC5zdGF0ZSA9PT0gdW5kZWZpbmVkICYmIG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignQ3JpT1MnKSA9PT0gLTE7XG59OyIsInZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuaW1wb3J0IHdhcm5pbmcgZnJvbSAnd2FybmluZyc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ2ludmFyaWFudCc7XG5pbXBvcnQgeyBjcmVhdGVMb2NhdGlvbiB9IGZyb20gJy4vTG9jYXRpb25VdGlscyc7XG5pbXBvcnQgeyBhZGRMZWFkaW5nU2xhc2gsIHN0cmlwVHJhaWxpbmdTbGFzaCwgaGFzQmFzZW5hbWUsIHN0cmlwQmFzZW5hbWUsIGNyZWF0ZVBhdGggfSBmcm9tICcuL1BhdGhVdGlscyc7XG5pbXBvcnQgY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIgZnJvbSAnLi9jcmVhdGVUcmFuc2l0aW9uTWFuYWdlcic7XG5pbXBvcnQgeyBjYW5Vc2VET00sIGFkZEV2ZW50TGlzdGVuZXIsIHJlbW92ZUV2ZW50TGlzdGVuZXIsIGdldENvbmZpcm1hdGlvbiwgc3VwcG9ydHNIaXN0b3J5LCBzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlLCBpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50IH0gZnJvbSAnLi9ET01VdGlscyc7XG5cbnZhciBQb3BTdGF0ZUV2ZW50ID0gJ3BvcHN0YXRlJztcbnZhciBIYXNoQ2hhbmdlRXZlbnQgPSAnaGFzaGNoYW5nZSc7XG5cbnZhciBnZXRIaXN0b3J5U3RhdGUgPSBmdW5jdGlvbiBnZXRIaXN0b3J5U3RhdGUoKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5LnN0YXRlIHx8IHt9O1xuICB9IGNhdGNoIChlKSB7XG4gICAgLy8gSUUgMTEgc29tZXRpbWVzIHRocm93cyB3aGVuIGFjY2Vzc2luZyB3aW5kb3cuaGlzdG9yeS5zdGF0ZVxuICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vUmVhY3RUcmFpbmluZy9oaXN0b3J5L3B1bGwvMjg5XG4gICAgcmV0dXJuIHt9O1xuICB9XG59O1xuXG4vKipcbiAqIENyZWF0ZXMgYSBoaXN0b3J5IG9iamVjdCB0aGF0IHVzZXMgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGluY2x1ZGluZ1xuICogcHVzaFN0YXRlLCByZXBsYWNlU3RhdGUsIGFuZCB0aGUgcG9wc3RhdGUgZXZlbnQuXG4gKi9cbnZhciBjcmVhdGVCcm93c2VySGlzdG9yeSA9IGZ1bmN0aW9uIGNyZWF0ZUJyb3dzZXJIaXN0b3J5KCkge1xuICB2YXIgcHJvcHMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuXG4gIGludmFyaWFudChjYW5Vc2VET00sICdCcm93c2VyIGhpc3RvcnkgbmVlZHMgYSBET00nKTtcblxuICB2YXIgZ2xvYmFsSGlzdG9yeSA9IHdpbmRvdy5oaXN0b3J5O1xuICB2YXIgY2FuVXNlSGlzdG9yeSA9IHN1cHBvcnRzSGlzdG9yeSgpO1xuICB2YXIgbmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIgPSAhc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSgpO1xuXG4gIHZhciBfcHJvcHMkZm9yY2VSZWZyZXNoID0gcHJvcHMuZm9yY2VSZWZyZXNoLFxuICAgICAgZm9yY2VSZWZyZXNoID0gX3Byb3BzJGZvcmNlUmVmcmVzaCA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiBfcHJvcHMkZm9yY2VSZWZyZXNoLFxuICAgICAgX3Byb3BzJGdldFVzZXJDb25maXJtID0gcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPT09IHVuZGVmaW5lZCA/IGdldENvbmZpcm1hdGlvbiA6IF9wcm9wcyRnZXRVc2VyQ29uZmlybSxcbiAgICAgIF9wcm9wcyRrZXlMZW5ndGggPSBwcm9wcy5rZXlMZW5ndGgsXG4gICAgICBrZXlMZW5ndGggPSBfcHJvcHMka2V5TGVuZ3RoID09PSB1bmRlZmluZWQgPyA2IDogX3Byb3BzJGtleUxlbmd0aDtcblxuICB2YXIgYmFzZW5hbWUgPSBwcm9wcy5iYXNlbmFtZSA/IHN0cmlwVHJhaWxpbmdTbGFzaChhZGRMZWFkaW5nU2xhc2gocHJvcHMuYmFzZW5hbWUpKSA6ICcnO1xuXG4gIHZhciBnZXRET01Mb2NhdGlvbiA9IGZ1bmN0aW9uIGdldERPTUxvY2F0aW9uKGhpc3RvcnlTdGF0ZSkge1xuICAgIHZhciBfcmVmID0gaGlzdG9yeVN0YXRlIHx8IHt9LFxuICAgICAgICBrZXkgPSBfcmVmLmtleSxcbiAgICAgICAgc3RhdGUgPSBfcmVmLnN0YXRlO1xuXG4gICAgdmFyIF93aW5kb3ckbG9jYXRpb24gPSB3aW5kb3cubG9jYXRpb24sXG4gICAgICAgIHBhdGhuYW1lID0gX3dpbmRvdyRsb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgICAgc2VhcmNoID0gX3dpbmRvdyRsb2NhdGlvbi5zZWFyY2gsXG4gICAgICAgIGhhc2ggPSBfd2luZG93JGxvY2F0aW9uLmhhc2g7XG5cblxuICAgIHZhciBwYXRoID0gcGF0aG5hbWUgKyBzZWFyY2ggKyBoYXNoO1xuXG4gICAgd2FybmluZyghYmFzZW5hbWUgfHwgaGFzQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpLCAnWW91IGFyZSBhdHRlbXB0aW5nIHRvIHVzZSBhIGJhc2VuYW1lIG9uIGEgcGFnZSB3aG9zZSBVUkwgcGF0aCBkb2VzIG5vdCBiZWdpbiAnICsgJ3dpdGggdGhlIGJhc2VuYW1lLiBFeHBlY3RlZCBwYXRoIFwiJyArIHBhdGggKyAnXCIgdG8gYmVnaW4gd2l0aCBcIicgKyBiYXNlbmFtZSArICdcIi4nKTtcblxuICAgIGlmIChiYXNlbmFtZSkgcGF0aCA9IHN0cmlwQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpO1xuXG4gICAgcmV0dXJuIGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBrZXkpO1xuICB9O1xuXG4gIHZhciBjcmVhdGVLZXkgPSBmdW5jdGlvbiBjcmVhdGVLZXkoKSB7XG4gICAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCBrZXlMZW5ndGgpO1xuICB9O1xuXG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgdmFyIHNldFN0YXRlID0gZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gZ2xvYmFsSGlzdG9yeS5sZW5ndGg7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9O1xuXG4gIHZhciBoYW5kbGVQb3BTdGF0ZSA9IGZ1bmN0aW9uIGhhbmRsZVBvcFN0YXRlKGV2ZW50KSB7XG4gICAgLy8gSWdub3JlIGV4dHJhbmVvdXMgcG9wc3RhdGUgZXZlbnRzIGluIFdlYktpdC5cbiAgICBpZiAoaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudChldmVudCkpIHJldHVybjtcblxuICAgIGhhbmRsZVBvcChnZXRET01Mb2NhdGlvbihldmVudC5zdGF0ZSkpO1xuICB9O1xuXG4gIHZhciBoYW5kbGVIYXNoQ2hhbmdlID0gZnVuY3Rpb24gaGFuZGxlSGFzaENoYW5nZSgpIHtcbiAgICBoYW5kbGVQb3AoZ2V0RE9NTG9jYXRpb24oZ2V0SGlzdG9yeVN0YXRlKCkpKTtcbiAgfTtcblxuICB2YXIgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG5cbiAgdmFyIGhhbmRsZVBvcCA9IGZ1bmN0aW9uIGhhbmRsZVBvcChsb2NhdGlvbikge1xuICAgIGlmIChmb3JjZU5leHRQb3ApIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICAgICAgc2V0U3RhdGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuXG4gICAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgICBpZiAob2spIHtcbiAgICAgICAgICBzZXRTdGF0ZSh7IGFjdGlvbjogYWN0aW9uLCBsb2NhdGlvbjogbG9jYXRpb24gfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV2ZXJ0UG9wKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIHZhciByZXZlcnRQb3AgPSBmdW5jdGlvbiByZXZlcnRQb3AoZnJvbUxvY2F0aW9uKSB7XG4gICAgdmFyIHRvTG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uO1xuXG4gICAgLy8gVE9ETzogV2UgY291bGQgcHJvYmFibHkgbWFrZSB0aGlzIG1vcmUgcmVsaWFibGUgYnlcbiAgICAvLyBrZWVwaW5nIGEgbGlzdCBvZiBrZXlzIHdlJ3ZlIHNlZW4gaW4gc2Vzc2lvblN0b3JhZ2UuXG4gICAgLy8gSW5zdGVhZCwgd2UganVzdCBkZWZhdWx0IHRvIDAgZm9yIGtleXMgd2UgZG9uJ3Qga25vdy5cblxuICAgIHZhciB0b0luZGV4ID0gYWxsS2V5cy5pbmRleE9mKHRvTG9jYXRpb24ua2V5KTtcblxuICAgIGlmICh0b0luZGV4ID09PSAtMSkgdG9JbmRleCA9IDA7XG5cbiAgICB2YXIgZnJvbUluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGZyb21Mb2NhdGlvbi5rZXkpO1xuXG4gICAgaWYgKGZyb21JbmRleCA9PT0gLTEpIGZyb21JbmRleCA9IDA7XG5cbiAgICB2YXIgZGVsdGEgPSB0b0luZGV4IC0gZnJvbUluZGV4O1xuXG4gICAgaWYgKGRlbHRhKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSB0cnVlO1xuICAgICAgZ28oZGVsdGEpO1xuICAgIH1cbiAgfTtcblxuICB2YXIgaW5pdGlhbExvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oZ2V0SGlzdG9yeVN0YXRlKCkpO1xuICB2YXIgYWxsS2V5cyA9IFtpbml0aWFsTG9jYXRpb24ua2V5XTtcblxuICAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgdmFyIGNyZWF0ZUhyZWYgPSBmdW5jdGlvbiBjcmVhdGVIcmVmKGxvY2F0aW9uKSB7XG4gICAgcmV0dXJuIGJhc2VuYW1lICsgY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gIH07XG5cbiAgdmFyIHB1c2ggPSBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgd2FybmluZyghKCh0eXBlb2YgcGF0aCA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YocGF0aCkpID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byBwdXNoIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpO1xuXG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcblxuICAgICAgdmFyIGhyZWYgPSBjcmVhdGVIcmVmKGxvY2F0aW9uKTtcbiAgICAgIHZhciBrZXkgPSBsb2NhdGlvbi5rZXksXG4gICAgICAgICAgc3RhdGUgPSBsb2NhdGlvbi5zdGF0ZTtcblxuXG4gICAgICBpZiAoY2FuVXNlSGlzdG9yeSkge1xuICAgICAgICBnbG9iYWxIaXN0b3J5LnB1c2hTdGF0ZSh7IGtleToga2V5LCBzdGF0ZTogc3RhdGUgfSwgbnVsbCwgaHJlZik7XG5cbiAgICAgICAgaWYgKGZvcmNlUmVmcmVzaCkge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcbiAgICAgICAgICB2YXIgbmV4dEtleXMgPSBhbGxLZXlzLnNsaWNlKDAsIHByZXZJbmRleCA9PT0gLTEgPyAwIDogcHJldkluZGV4ICsgMSk7XG5cbiAgICAgICAgICBuZXh0S2V5cy5wdXNoKGxvY2F0aW9uLmtleSk7XG4gICAgICAgICAgYWxsS2V5cyA9IG5leHRLZXlzO1xuXG4gICAgICAgICAgc2V0U3RhdGUoeyBhY3Rpb246IGFjdGlvbiwgbG9jYXRpb246IGxvY2F0aW9uIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdCcm93c2VyIGhpc3RvcnkgY2Fubm90IHB1c2ggc3RhdGUgaW4gYnJvd3NlcnMgdGhhdCBkbyBub3Qgc3VwcG9ydCBIVE1MNSBoaXN0b3J5Jyk7XG5cbiAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBocmVmO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIHZhciByZXBsYWNlID0gZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHdhcm5pbmcoISgodHlwZW9mIHBhdGggPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKHBhdGgpKSA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKTtcblxuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG5cbiAgICAgIHZhciBocmVmID0gY3JlYXRlSHJlZihsb2NhdGlvbik7XG4gICAgICB2YXIga2V5ID0gbG9jYXRpb24ua2V5LFxuICAgICAgICAgIHN0YXRlID0gbG9jYXRpb24uc3RhdGU7XG5cblxuICAgICAgaWYgKGNhblVzZUhpc3RvcnkpIHtcbiAgICAgICAgZ2xvYmFsSGlzdG9yeS5yZXBsYWNlU3RhdGUoeyBrZXk6IGtleSwgc3RhdGU6IHN0YXRlIH0sIG51bGwsIGhyZWYpO1xuXG4gICAgICAgIGlmIChmb3JjZVJlZnJlc2gpIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShocmVmKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcblxuICAgICAgICAgIGlmIChwcmV2SW5kZXggIT09IC0xKSBhbGxLZXlzW3ByZXZJbmRleF0gPSBsb2NhdGlvbi5rZXk7XG5cbiAgICAgICAgICBzZXRTdGF0ZSh7IGFjdGlvbjogYWN0aW9uLCBsb2NhdGlvbjogbG9jYXRpb24gfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0Jyb3dzZXIgaGlzdG9yeSBjYW5ub3QgcmVwbGFjZSBzdGF0ZSBpbiBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IEhUTUw1IGhpc3RvcnknKTtcblxuICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShocmVmKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICB2YXIgZ28gPSBmdW5jdGlvbiBnbyhuKSB7XG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcbiAgfTtcblxuICB2YXIgZ29CYWNrID0gZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIHJldHVybiBnbygtMSk7XG4gIH07XG5cbiAgdmFyIGdvRm9yd2FyZCA9IGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICByZXR1cm4gZ28oMSk7XG4gIH07XG5cbiAgdmFyIGxpc3RlbmVyQ291bnQgPSAwO1xuXG4gIHZhciBjaGVja0RPTUxpc3RlbmVycyA9IGZ1bmN0aW9uIGNoZWNrRE9NTGlzdGVuZXJzKGRlbHRhKSB7XG4gICAgbGlzdGVuZXJDb3VudCArPSBkZWx0YTtcblxuICAgIGlmIChsaXN0ZW5lckNvdW50ID09PSAxKSB7XG4gICAgICBhZGRFdmVudExpc3RlbmVyKHdpbmRvdywgUG9wU3RhdGVFdmVudCwgaGFuZGxlUG9wU3RhdGUpO1xuXG4gICAgICBpZiAobmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIpIGFkZEV2ZW50TGlzdGVuZXIod2luZG93LCBIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH0gZWxzZSBpZiAobGlzdGVuZXJDb3VudCA9PT0gMCkge1xuICAgICAgcmVtb3ZlRXZlbnRMaXN0ZW5lcih3aW5kb3csIFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcblxuICAgICAgaWYgKG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyKSByZW1vdmVFdmVudExpc3RlbmVyKHdpbmRvdywgSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIGlzQmxvY2tlZCA9IGZhbHNlO1xuXG4gIHZhciBibG9jayA9IGZ1bmN0aW9uIGJsb2NrKCkge1xuICAgIHZhciBwcm9tcHQgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IGZhbHNlO1xuXG4gICAgdmFyIHVuYmxvY2sgPSB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcblxuICAgIGlmICghaXNCbG9ja2VkKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICAgIGlzQmxvY2tlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChpc0Jsb2NrZWQpIHtcbiAgICAgICAgaXNCbG9ja2VkID0gZmFsc2U7XG4gICAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuYmxvY2soKTtcbiAgICB9O1xuICB9O1xuXG4gIHZhciBsaXN0ZW4gPSBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICB2YXIgdW5saXN0ZW4gPSB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgdW5saXN0ZW4oKTtcbiAgICB9O1xuICB9O1xuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZ2xvYmFsSGlzdG9yeS5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogaW5pdGlhbExvY2F0aW9uLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcblxuICByZXR1cm4gaGlzdG9yeTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZUJyb3dzZXJIaXN0b3J5OyIsInZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmltcG9ydCB3YXJuaW5nIGZyb20gJ3dhcm5pbmcnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICdpbnZhcmlhbnQnO1xuaW1wb3J0IHsgY3JlYXRlTG9jYXRpb24sIGxvY2F0aW9uc0FyZUVxdWFsIH0gZnJvbSAnLi9Mb2NhdGlvblV0aWxzJztcbmltcG9ydCB7IGFkZExlYWRpbmdTbGFzaCwgc3RyaXBMZWFkaW5nU2xhc2gsIHN0cmlwVHJhaWxpbmdTbGFzaCwgaGFzQmFzZW5hbWUsIHN0cmlwQmFzZW5hbWUsIGNyZWF0ZVBhdGggfSBmcm9tICcuL1BhdGhVdGlscyc7XG5pbXBvcnQgY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIgZnJvbSAnLi9jcmVhdGVUcmFuc2l0aW9uTWFuYWdlcic7XG5pbXBvcnQgeyBjYW5Vc2VET00sIGFkZEV2ZW50TGlzdGVuZXIsIHJlbW92ZUV2ZW50TGlzdGVuZXIsIGdldENvbmZpcm1hdGlvbiwgc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2ggfSBmcm9tICcuL0RPTVV0aWxzJztcblxudmFyIEhhc2hDaGFuZ2VFdmVudCA9ICdoYXNoY2hhbmdlJztcblxudmFyIEhhc2hQYXRoQ29kZXJzID0ge1xuICBoYXNoYmFuZzoge1xuICAgIGVuY29kZVBhdGg6IGZ1bmN0aW9uIGVuY29kZVBhdGgocGF0aCkge1xuICAgICAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnIScgPyBwYXRoIDogJyEvJyArIHN0cmlwTGVhZGluZ1NsYXNoKHBhdGgpO1xuICAgIH0sXG4gICAgZGVjb2RlUGF0aDogZnVuY3Rpb24gZGVjb2RlUGF0aChwYXRoKSB7XG4gICAgICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICchJyA/IHBhdGguc3Vic3RyKDEpIDogcGF0aDtcbiAgICB9XG4gIH0sXG4gIG5vc2xhc2g6IHtcbiAgICBlbmNvZGVQYXRoOiBzdHJpcExlYWRpbmdTbGFzaCxcbiAgICBkZWNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2hcbiAgfSxcbiAgc2xhc2g6IHtcbiAgICBlbmNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2gsXG4gICAgZGVjb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoXG4gIH1cbn07XG5cbnZhciBnZXRIYXNoUGF0aCA9IGZ1bmN0aW9uIGdldEhhc2hQYXRoKCkge1xuICAvLyBXZSBjYW4ndCB1c2Ugd2luZG93LmxvY2F0aW9uLmhhc2ggaGVyZSBiZWNhdXNlIGl0J3Mgbm90XG4gIC8vIGNvbnNpc3RlbnQgYWNyb3NzIGJyb3dzZXJzIC0gRmlyZWZveCB3aWxsIHByZS1kZWNvZGUgaXQhXG4gIHZhciBocmVmID0gd2luZG93LmxvY2F0aW9uLmhyZWY7XG4gIHZhciBoYXNoSW5kZXggPSBocmVmLmluZGV4T2YoJyMnKTtcbiAgcmV0dXJuIGhhc2hJbmRleCA9PT0gLTEgPyAnJyA6IGhyZWYuc3Vic3RyaW5nKGhhc2hJbmRleCArIDEpO1xufTtcblxudmFyIHB1c2hIYXNoUGF0aCA9IGZ1bmN0aW9uIHB1c2hIYXNoUGF0aChwYXRoKSB7XG4gIHJldHVybiB3aW5kb3cubG9jYXRpb24uaGFzaCA9IHBhdGg7XG59O1xuXG52YXIgcmVwbGFjZUhhc2hQYXRoID0gZnVuY3Rpb24gcmVwbGFjZUhhc2hQYXRoKHBhdGgpIHtcbiAgdmFyIGhhc2hJbmRleCA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmLmluZGV4T2YoJyMnKTtcblxuICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZSh3aW5kb3cubG9jYXRpb24uaHJlZi5zbGljZSgwLCBoYXNoSW5kZXggPj0gMCA/IGhhc2hJbmRleCA6IDApICsgJyMnICsgcGF0aCk7XG59O1xuXG52YXIgY3JlYXRlSGFzaEhpc3RvcnkgPSBmdW5jdGlvbiBjcmVhdGVIYXNoSGlzdG9yeSgpIHtcbiAgdmFyIHByb3BzID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcblxuICBpbnZhcmlhbnQoY2FuVXNlRE9NLCAnSGFzaCBoaXN0b3J5IG5lZWRzIGEgRE9NJyk7XG5cbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcbiAgdmFyIGNhbkdvV2l0aG91dFJlbG9hZCA9IHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoKCk7XG5cbiAgdmFyIF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9IHByb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzJGdldFVzZXJDb25maXJtID09PSB1bmRlZmluZWQgPyBnZXRDb25maXJtYXRpb24gOiBfcHJvcHMkZ2V0VXNlckNvbmZpcm0sXG4gICAgICBfcHJvcHMkaGFzaFR5cGUgPSBwcm9wcy5oYXNoVHlwZSxcbiAgICAgIGhhc2hUeXBlID0gX3Byb3BzJGhhc2hUeXBlID09PSB1bmRlZmluZWQgPyAnc2xhc2gnIDogX3Byb3BzJGhhc2hUeXBlO1xuXG4gIHZhciBiYXNlbmFtZSA9IHByb3BzLmJhc2VuYW1lID8gc3RyaXBUcmFpbGluZ1NsYXNoKGFkZExlYWRpbmdTbGFzaChwcm9wcy5iYXNlbmFtZSkpIDogJyc7XG5cbiAgdmFyIF9IYXNoUGF0aENvZGVycyRoYXNoVCA9IEhhc2hQYXRoQ29kZXJzW2hhc2hUeXBlXSxcbiAgICAgIGVuY29kZVBhdGggPSBfSGFzaFBhdGhDb2RlcnMkaGFzaFQuZW5jb2RlUGF0aCxcbiAgICAgIGRlY29kZVBhdGggPSBfSGFzaFBhdGhDb2RlcnMkaGFzaFQuZGVjb2RlUGF0aDtcblxuXG4gIHZhciBnZXRET01Mb2NhdGlvbiA9IGZ1bmN0aW9uIGdldERPTUxvY2F0aW9uKCkge1xuICAgIHZhciBwYXRoID0gZGVjb2RlUGF0aChnZXRIYXNoUGF0aCgpKTtcblxuICAgIHdhcm5pbmcoIWJhc2VuYW1lIHx8IGhhc0Jhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKSwgJ1lvdSBhcmUgYXR0ZW1wdGluZyB0byB1c2UgYSBiYXNlbmFtZSBvbiBhIHBhZ2Ugd2hvc2UgVVJMIHBhdGggZG9lcyBub3QgYmVnaW4gJyArICd3aXRoIHRoZSBiYXNlbmFtZS4gRXhwZWN0ZWQgcGF0aCBcIicgKyBwYXRoICsgJ1wiIHRvIGJlZ2luIHdpdGggXCInICsgYmFzZW5hbWUgKyAnXCIuJyk7XG5cbiAgICBpZiAoYmFzZW5hbWUpIHBhdGggPSBzdHJpcEJhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKTtcblxuICAgIHJldHVybiBjcmVhdGVMb2NhdGlvbihwYXRoKTtcbiAgfTtcblxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIHZhciBzZXRTdGF0ZSA9IGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGdsb2JhbEhpc3RvcnkubGVuZ3RoO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfTtcblxuICB2YXIgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gIHZhciBpZ25vcmVQYXRoID0gbnVsbDtcblxuICB2YXIgaGFuZGxlSGFzaENoYW5nZSA9IGZ1bmN0aW9uIGhhbmRsZUhhc2hDaGFuZ2UoKSB7XG4gICAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xuICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgocGF0aCk7XG5cbiAgICBpZiAocGF0aCAhPT0gZW5jb2RlZFBhdGgpIHtcbiAgICAgIC8vIEVuc3VyZSB3ZSBhbHdheXMgaGF2ZSBhIHByb3Blcmx5LWVuY29kZWQgaGFzaC5cbiAgICAgIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBsb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKCk7XG4gICAgICB2YXIgcHJldkxvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjtcblxuICAgICAgaWYgKCFmb3JjZU5leHRQb3AgJiYgbG9jYXRpb25zQXJlRXF1YWwocHJldkxvY2F0aW9uLCBsb2NhdGlvbikpIHJldHVybjsgLy8gQSBoYXNoY2hhbmdlIGRvZXNuJ3QgYWx3YXlzID09IGxvY2F0aW9uIGNoYW5nZS5cblxuICAgICAgaWYgKGlnbm9yZVBhdGggPT09IGNyZWF0ZVBhdGgobG9jYXRpb24pKSByZXR1cm47IC8vIElnbm9yZSB0aGlzIGNoYW5nZTsgd2UgYWxyZWFkeSBzZXRTdGF0ZSBpbiBwdXNoL3JlcGxhY2UuXG5cbiAgICAgIGlnbm9yZVBhdGggPSBudWxsO1xuXG4gICAgICBoYW5kbGVQb3AobG9jYXRpb24pO1xuICAgIH1cbiAgfTtcblxuICB2YXIgaGFuZGxlUG9wID0gZnVuY3Rpb24gaGFuZGxlUG9wKGxvY2F0aW9uKSB7XG4gICAgaWYgKGZvcmNlTmV4dFBvcCkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gICAgICBzZXRTdGF0ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG5cbiAgICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICAgIGlmIChvaykge1xuICAgICAgICAgIHNldFN0YXRlKHsgYWN0aW9uOiBhY3Rpb24sIGxvY2F0aW9uOiBsb2NhdGlvbiB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXZlcnRQb3AobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIHJldmVydFBvcCA9IGZ1bmN0aW9uIHJldmVydFBvcChmcm9tTG9jYXRpb24pIHtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247XG5cbiAgICAvLyBUT0RPOiBXZSBjb3VsZCBwcm9iYWJseSBtYWtlIHRoaXMgbW9yZSByZWxpYWJsZSBieVxuICAgIC8vIGtlZXBpbmcgYSBsaXN0IG9mIHBhdGhzIHdlJ3ZlIHNlZW4gaW4gc2Vzc2lvblN0b3JhZ2UuXG4gICAgLy8gSW5zdGVhZCwgd2UganVzdCBkZWZhdWx0IHRvIDAgZm9yIHBhdGhzIHdlIGRvbid0IGtub3cuXG5cbiAgICB2YXIgdG9JbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgodG9Mb2NhdGlvbikpO1xuXG4gICAgaWYgKHRvSW5kZXggPT09IC0xKSB0b0luZGV4ID0gMDtcblxuICAgIHZhciBmcm9tSW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKGZyb21Mb2NhdGlvbikpO1xuXG4gICAgaWYgKGZyb21JbmRleCA9PT0gLTEpIGZyb21JbmRleCA9IDA7XG5cbiAgICB2YXIgZGVsdGEgPSB0b0luZGV4IC0gZnJvbUluZGV4O1xuXG4gICAgaWYgKGRlbHRhKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSB0cnVlO1xuICAgICAgZ28oZGVsdGEpO1xuICAgIH1cbiAgfTtcblxuICAvLyBFbnN1cmUgdGhlIGhhc2ggaXMgZW5jb2RlZCBwcm9wZXJseSBiZWZvcmUgZG9pbmcgYW55dGhpbmcgZWxzZS5cbiAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xuICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKHBhdGgpO1xuXG4gIGlmIChwYXRoICE9PSBlbmNvZGVkUGF0aCkgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcblxuICB2YXIgaW5pdGlhbExvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oKTtcbiAgdmFyIGFsbFBhdGhzID0gW2NyZWF0ZVBhdGgoaW5pdGlhbExvY2F0aW9uKV07XG5cbiAgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIHZhciBjcmVhdGVIcmVmID0gZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xuICAgIHJldHVybiAnIycgKyBlbmNvZGVQYXRoKGJhc2VuYW1lICsgY3JlYXRlUGF0aChsb2NhdGlvbikpO1xuICB9O1xuXG4gIHZhciBwdXNoID0gZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgcHVzaCBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpO1xuXG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaGlzdG9yeS5sb2NhdGlvbik7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuXG4gICAgICB2YXIgcGF0aCA9IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICAgICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChiYXNlbmFtZSArIHBhdGgpO1xuICAgICAgdmFyIGhhc2hDaGFuZ2VkID0gZ2V0SGFzaFBhdGgoKSAhPT0gZW5jb2RlZFBhdGg7XG5cbiAgICAgIGlmIChoYXNoQ2hhbmdlZCkge1xuICAgICAgICAvLyBXZSBjYW5ub3QgdGVsbCBpZiBhIGhhc2hjaGFuZ2Ugd2FzIGNhdXNlZCBieSBhIFBVU0gsIHNvIHdlJ2RcbiAgICAgICAgLy8gcmF0aGVyIHNldFN0YXRlIGhlcmUgYW5kIGlnbm9yZSB0aGUgaGFzaGNoYW5nZS4gVGhlIGNhdmVhdCBoZXJlXG4gICAgICAgIC8vIGlzIHRoYXQgb3RoZXIgaGFzaCBoaXN0b3JpZXMgaW4gdGhlIHBhZ2Ugd2lsbCBjb25zaWRlciBpdCBhIFBPUC5cbiAgICAgICAgaWdub3JlUGF0aCA9IHBhdGg7XG4gICAgICAgIHB1c2hIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG5cbiAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgoaGlzdG9yeS5sb2NhdGlvbikpO1xuICAgICAgICB2YXIgbmV4dFBhdGhzID0gYWxsUGF0aHMuc2xpY2UoMCwgcHJldkluZGV4ID09PSAtMSA/IDAgOiBwcmV2SW5kZXggKyAxKTtcblxuICAgICAgICBuZXh0UGF0aHMucHVzaChwYXRoKTtcbiAgICAgICAgYWxsUGF0aHMgPSBuZXh0UGF0aHM7XG5cbiAgICAgICAgc2V0U3RhdGUoeyBhY3Rpb246IGFjdGlvbiwgbG9jYXRpb246IGxvY2F0aW9uIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgd2FybmluZyhmYWxzZSwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgUFVTSCB0aGUgc2FtZSBwYXRoOyBhIG5ldyBlbnRyeSB3aWxsIG5vdCBiZSBhZGRlZCB0byB0aGUgaGlzdG9yeSBzdGFjaycpO1xuXG4gICAgICAgIHNldFN0YXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgdmFyIHJlcGxhY2UgPSBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCByZXBsYWNlIHN0YXRlOyBpdCBpcyBpZ25vcmVkJyk7XG5cbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBoaXN0b3J5LmxvY2F0aW9uKTtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG5cbiAgICAgIHZhciBwYXRoID0gY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gICAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKGJhc2VuYW1lICsgcGF0aCk7XG4gICAgICB2YXIgaGFzaENoYW5nZWQgPSBnZXRIYXNoUGF0aCgpICE9PSBlbmNvZGVkUGF0aDtcblxuICAgICAgaWYgKGhhc2hDaGFuZ2VkKSB7XG4gICAgICAgIC8vIFdlIGNhbm5vdCB0ZWxsIGlmIGEgaGFzaGNoYW5nZSB3YXMgY2F1c2VkIGJ5IGEgUkVQTEFDRSwgc28gd2UnZFxuICAgICAgICAvLyByYXRoZXIgc2V0U3RhdGUgaGVyZSBhbmQgaWdub3JlIHRoZSBoYXNoY2hhbmdlLiBUaGUgY2F2ZWF0IGhlcmVcbiAgICAgICAgLy8gaXMgdGhhdCBvdGhlciBoYXNoIGhpc3RvcmllcyBpbiB0aGUgcGFnZSB3aWxsIGNvbnNpZGVyIGl0IGEgUE9QLlxuICAgICAgICBpZ25vcmVQYXRoID0gcGF0aDtcbiAgICAgICAgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICAgIH1cblxuICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmluZGV4T2YoY3JlYXRlUGF0aChoaXN0b3J5LmxvY2F0aW9uKSk7XG5cbiAgICAgIGlmIChwcmV2SW5kZXggIT09IC0xKSBhbGxQYXRoc1twcmV2SW5kZXhdID0gcGF0aDtcblxuICAgICAgc2V0U3RhdGUoeyBhY3Rpb246IGFjdGlvbiwgbG9jYXRpb246IGxvY2F0aW9uIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIHZhciBnbyA9IGZ1bmN0aW9uIGdvKG4pIHtcbiAgICB3YXJuaW5nKGNhbkdvV2l0aG91dFJlbG9hZCwgJ0hhc2ggaGlzdG9yeSBnbyhuKSBjYXVzZXMgYSBmdWxsIHBhZ2UgcmVsb2FkIGluIHRoaXMgYnJvd3NlcicpO1xuXG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcbiAgfTtcblxuICB2YXIgZ29CYWNrID0gZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIHJldHVybiBnbygtMSk7XG4gIH07XG5cbiAgdmFyIGdvRm9yd2FyZCA9IGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICByZXR1cm4gZ28oMSk7XG4gIH07XG5cbiAgdmFyIGxpc3RlbmVyQ291bnQgPSAwO1xuXG4gIHZhciBjaGVja0RPTUxpc3RlbmVycyA9IGZ1bmN0aW9uIGNoZWNrRE9NTGlzdGVuZXJzKGRlbHRhKSB7XG4gICAgbGlzdGVuZXJDb3VudCArPSBkZWx0YTtcblxuICAgIGlmIChsaXN0ZW5lckNvdW50ID09PSAxKSB7XG4gICAgICBhZGRFdmVudExpc3RlbmVyKHdpbmRvdywgSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9IGVsc2UgaWYgKGxpc3RlbmVyQ291bnQgPT09IDApIHtcbiAgICAgIHJlbW92ZUV2ZW50TGlzdGVuZXIod2luZG93LCBIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH1cbiAgfTtcblxuICB2YXIgaXNCbG9ja2VkID0gZmFsc2U7XG5cbiAgdmFyIGJsb2NrID0gZnVuY3Rpb24gYmxvY2soKSB7XG4gICAgdmFyIHByb21wdCA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogZmFsc2U7XG5cbiAgICB2YXIgdW5ibG9jayA9IHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuXG4gICAgaWYgKCFpc0Jsb2NrZWQpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgICAgaXNCbG9ja2VkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGlzQmxvY2tlZCkge1xuICAgICAgICBpc0Jsb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdW5ibG9jaygpO1xuICAgIH07XG4gIH07XG5cbiAgdmFyIGxpc3RlbiA9IGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHZhciB1bmxpc3RlbiA9IHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB1bmxpc3RlbigpO1xuICAgIH07XG4gIH07XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBnbG9iYWxIaXN0b3J5Lmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBpbml0aWFsTG9jYXRpb24sXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuXG4gIHJldHVybiBoaXN0b3J5O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlSGFzaEhpc3Rvcnk7IiwidmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9O1xuXG52YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5pbXBvcnQgd2FybmluZyBmcm9tICd3YXJuaW5nJztcbmltcG9ydCB7IGNyZWF0ZVBhdGggfSBmcm9tICcuL1BhdGhVdGlscyc7XG5pbXBvcnQgeyBjcmVhdGVMb2NhdGlvbiB9IGZyb20gJy4vTG9jYXRpb25VdGlscyc7XG5pbXBvcnQgY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIgZnJvbSAnLi9jcmVhdGVUcmFuc2l0aW9uTWFuYWdlcic7XG5cbnZhciBjbGFtcCA9IGZ1bmN0aW9uIGNsYW1wKG4sIGxvd2VyQm91bmQsIHVwcGVyQm91bmQpIHtcbiAgcmV0dXJuIE1hdGgubWluKE1hdGgubWF4KG4sIGxvd2VyQm91bmQpLCB1cHBlckJvdW5kKTtcbn07XG5cbi8qKlxuICogQ3JlYXRlcyBhIGhpc3Rvcnkgb2JqZWN0IHRoYXQgc3RvcmVzIGxvY2F0aW9ucyBpbiBtZW1vcnkuXG4gKi9cbnZhciBjcmVhdGVNZW1vcnlIaXN0b3J5ID0gZnVuY3Rpb24gY3JlYXRlTWVtb3J5SGlzdG9yeSgpIHtcbiAgdmFyIHByb3BzID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcbiAgdmFyIGdldFVzZXJDb25maXJtYXRpb24gPSBwcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgX3Byb3BzJGluaXRpYWxFbnRyaWVzID0gcHJvcHMuaW5pdGlhbEVudHJpZXMsXG4gICAgICBpbml0aWFsRW50cmllcyA9IF9wcm9wcyRpbml0aWFsRW50cmllcyA9PT0gdW5kZWZpbmVkID8gWycvJ10gOiBfcHJvcHMkaW5pdGlhbEVudHJpZXMsXG4gICAgICBfcHJvcHMkaW5pdGlhbEluZGV4ID0gcHJvcHMuaW5pdGlhbEluZGV4LFxuICAgICAgaW5pdGlhbEluZGV4ID0gX3Byb3BzJGluaXRpYWxJbmRleCA9PT0gdW5kZWZpbmVkID8gMCA6IF9wcm9wcyRpbml0aWFsSW5kZXgsXG4gICAgICBfcHJvcHMka2V5TGVuZ3RoID0gcHJvcHMua2V5TGVuZ3RoLFxuICAgICAga2V5TGVuZ3RoID0gX3Byb3BzJGtleUxlbmd0aCA9PT0gdW5kZWZpbmVkID8gNiA6IF9wcm9wcyRrZXlMZW5ndGg7XG5cblxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIHZhciBzZXRTdGF0ZSA9IGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGhpc3RvcnkuZW50cmllcy5sZW5ndGg7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9O1xuXG4gIHZhciBjcmVhdGVLZXkgPSBmdW5jdGlvbiBjcmVhdGVLZXkoKSB7XG4gICAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCBrZXlMZW5ndGgpO1xuICB9O1xuXG4gIHZhciBpbmRleCA9IGNsYW1wKGluaXRpYWxJbmRleCwgMCwgaW5pdGlhbEVudHJpZXMubGVuZ3RoIC0gMSk7XG4gIHZhciBlbnRyaWVzID0gaW5pdGlhbEVudHJpZXMubWFwKGZ1bmN0aW9uIChlbnRyeSkge1xuICAgIHJldHVybiB0eXBlb2YgZW50cnkgPT09ICdzdHJpbmcnID8gY3JlYXRlTG9jYXRpb24oZW50cnksIHVuZGVmaW5lZCwgY3JlYXRlS2V5KCkpIDogY3JlYXRlTG9jYXRpb24oZW50cnksIHVuZGVmaW5lZCwgZW50cnkua2V5IHx8IGNyZWF0ZUtleSgpKTtcbiAgfSk7XG5cbiAgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIHZhciBjcmVhdGVIcmVmID0gY3JlYXRlUGF0aDtcblxuICB2YXIgcHVzaCA9IGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICB3YXJuaW5nKCEoKHR5cGVvZiBwYXRoID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihwYXRoKSkgPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHB1c2ggd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJyk7XG5cbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuXG4gICAgICB2YXIgcHJldkluZGV4ID0gaGlzdG9yeS5pbmRleDtcbiAgICAgIHZhciBuZXh0SW5kZXggPSBwcmV2SW5kZXggKyAxO1xuXG4gICAgICB2YXIgbmV4dEVudHJpZXMgPSBoaXN0b3J5LmVudHJpZXMuc2xpY2UoMCk7XG4gICAgICBpZiAobmV4dEVudHJpZXMubGVuZ3RoID4gbmV4dEluZGV4KSB7XG4gICAgICAgIG5leHRFbnRyaWVzLnNwbGljZShuZXh0SW5kZXgsIG5leHRFbnRyaWVzLmxlbmd0aCAtIG5leHRJbmRleCwgbG9jYXRpb24pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbmV4dEVudHJpZXMucHVzaChsb2NhdGlvbik7XG4gICAgICB9XG5cbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgaW5kZXg6IG5leHRJbmRleCxcbiAgICAgICAgZW50cmllczogbmV4dEVudHJpZXNcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIHZhciByZXBsYWNlID0gZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHdhcm5pbmcoISgodHlwZW9mIHBhdGggPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKHBhdGgpKSA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKTtcblxuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG5cbiAgICAgIGhpc3RvcnkuZW50cmllc1toaXN0b3J5LmluZGV4XSA9IGxvY2F0aW9uO1xuXG4gICAgICBzZXRTdGF0ZSh7IGFjdGlvbjogYWN0aW9uLCBsb2NhdGlvbjogbG9jYXRpb24gfSk7XG4gICAgfSk7XG4gIH07XG5cbiAgdmFyIGdvID0gZnVuY3Rpb24gZ28obikge1xuICAgIHZhciBuZXh0SW5kZXggPSBjbGFtcChoaXN0b3J5LmluZGV4ICsgbiwgMCwgaGlzdG9yeS5lbnRyaWVzLmxlbmd0aCAtIDEpO1xuXG4gICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgIHZhciBsb2NhdGlvbiA9IGhpc3RvcnkuZW50cmllc1tuZXh0SW5kZXhdO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmIChvaykge1xuICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICAgIGluZGV4OiBuZXh0SW5kZXhcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBNaW1pYyB0aGUgYmVoYXZpb3Igb2YgRE9NIGhpc3RvcmllcyBieVxuICAgICAgICAvLyBjYXVzaW5nIGEgcmVuZGVyIGFmdGVyIGEgY2FuY2VsbGVkIFBPUC5cbiAgICAgICAgc2V0U3RhdGUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICB2YXIgZ29CYWNrID0gZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIHJldHVybiBnbygtMSk7XG4gIH07XG5cbiAgdmFyIGdvRm9yd2FyZCA9IGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICByZXR1cm4gZ28oMSk7XG4gIH07XG5cbiAgdmFyIGNhbkdvID0gZnVuY3Rpb24gY2FuR28obikge1xuICAgIHZhciBuZXh0SW5kZXggPSBoaXN0b3J5LmluZGV4ICsgbjtcbiAgICByZXR1cm4gbmV4dEluZGV4ID49IDAgJiYgbmV4dEluZGV4IDwgaGlzdG9yeS5lbnRyaWVzLmxlbmd0aDtcbiAgfTtcblxuICB2YXIgYmxvY2sgPSBmdW5jdGlvbiBibG9jaygpIHtcbiAgICB2YXIgcHJvbXB0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBmYWxzZTtcbiAgICByZXR1cm4gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG4gIH07XG5cbiAgdmFyIGxpc3RlbiA9IGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHJldHVybiB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gIH07XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBlbnRyaWVzLmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBlbnRyaWVzW2luZGV4XSxcbiAgICBpbmRleDogaW5kZXgsXG4gICAgZW50cmllczogZW50cmllcyxcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgY2FuR286IGNhbkdvLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuXG4gIHJldHVybiBoaXN0b3J5O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlTWVtb3J5SGlzdG9yeTsiLCJ2YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbmltcG9ydCB3YXJuaW5nIGZyb20gXCJ3YXJuaW5nXCI7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gXCJpbnZhcmlhbnRcIjtcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcHV0dGluZyBoaXN0b3J5IG9uIGNvbnRleHQuXG4gKi9cblxudmFyIFJvdXRlciA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFJvdXRlcigpIHtcbiAgICB2YXIgX3RlbXAsIF90aGlzLCBfcmV0O1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJvdXRlcik7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICByZXR1cm4gX3JldCA9IChfdGVtcCA9IChfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSksIF90aGlzKSwgX3RoaXMuc3RhdGUgPSB7XG4gICAgICBtYXRjaDogX3RoaXMuY29tcHV0ZU1hdGNoKF90aGlzLnByb3BzLmhpc3RvcnkubG9jYXRpb24ucGF0aG5hbWUpXG4gICAgfSwgX3RlbXApLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcywgX3JldCk7XG4gIH1cblxuICBSb3V0ZXIucHJvdG90eXBlLmdldENoaWxkQ29udGV4dCA9IGZ1bmN0aW9uIGdldENoaWxkQ29udGV4dCgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcm91dGVyOiBfZXh0ZW5kcyh7fSwgdGhpcy5jb250ZXh0LnJvdXRlciwge1xuICAgICAgICBoaXN0b3J5OiB0aGlzLnByb3BzLmhpc3RvcnksXG4gICAgICAgIHJvdXRlOiB7XG4gICAgICAgICAgbG9jYXRpb246IHRoaXMucHJvcHMuaGlzdG9yeS5sb2NhdGlvbixcbiAgICAgICAgICBtYXRjaDogdGhpcy5zdGF0ZS5tYXRjaFxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH07XG4gIH07XG5cbiAgUm91dGVyLnByb3RvdHlwZS5jb21wdXRlTWF0Y2ggPSBmdW5jdGlvbiBjb21wdXRlTWF0Y2gocGF0aG5hbWUpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcGF0aDogXCIvXCIsXG4gICAgICB1cmw6IFwiL1wiLFxuICAgICAgcGFyYW1zOiB7fSxcbiAgICAgIGlzRXhhY3Q6IHBhdGhuYW1lID09PSBcIi9cIlxuICAgIH07XG4gIH07XG5cbiAgUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnRXaWxsTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsTW91bnQoKSB7XG4gICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICB2YXIgX3Byb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgY2hpbGRyZW4gPSBfcHJvcHMuY2hpbGRyZW4sXG4gICAgICAgIGhpc3RvcnkgPSBfcHJvcHMuaGlzdG9yeTtcblxuXG4gICAgaW52YXJpYW50KGNoaWxkcmVuID09IG51bGwgfHwgUmVhY3QuQ2hpbGRyZW4uY291bnQoY2hpbGRyZW4pID09PSAxLCBcIkEgPFJvdXRlcj4gbWF5IGhhdmUgb25seSBvbmUgY2hpbGQgZWxlbWVudFwiKTtcblxuICAgIC8vIERvIHRoaXMgaGVyZSBzbyB3ZSBjYW4gc2V0U3RhdGUgd2hlbiBhIDxSZWRpcmVjdD4gY2hhbmdlcyB0aGVcbiAgICAvLyBsb2NhdGlvbiBpbiBjb21wb25lbnRXaWxsTW91bnQuIFRoaXMgaGFwcGVucyBlLmcuIHdoZW4gZG9pbmdcbiAgICAvLyBzZXJ2ZXIgcmVuZGVyaW5nIHVzaW5nIGEgPFN0YXRpY1JvdXRlcj4uXG4gICAgdGhpcy51bmxpc3RlbiA9IGhpc3RvcnkubGlzdGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzMi5zZXRTdGF0ZSh7XG4gICAgICAgIG1hdGNoOiBfdGhpczIuY29tcHV0ZU1hdGNoKGhpc3RvcnkubG9jYXRpb24ucGF0aG5hbWUpXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgIHdhcm5pbmcodGhpcy5wcm9wcy5oaXN0b3J5ID09PSBuZXh0UHJvcHMuaGlzdG9yeSwgXCJZb3UgY2Fubm90IGNoYW5nZSA8Um91dGVyIGhpc3Rvcnk+XCIpO1xuICB9O1xuXG4gIFJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICB0aGlzLnVubGlzdGVuKCk7XG4gIH07XG5cbiAgUm91dGVyLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIGNoaWxkcmVuID0gdGhpcy5wcm9wcy5jaGlsZHJlbjtcblxuICAgIHJldHVybiBjaGlsZHJlbiA/IFJlYWN0LkNoaWxkcmVuLm9ubHkoY2hpbGRyZW4pIDogbnVsbDtcbiAgfTtcblxuICByZXR1cm4gUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5Sb3V0ZXIucHJvcFR5cGVzID0ge1xuICBoaXN0b3J5OiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZVxufTtcblJvdXRlci5jb250ZXh0VHlwZXMgPSB7XG4gIHJvdXRlcjogUHJvcFR5cGVzLm9iamVjdFxufTtcblJvdXRlci5jaGlsZENvbnRleHRUeXBlcyA9IHtcbiAgcm91dGVyOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWRcbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgUm91dGVyOyIsIi8vIFdyaXR0ZW4gaW4gdGhpcyByb3VuZCBhYm91dCB3YXkgZm9yIGJhYmVsLXRyYW5zZm9ybS1pbXBvcnRzXG5pbXBvcnQgUm91dGVyIGZyb20gXCJyZWFjdC1yb3V0ZXIvZXMvUm91dGVyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IFJvdXRlcjsiLCJmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbmltcG9ydCB3YXJuaW5nIGZyb20gXCJ3YXJuaW5nXCI7XG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgeyBjcmVhdGVCcm93c2VySGlzdG9yeSBhcyBjcmVhdGVIaXN0b3J5IH0gZnJvbSBcImhpc3RvcnlcIjtcbmltcG9ydCBSb3V0ZXIgZnJvbSBcIi4vUm91dGVyXCI7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCB1c2VzIEhUTUw1IGhpc3RvcnkuXG4gKi9cblxudmFyIEJyb3dzZXJSb3V0ZXIgPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoQnJvd3NlclJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gQnJvd3NlclJvdXRlcigpIHtcbiAgICB2YXIgX3RlbXAsIF90aGlzLCBfcmV0O1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEJyb3dzZXJSb3V0ZXIpO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgcmV0dXJuIF9yZXQgPSAoX3RlbXAgPSAoX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkpLCBfdGhpcyksIF90aGlzLmhpc3RvcnkgPSBjcmVhdGVIaXN0b3J5KF90aGlzLnByb3BzKSwgX3RlbXApLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcywgX3JldCk7XG4gIH1cblxuICBCcm93c2VyUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnRXaWxsTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsTW91bnQoKSB7XG4gICAgd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxCcm93c2VyUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgQnJvd3NlclJvdXRlciBhcyBSb3V0ZXIgfWAuXCIpO1xuICB9O1xuXG4gIEJyb3dzZXJSb3V0ZXIucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIHsgaGlzdG9yeTogdGhpcy5oaXN0b3J5LCBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlbiB9KTtcbiAgfTtcblxuICByZXR1cm4gQnJvd3NlclJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuQnJvd3NlclJvdXRlci5wcm9wVHlwZXMgPSB7XG4gIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBmb3JjZVJlZnJlc2g6IFByb3BUeXBlcy5ib29sLFxuICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcbiAga2V5TGVuZ3RoOiBQcm9wVHlwZXMubnVtYmVyLFxuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGVcbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgQnJvd3NlclJvdXRlcjsiLCJmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbmltcG9ydCB3YXJuaW5nIGZyb20gXCJ3YXJuaW5nXCI7XG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgeyBjcmVhdGVIYXNoSGlzdG9yeSBhcyBjcmVhdGVIaXN0b3J5IH0gZnJvbSBcImhpc3RvcnlcIjtcbmltcG9ydCBSb3V0ZXIgZnJvbSBcIi4vUm91dGVyXCI7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCB1c2VzIHdpbmRvdy5sb2NhdGlvbi5oYXNoLlxuICovXG5cbnZhciBIYXNoUm91dGVyID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKEhhc2hSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIEhhc2hSb3V0ZXIoKSB7XG4gICAgdmFyIF90ZW1wLCBfdGhpcywgX3JldDtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBIYXNoUm91dGVyKTtcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIHJldHVybiBfcmV0ID0gKF90ZW1wID0gKF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpKSwgX3RoaXMpLCBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlSGlzdG9yeShfdGhpcy5wcm9wcyksIF90ZW1wKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oX3RoaXMsIF9yZXQpO1xuICB9XG5cbiAgSGFzaFJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50V2lsbE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgIHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8SGFzaFJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IEhhc2hSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKTtcbiAgfTtcblxuICBIYXNoUm91dGVyLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCB7IGhpc3Rvcnk6IHRoaXMuaGlzdG9yeSwgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW4gfSk7XG4gIH07XG5cbiAgcmV0dXJuIEhhc2hSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbkhhc2hSb3V0ZXIucHJvcFR5cGVzID0ge1xuICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gIGhhc2hUeXBlOiBQcm9wVHlwZXMub25lT2YoW1wiaGFzaGJhbmdcIiwgXCJub3NsYXNoXCIsIFwic2xhc2hcIl0pLFxuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGVcbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgSGFzaFJvdXRlcjsiLCJ2YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMob2JqLCBrZXlzKSB7IHZhciB0YXJnZXQgPSB7fTsgZm9yICh2YXIgaSBpbiBvYmopIHsgaWYgKGtleXMuaW5kZXhPZihpKSA+PSAwKSBjb250aW51ZTsgaWYgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBpKSkgY29udGludWU7IHRhcmdldFtpXSA9IG9ialtpXTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IGludmFyaWFudCBmcm9tIFwiaW52YXJpYW50XCI7XG5pbXBvcnQgeyBjcmVhdGVMb2NhdGlvbiB9IGZyb20gXCJoaXN0b3J5XCI7XG5cbnZhciBpc01vZGlmaWVkRXZlbnQgPSBmdW5jdGlvbiBpc01vZGlmaWVkRXZlbnQoZXZlbnQpIHtcbiAgcmV0dXJuICEhKGV2ZW50Lm1ldGFLZXkgfHwgZXZlbnQuYWx0S2V5IHx8IGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQuc2hpZnRLZXkpO1xufTtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcmVuZGVyaW5nIGEgaGlzdG9yeS1hd2FyZSA8YT4uXG4gKi9cblxudmFyIExpbmsgPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoTGluaywgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gTGluaygpIHtcbiAgICB2YXIgX3RlbXAsIF90aGlzLCBfcmV0O1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIExpbmspO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgcmV0dXJuIF9yZXQgPSAoX3RlbXAgPSAoX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkpLCBfdGhpcyksIF90aGlzLmhhbmRsZUNsaWNrID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICBpZiAoX3RoaXMucHJvcHMub25DbGljaykgX3RoaXMucHJvcHMub25DbGljayhldmVudCk7XG5cbiAgICAgIGlmICghZXZlbnQuZGVmYXVsdFByZXZlbnRlZCAmJiAvLyBvbkNsaWNrIHByZXZlbnRlZCBkZWZhdWx0XG4gICAgICBldmVudC5idXR0b24gPT09IDAgJiYgLy8gaWdub3JlIGV2ZXJ5dGhpbmcgYnV0IGxlZnQgY2xpY2tzXG4gICAgICAhX3RoaXMucHJvcHMudGFyZ2V0ICYmIC8vIGxldCBicm93c2VyIGhhbmRsZSBcInRhcmdldD1fYmxhbmtcIiBldGMuXG4gICAgICAhaXNNb2RpZmllZEV2ZW50KGV2ZW50KSAvLyBpZ25vcmUgY2xpY2tzIHdpdGggbW9kaWZpZXIga2V5c1xuICAgICAgKSB7XG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgICAgIHZhciBoaXN0b3J5ID0gX3RoaXMuY29udGV4dC5yb3V0ZXIuaGlzdG9yeTtcbiAgICAgICAgICB2YXIgX3RoaXMkcHJvcHMgPSBfdGhpcy5wcm9wcyxcbiAgICAgICAgICAgICAgcmVwbGFjZSA9IF90aGlzJHByb3BzLnJlcGxhY2UsXG4gICAgICAgICAgICAgIHRvID0gX3RoaXMkcHJvcHMudG87XG5cblxuICAgICAgICAgIGlmIChyZXBsYWNlKSB7XG4gICAgICAgICAgICBoaXN0b3J5LnJlcGxhY2UodG8pO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBoaXN0b3J5LnB1c2godG8pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0sIF90ZW1wKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oX3RoaXMsIF9yZXQpO1xuICB9XG5cbiAgTGluay5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICByZXBsYWNlID0gX3Byb3BzLnJlcGxhY2UsXG4gICAgICAgIHRvID0gX3Byb3BzLnRvLFxuICAgICAgICBpbm5lclJlZiA9IF9wcm9wcy5pbm5lclJlZixcbiAgICAgICAgcHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3Byb3BzLCBbXCJyZXBsYWNlXCIsIFwidG9cIiwgXCJpbm5lclJlZlwiXSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcblxuICAgIGludmFyaWFudCh0aGlzLmNvbnRleHQucm91dGVyLCBcIllvdSBzaG91bGQgbm90IHVzZSA8TGluaz4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpO1xuXG4gICAgaW52YXJpYW50KHRvICE9PSB1bmRlZmluZWQsICdZb3UgbXVzdCBzcGVjaWZ5IHRoZSBcInRvXCIgcHJvcGVydHknKTtcblxuICAgIHZhciBoaXN0b3J5ID0gdGhpcy5jb250ZXh0LnJvdXRlci5oaXN0b3J5O1xuXG4gICAgdmFyIGxvY2F0aW9uID0gdHlwZW9mIHRvID09PSBcInN0cmluZ1wiID8gY3JlYXRlTG9jYXRpb24odG8sIG51bGwsIG51bGwsIGhpc3RvcnkubG9jYXRpb24pIDogdG87XG5cbiAgICB2YXIgaHJlZiA9IGhpc3RvcnkuY3JlYXRlSHJlZihsb2NhdGlvbik7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJhXCIsIF9leHRlbmRzKHt9LCBwcm9wcywgeyBvbkNsaWNrOiB0aGlzLmhhbmRsZUNsaWNrLCBocmVmOiBocmVmLCByZWY6IGlubmVyUmVmIH0pKTtcbiAgfTtcblxuICByZXR1cm4gTGluaztcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuTGluay5wcm9wVHlwZXMgPSB7XG4gIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuICB0YXJnZXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHJlcGxhY2U6IFByb3BUeXBlcy5ib29sLFxuICB0bzogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm9iamVjdF0pLmlzUmVxdWlyZWQsXG4gIGlubmVyUmVmOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuZnVuY10pXG59O1xuTGluay5kZWZhdWx0UHJvcHMgPSB7XG4gIHJlcGxhY2U6IGZhbHNlXG59O1xuTGluay5jb250ZXh0VHlwZXMgPSB7XG4gIHJvdXRlcjogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBoaXN0b3J5OiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgcHVzaDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICAgIHJlcGxhY2U6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgICBjcmVhdGVIcmVmOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG4gICAgfSkuaXNSZXF1aXJlZFxuICB9KS5pc1JlcXVpcmVkXG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IExpbms7IiwiZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5pbXBvcnQgd2FybmluZyBmcm9tIFwid2FybmluZ1wiO1xuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IHsgY3JlYXRlTWVtb3J5SGlzdG9yeSBhcyBjcmVhdGVIaXN0b3J5IH0gZnJvbSBcImhpc3RvcnlcIjtcbmltcG9ydCBSb3V0ZXIgZnJvbSBcIi4vUm91dGVyXCI7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCBzdG9yZXMgbG9jYXRpb24gaW4gbWVtb3J5LlxuICovXG5cbnZhciBNZW1vcnlSb3V0ZXIgPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoTWVtb3J5Um91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBNZW1vcnlSb3V0ZXIoKSB7XG4gICAgdmFyIF90ZW1wLCBfdGhpcywgX3JldDtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBNZW1vcnlSb3V0ZXIpO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgcmV0dXJuIF9yZXQgPSAoX3RlbXAgPSAoX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkpLCBfdGhpcyksIF90aGlzLmhpc3RvcnkgPSBjcmVhdGVIaXN0b3J5KF90aGlzLnByb3BzKSwgX3RlbXApLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcywgX3JldCk7XG4gIH1cblxuICBNZW1vcnlSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudFdpbGxNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPE1lbW9yeVJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IE1lbW9yeVJvdXRlciBhcyBSb3V0ZXIgfWAuXCIpO1xuICB9O1xuXG4gIE1lbW9yeVJvdXRlci5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwgeyBoaXN0b3J5OiB0aGlzLmhpc3RvcnksIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuIH0pO1xuICB9O1xuXG4gIHJldHVybiBNZW1vcnlSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbk1lbW9yeVJvdXRlci5wcm9wVHlwZXMgPSB7XG4gIGluaXRpYWxFbnRyaWVzOiBQcm9wVHlwZXMuYXJyYXksXG4gIGluaXRpYWxJbmRleDogUHJvcFR5cGVzLm51bWJlcixcbiAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gIGtleUxlbmd0aDogUHJvcFR5cGVzLm51bWJlcixcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlXG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IE1lbW9yeVJvdXRlcjsiLCIvLyBXcml0dGVuIGluIHRoaXMgcm91bmQgYWJvdXQgd2F5IGZvciBiYWJlbC10cmFuc2Zvcm0taW1wb3J0c1xuaW1wb3J0IE1lbW9yeVJvdXRlciBmcm9tIFwicmVhY3Qtcm91dGVyL2VzL01lbW9yeVJvdXRlclwiO1xuXG5leHBvcnQgZGVmYXVsdCBNZW1vcnlSb3V0ZXI7IiwiaW1wb3J0IHBhdGhUb1JlZ2V4cCBmcm9tIFwicGF0aC10by1yZWdleHBcIjtcblxudmFyIHBhdHRlcm5DYWNoZSA9IHt9O1xudmFyIGNhY2hlTGltaXQgPSAxMDAwMDtcbnZhciBjYWNoZUNvdW50ID0gMDtcblxudmFyIGNvbXBpbGVQYXRoID0gZnVuY3Rpb24gY29tcGlsZVBhdGgocGF0dGVybiwgb3B0aW9ucykge1xuICB2YXIgY2FjaGVLZXkgPSBcIlwiICsgb3B0aW9ucy5lbmQgKyBvcHRpb25zLnN0cmljdCArIG9wdGlvbnMuc2Vuc2l0aXZlO1xuICB2YXIgY2FjaGUgPSBwYXR0ZXJuQ2FjaGVbY2FjaGVLZXldIHx8IChwYXR0ZXJuQ2FjaGVbY2FjaGVLZXldID0ge30pO1xuXG4gIGlmIChjYWNoZVtwYXR0ZXJuXSkgcmV0dXJuIGNhY2hlW3BhdHRlcm5dO1xuXG4gIHZhciBrZXlzID0gW107XG4gIHZhciByZSA9IHBhdGhUb1JlZ2V4cChwYXR0ZXJuLCBrZXlzLCBvcHRpb25zKTtcbiAgdmFyIGNvbXBpbGVkUGF0dGVybiA9IHsgcmU6IHJlLCBrZXlzOiBrZXlzIH07XG5cbiAgaWYgKGNhY2hlQ291bnQgPCBjYWNoZUxpbWl0KSB7XG4gICAgY2FjaGVbcGF0dGVybl0gPSBjb21waWxlZFBhdHRlcm47XG4gICAgY2FjaGVDb3VudCsrO1xuICB9XG5cbiAgcmV0dXJuIGNvbXBpbGVkUGF0dGVybjtcbn07XG5cbi8qKlxuICogUHVibGljIEFQSSBmb3IgbWF0Y2hpbmcgYSBVUkwgcGF0aG5hbWUgdG8gYSBwYXRoIHBhdHRlcm4uXG4gKi9cbnZhciBtYXRjaFBhdGggPSBmdW5jdGlvbiBtYXRjaFBhdGgocGF0aG5hbWUpIHtcbiAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuICB2YXIgcGFyZW50ID0gYXJndW1lbnRzWzJdO1xuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gXCJzdHJpbmdcIikgb3B0aW9ucyA9IHsgcGF0aDogb3B0aW9ucyB9O1xuXG4gIHZhciBfb3B0aW9ucyA9IG9wdGlvbnMsXG4gICAgICBwYXRoID0gX29wdGlvbnMucGF0aCxcbiAgICAgIF9vcHRpb25zJGV4YWN0ID0gX29wdGlvbnMuZXhhY3QsXG4gICAgICBleGFjdCA9IF9vcHRpb25zJGV4YWN0ID09PSB1bmRlZmluZWQgPyBmYWxzZSA6IF9vcHRpb25zJGV4YWN0LFxuICAgICAgX29wdGlvbnMkc3RyaWN0ID0gX29wdGlvbnMuc3RyaWN0LFxuICAgICAgc3RyaWN0ID0gX29wdGlvbnMkc3RyaWN0ID09PSB1bmRlZmluZWQgPyBmYWxzZSA6IF9vcHRpb25zJHN0cmljdCxcbiAgICAgIF9vcHRpb25zJHNlbnNpdGl2ZSA9IF9vcHRpb25zLnNlbnNpdGl2ZSxcbiAgICAgIHNlbnNpdGl2ZSA9IF9vcHRpb25zJHNlbnNpdGl2ZSA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiBfb3B0aW9ucyRzZW5zaXRpdmU7XG5cblxuICBpZiAocGF0aCA9PSBudWxsKSByZXR1cm4gcGFyZW50O1xuXG4gIHZhciBfY29tcGlsZVBhdGggPSBjb21waWxlUGF0aChwYXRoLCB7IGVuZDogZXhhY3QsIHN0cmljdDogc3RyaWN0LCBzZW5zaXRpdmU6IHNlbnNpdGl2ZSB9KSxcbiAgICAgIHJlID0gX2NvbXBpbGVQYXRoLnJlLFxuICAgICAga2V5cyA9IF9jb21waWxlUGF0aC5rZXlzO1xuXG4gIHZhciBtYXRjaCA9IHJlLmV4ZWMocGF0aG5hbWUpO1xuXG4gIGlmICghbWF0Y2gpIHJldHVybiBudWxsO1xuXG4gIHZhciB1cmwgPSBtYXRjaFswXSxcbiAgICAgIHZhbHVlcyA9IG1hdGNoLnNsaWNlKDEpO1xuXG4gIHZhciBpc0V4YWN0ID0gcGF0aG5hbWUgPT09IHVybDtcblxuICBpZiAoZXhhY3QgJiYgIWlzRXhhY3QpIHJldHVybiBudWxsO1xuXG4gIHJldHVybiB7XG4gICAgcGF0aDogcGF0aCwgLy8gdGhlIHBhdGggcGF0dGVybiB1c2VkIHRvIG1hdGNoXG4gICAgdXJsOiBwYXRoID09PSBcIi9cIiAmJiB1cmwgPT09IFwiXCIgPyBcIi9cIiA6IHVybCwgLy8gdGhlIG1hdGNoZWQgcG9ydGlvbiBvZiB0aGUgVVJMXG4gICAgaXNFeGFjdDogaXNFeGFjdCwgLy8gd2hldGhlciBvciBub3Qgd2UgbWF0Y2hlZCBleGFjdGx5XG4gICAgcGFyYW1zOiBrZXlzLnJlZHVjZShmdW5jdGlvbiAobWVtbywga2V5LCBpbmRleCkge1xuICAgICAgbWVtb1trZXkubmFtZV0gPSB2YWx1ZXNbaW5kZXhdO1xuICAgICAgcmV0dXJuIG1lbW87XG4gICAgfSwge30pXG4gIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBtYXRjaFBhdGg7IiwidmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5pbXBvcnQgd2FybmluZyBmcm9tIFwid2FybmluZ1wiO1xuaW1wb3J0IGludmFyaWFudCBmcm9tIFwiaW52YXJpYW50XCI7XG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgbWF0Y2hQYXRoIGZyb20gXCIuL21hdGNoUGF0aFwiO1xuXG52YXIgaXNFbXB0eUNoaWxkcmVuID0gZnVuY3Rpb24gaXNFbXB0eUNoaWxkcmVuKGNoaWxkcmVuKSB7XG4gIHJldHVybiBSZWFjdC5DaGlsZHJlbi5jb3VudChjaGlsZHJlbikgPT09IDA7XG59O1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBtYXRjaGluZyBhIHNpbmdsZSBwYXRoIGFuZCByZW5kZXJpbmcuXG4gKi9cblxudmFyIFJvdXRlID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKFJvdXRlLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBSb3V0ZSgpIHtcbiAgICB2YXIgX3RlbXAsIF90aGlzLCBfcmV0O1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJvdXRlKTtcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIHJldHVybiBfcmV0ID0gKF90ZW1wID0gKF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpKSwgX3RoaXMpLCBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIG1hdGNoOiBfdGhpcy5jb21wdXRlTWF0Y2goX3RoaXMucHJvcHMsIF90aGlzLmNvbnRleHQucm91dGVyKVxuICAgIH0sIF90ZW1wKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oX3RoaXMsIF9yZXQpO1xuICB9XG5cbiAgUm91dGUucHJvdG90eXBlLmdldENoaWxkQ29udGV4dCA9IGZ1bmN0aW9uIGdldENoaWxkQ29udGV4dCgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcm91dGVyOiBfZXh0ZW5kcyh7fSwgdGhpcy5jb250ZXh0LnJvdXRlciwge1xuICAgICAgICByb3V0ZToge1xuICAgICAgICAgIGxvY2F0aW9uOiB0aGlzLnByb3BzLmxvY2F0aW9uIHx8IHRoaXMuY29udGV4dC5yb3V0ZXIucm91dGUubG9jYXRpb24sXG4gICAgICAgICAgbWF0Y2g6IHRoaXMuc3RhdGUubWF0Y2hcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9O1xuICB9O1xuXG4gIFJvdXRlLnByb3RvdHlwZS5jb21wdXRlTWF0Y2ggPSBmdW5jdGlvbiBjb21wdXRlTWF0Y2goX3JlZiwgcm91dGVyKSB7XG4gICAgdmFyIGNvbXB1dGVkTWF0Y2ggPSBfcmVmLmNvbXB1dGVkTWF0Y2gsXG4gICAgICAgIGxvY2F0aW9uID0gX3JlZi5sb2NhdGlvbixcbiAgICAgICAgcGF0aCA9IF9yZWYucGF0aCxcbiAgICAgICAgc3RyaWN0ID0gX3JlZi5zdHJpY3QsXG4gICAgICAgIGV4YWN0ID0gX3JlZi5leGFjdCxcbiAgICAgICAgc2Vuc2l0aXZlID0gX3JlZi5zZW5zaXRpdmU7XG5cbiAgICBpZiAoY29tcHV0ZWRNYXRjaCkgcmV0dXJuIGNvbXB1dGVkTWF0Y2g7IC8vIDxTd2l0Y2g+IGFscmVhZHkgY29tcHV0ZWQgdGhlIG1hdGNoIGZvciB1c1xuXG4gICAgaW52YXJpYW50KHJvdXRlciwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlPiBvciB3aXRoUm91dGVyKCkgb3V0c2lkZSBhIDxSb3V0ZXI+XCIpO1xuXG4gICAgdmFyIHJvdXRlID0gcm91dGVyLnJvdXRlO1xuXG4gICAgdmFyIHBhdGhuYW1lID0gKGxvY2F0aW9uIHx8IHJvdXRlLmxvY2F0aW9uKS5wYXRobmFtZTtcblxuICAgIHJldHVybiBtYXRjaFBhdGgocGF0aG5hbWUsIHsgcGF0aDogcGF0aCwgc3RyaWN0OiBzdHJpY3QsIGV4YWN0OiBleGFjdCwgc2Vuc2l0aXZlOiBzZW5zaXRpdmUgfSwgcm91dGUubWF0Y2gpO1xuICB9O1xuXG4gIFJvdXRlLnByb3RvdHlwZS5jb21wb25lbnRXaWxsTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsTW91bnQoKSB7XG4gICAgd2FybmluZyghKHRoaXMucHJvcHMuY29tcG9uZW50ICYmIHRoaXMucHJvcHMucmVuZGVyKSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIGNvbXBvbmVudD4gYW5kIDxSb3V0ZSByZW5kZXI+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgcmVuZGVyPiB3aWxsIGJlIGlnbm9yZWRcIik7XG5cbiAgICB3YXJuaW5nKCEodGhpcy5wcm9wcy5jb21wb25lbnQgJiYgdGhpcy5wcm9wcy5jaGlsZHJlbiAmJiAhaXNFbXB0eUNoaWxkcmVuKHRoaXMucHJvcHMuY2hpbGRyZW4pKSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIGNvbXBvbmVudD4gYW5kIDxSb3V0ZSBjaGlsZHJlbj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSBjaGlsZHJlbj4gd2lsbCBiZSBpZ25vcmVkXCIpO1xuXG4gICAgd2FybmluZyghKHRoaXMucHJvcHMucmVuZGVyICYmIHRoaXMucHJvcHMuY2hpbGRyZW4gJiYgIWlzRW1wdHlDaGlsZHJlbih0aGlzLnByb3BzLmNoaWxkcmVuKSksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSByZW5kZXI+IGFuZCA8Um91dGUgY2hpbGRyZW4+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgY2hpbGRyZW4+IHdpbGwgYmUgaWdub3JlZFwiKTtcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzLCBuZXh0Q29udGV4dCkge1xuICAgIHdhcm5pbmcoIShuZXh0UHJvcHMubG9jYXRpb24gJiYgIXRoaXMucHJvcHMubG9jYXRpb24pLCAnPFJvdXRlPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIHVuY29udHJvbGxlZCB0byBjb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IGluaXRpYWxseSB1c2VkIG5vIFwibG9jYXRpb25cIiBwcm9wIGFuZCB0aGVuIHByb3ZpZGVkIG9uZSBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpO1xuXG4gICAgd2FybmluZyghKCFuZXh0UHJvcHMubG9jYXRpb24gJiYgdGhpcy5wcm9wcy5sb2NhdGlvbiksICc8Um91dGU+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gY29udHJvbGxlZCB0byB1bmNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgcHJvdmlkZWQgYSBcImxvY2F0aW9uXCIgcHJvcCBpbml0aWFsbHkgYnV0IG9taXR0ZWQgaXQgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKTtcblxuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgbWF0Y2g6IHRoaXMuY29tcHV0ZU1hdGNoKG5leHRQcm9wcywgbmV4dENvbnRleHQucm91dGVyKVxuICAgIH0pO1xuICB9O1xuXG4gIFJvdXRlLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIG1hdGNoID0gdGhpcy5zdGF0ZS5tYXRjaDtcbiAgICB2YXIgX3Byb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgY2hpbGRyZW4gPSBfcHJvcHMuY2hpbGRyZW4sXG4gICAgICAgIGNvbXBvbmVudCA9IF9wcm9wcy5jb21wb25lbnQsXG4gICAgICAgIHJlbmRlciA9IF9wcm9wcy5yZW5kZXI7XG4gICAgdmFyIF9jb250ZXh0JHJvdXRlciA9IHRoaXMuY29udGV4dC5yb3V0ZXIsXG4gICAgICAgIGhpc3RvcnkgPSBfY29udGV4dCRyb3V0ZXIuaGlzdG9yeSxcbiAgICAgICAgcm91dGUgPSBfY29udGV4dCRyb3V0ZXIucm91dGUsXG4gICAgICAgIHN0YXRpY0NvbnRleHQgPSBfY29udGV4dCRyb3V0ZXIuc3RhdGljQ29udGV4dDtcblxuICAgIHZhciBsb2NhdGlvbiA9IHRoaXMucHJvcHMubG9jYXRpb24gfHwgcm91dGUubG9jYXRpb247XG4gICAgdmFyIHByb3BzID0geyBtYXRjaDogbWF0Y2gsIGxvY2F0aW9uOiBsb2NhdGlvbiwgaGlzdG9yeTogaGlzdG9yeSwgc3RhdGljQ29udGV4dDogc3RhdGljQ29udGV4dCB9O1xuXG4gICAgaWYgKGNvbXBvbmVudCkgcmV0dXJuIG1hdGNoID8gUmVhY3QuY3JlYXRlRWxlbWVudChjb21wb25lbnQsIHByb3BzKSA6IG51bGw7XG5cbiAgICBpZiAocmVuZGVyKSByZXR1cm4gbWF0Y2ggPyByZW5kZXIocHJvcHMpIDogbnVsbDtcblxuICAgIGlmICh0eXBlb2YgY2hpbGRyZW4gPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIGNoaWxkcmVuKHByb3BzKTtcblxuICAgIGlmIChjaGlsZHJlbiAmJiAhaXNFbXB0eUNoaWxkcmVuKGNoaWxkcmVuKSkgcmV0dXJuIFJlYWN0LkNoaWxkcmVuLm9ubHkoY2hpbGRyZW4pO1xuXG4gICAgcmV0dXJuIG51bGw7XG4gIH07XG5cbiAgcmV0dXJuIFJvdXRlO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5Sb3V0ZS5wcm9wVHlwZXMgPSB7XG4gIGNvbXB1dGVkTWF0Y2g6IFByb3BUeXBlcy5vYmplY3QsIC8vIHByaXZhdGUsIGZyb20gPFN3aXRjaD5cbiAgcGF0aDogUHJvcFR5cGVzLnN0cmluZyxcbiAgZXhhY3Q6IFByb3BUeXBlcy5ib29sLFxuICBzdHJpY3Q6IFByb3BUeXBlcy5ib29sLFxuICBzZW5zaXRpdmU6IFByb3BUeXBlcy5ib29sLFxuICBjb21wb25lbnQ6IFByb3BUeXBlcy5mdW5jLFxuICByZW5kZXI6IFByb3BUeXBlcy5mdW5jLFxuICBjaGlsZHJlbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5ub2RlXSksXG4gIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0XG59O1xuUm91dGUuY29udGV4dFR5cGVzID0ge1xuICByb3V0ZXI6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgaGlzdG9yeTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIHJvdXRlOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gICAgc3RhdGljQ29udGV4dDogUHJvcFR5cGVzLm9iamVjdFxuICB9KVxufTtcblJvdXRlLmNoaWxkQ29udGV4dFR5cGVzID0ge1xuICByb3V0ZXI6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZFxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBSb3V0ZTsiLCIvLyBXcml0dGVuIGluIHRoaXMgcm91bmQgYWJvdXQgd2F5IGZvciBiYWJlbC10cmFuc2Zvcm0taW1wb3J0c1xuaW1wb3J0IFJvdXRlIGZyb20gXCJyZWFjdC1yb3V0ZXIvZXMvUm91dGVcIjtcblxuZXhwb3J0IGRlZmF1bHQgUm91dGU7IiwidmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxudmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9O1xuXG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMob2JqLCBrZXlzKSB7IHZhciB0YXJnZXQgPSB7fTsgZm9yICh2YXIgaSBpbiBvYmopIHsgaWYgKGtleXMuaW5kZXhPZihpKSA+PSAwKSBjb250aW51ZTsgaWYgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBpKSkgY29udGludWU7IHRhcmdldFtpXSA9IG9ialtpXTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCBSb3V0ZSBmcm9tIFwiLi9Sb3V0ZVwiO1xuaW1wb3J0IExpbmsgZnJvbSBcIi4vTGlua1wiO1xuXG4vKipcbiAqIEEgPExpbms+IHdyYXBwZXIgdGhhdCBrbm93cyBpZiBpdCdzIFwiYWN0aXZlXCIgb3Igbm90LlxuICovXG52YXIgTmF2TGluayA9IGZ1bmN0aW9uIE5hdkxpbmsoX3JlZikge1xuICB2YXIgdG8gPSBfcmVmLnRvLFxuICAgICAgZXhhY3QgPSBfcmVmLmV4YWN0LFxuICAgICAgc3RyaWN0ID0gX3JlZi5zdHJpY3QsXG4gICAgICBsb2NhdGlvbiA9IF9yZWYubG9jYXRpb24sXG4gICAgICBhY3RpdmVDbGFzc05hbWUgPSBfcmVmLmFjdGl2ZUNsYXNzTmFtZSxcbiAgICAgIGNsYXNzTmFtZSA9IF9yZWYuY2xhc3NOYW1lLFxuICAgICAgYWN0aXZlU3R5bGUgPSBfcmVmLmFjdGl2ZVN0eWxlLFxuICAgICAgc3R5bGUgPSBfcmVmLnN0eWxlLFxuICAgICAgZ2V0SXNBY3RpdmUgPSBfcmVmLmlzQWN0aXZlLFxuICAgICAgYXJpYUN1cnJlbnQgPSBfcmVmW1wiYXJpYS1jdXJyZW50XCJdLFxuICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLCBbXCJ0b1wiLCBcImV4YWN0XCIsIFwic3RyaWN0XCIsIFwibG9jYXRpb25cIiwgXCJhY3RpdmVDbGFzc05hbWVcIiwgXCJjbGFzc05hbWVcIiwgXCJhY3RpdmVTdHlsZVwiLCBcInN0eWxlXCIsIFwiaXNBY3RpdmVcIiwgXCJhcmlhLWN1cnJlbnRcIl0pO1xuXG4gIHZhciBwYXRoID0gKHR5cGVvZiB0byA9PT0gXCJ1bmRlZmluZWRcIiA/IFwidW5kZWZpbmVkXCIgOiBfdHlwZW9mKHRvKSkgPT09IFwib2JqZWN0XCIgPyB0by5wYXRobmFtZSA6IHRvO1xuXG4gIC8vIFJlZ2V4IHRha2VuIGZyb206IGh0dHBzOi8vZ2l0aHViLmNvbS9waWxsYXJqcy9wYXRoLXRvLXJlZ2V4cC9ibG9iL21hc3Rlci9pbmRleC5qcyNMMjAyXG4gIHZhciBlc2NhcGVkUGF0aCA9IHBhdGggJiYgcGF0aC5yZXBsYWNlKC8oWy4rKj89XiE6JHt9KClbXFxdfC9cXFxcXSkvZywgXCJcXFxcJDFcIik7XG5cbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHtcbiAgICBwYXRoOiBlc2NhcGVkUGF0aCxcbiAgICBleGFjdDogZXhhY3QsXG4gICAgc3RyaWN0OiBzdHJpY3QsXG4gICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgIGNoaWxkcmVuOiBmdW5jdGlvbiBjaGlsZHJlbihfcmVmMikge1xuICAgICAgdmFyIGxvY2F0aW9uID0gX3JlZjIubG9jYXRpb24sXG4gICAgICAgICAgbWF0Y2ggPSBfcmVmMi5tYXRjaDtcblxuICAgICAgdmFyIGlzQWN0aXZlID0gISEoZ2V0SXNBY3RpdmUgPyBnZXRJc0FjdGl2ZShtYXRjaCwgbG9jYXRpb24pIDogbWF0Y2gpO1xuXG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChMaW5rLCBfZXh0ZW5kcyh7XG4gICAgICAgIHRvOiB0byxcbiAgICAgICAgY2xhc3NOYW1lOiBpc0FjdGl2ZSA/IFtjbGFzc05hbWUsIGFjdGl2ZUNsYXNzTmFtZV0uZmlsdGVyKGZ1bmN0aW9uIChpKSB7XG4gICAgICAgICAgcmV0dXJuIGk7XG4gICAgICAgIH0pLmpvaW4oXCIgXCIpIDogY2xhc3NOYW1lLFxuICAgICAgICBzdHlsZTogaXNBY3RpdmUgPyBfZXh0ZW5kcyh7fSwgc3R5bGUsIGFjdGl2ZVN0eWxlKSA6IHN0eWxlLFxuICAgICAgICBcImFyaWEtY3VycmVudFwiOiBpc0FjdGl2ZSAmJiBhcmlhQ3VycmVudCB8fCBudWxsXG4gICAgICB9LCByZXN0KSk7XG4gICAgfVxuICB9KTtcbn07XG5cbk5hdkxpbmsucHJvcFR5cGVzID0ge1xuICB0bzogTGluay5wcm9wVHlwZXMudG8sXG4gIGV4YWN0OiBQcm9wVHlwZXMuYm9vbCxcbiAgc3RyaWN0OiBQcm9wVHlwZXMuYm9vbCxcbiAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3QsXG4gIGFjdGl2ZUNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBhY3RpdmVTdHlsZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgc3R5bGU6IFByb3BUeXBlcy5vYmplY3QsXG4gIGlzQWN0aXZlOiBQcm9wVHlwZXMuZnVuYyxcbiAgXCJhcmlhLWN1cnJlbnRcIjogUHJvcFR5cGVzLm9uZU9mKFtcInBhZ2VcIiwgXCJzdGVwXCIsIFwibG9jYXRpb25cIiwgXCJkYXRlXCIsIFwidGltZVwiLCBcInRydWVcIl0pXG59O1xuXG5OYXZMaW5rLmRlZmF1bHRQcm9wcyA9IHtcbiAgYWN0aXZlQ2xhc3NOYW1lOiBcImFjdGl2ZVwiLFxuICBcImFyaWEtY3VycmVudFwiOiBcInBhZ2VcIlxufTtcblxuZXhwb3J0IGRlZmF1bHQgTmF2TGluazsiLCJmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSBcImludmFyaWFudFwiO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBwcm9tcHRpbmcgdGhlIHVzZXIgYmVmb3JlIG5hdmlnYXRpbmcgYXdheVxuICogZnJvbSBhIHNjcmVlbiB3aXRoIGEgY29tcG9uZW50LlxuICovXG5cbnZhciBQcm9tcHQgPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoUHJvbXB0LCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBQcm9tcHQoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFByb21wdCk7XG5cbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX1JlYWN0JENvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfVxuXG4gIFByb21wdC5wcm90b3R5cGUuZW5hYmxlID0gZnVuY3Rpb24gZW5hYmxlKG1lc3NhZ2UpIHtcbiAgICBpZiAodGhpcy51bmJsb2NrKSB0aGlzLnVuYmxvY2soKTtcblxuICAgIHRoaXMudW5ibG9jayA9IHRoaXMuY29udGV4dC5yb3V0ZXIuaGlzdG9yeS5ibG9jayhtZXNzYWdlKTtcbiAgfTtcblxuICBQcm9tcHQucHJvdG90eXBlLmRpc2FibGUgPSBmdW5jdGlvbiBkaXNhYmxlKCkge1xuICAgIGlmICh0aGlzLnVuYmxvY2spIHtcbiAgICAgIHRoaXMudW5ibG9jaygpO1xuICAgICAgdGhpcy51bmJsb2NrID0gbnVsbDtcbiAgICB9XG4gIH07XG5cbiAgUHJvbXB0LnByb3RvdHlwZS5jb21wb25lbnRXaWxsTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsTW91bnQoKSB7XG4gICAgaW52YXJpYW50KHRoaXMuY29udGV4dC5yb3V0ZXIsIFwiWW91IHNob3VsZCBub3QgdXNlIDxQcm9tcHQ+IG91dHNpZGUgYSA8Um91dGVyPlwiKTtcblxuICAgIGlmICh0aGlzLnByb3BzLndoZW4pIHRoaXMuZW5hYmxlKHRoaXMucHJvcHMubWVzc2FnZSk7XG4gIH07XG5cbiAgUHJvbXB0LnByb3RvdHlwZS5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICBpZiAobmV4dFByb3BzLndoZW4pIHtcbiAgICAgIGlmICghdGhpcy5wcm9wcy53aGVuIHx8IHRoaXMucHJvcHMubWVzc2FnZSAhPT0gbmV4dFByb3BzLm1lc3NhZ2UpIHRoaXMuZW5hYmxlKG5leHRQcm9wcy5tZXNzYWdlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5kaXNhYmxlKCk7XG4gICAgfVxuICB9O1xuXG4gIFByb21wdC5wcm90b3R5cGUuY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICB0aGlzLmRpc2FibGUoKTtcbiAgfTtcblxuICBQcm9tcHQucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfTtcblxuICByZXR1cm4gUHJvbXB0O1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5Qcm9tcHQucHJvcFR5cGVzID0ge1xuICB3aGVuOiBQcm9wVHlwZXMuYm9vbCxcbiAgbWVzc2FnZTogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5zdHJpbmddKS5pc1JlcXVpcmVkXG59O1xuUHJvbXB0LmRlZmF1bHRQcm9wcyA9IHtcbiAgd2hlbjogdHJ1ZVxufTtcblByb21wdC5jb250ZXh0VHlwZXMgPSB7XG4gIHJvdXRlcjogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBoaXN0b3J5OiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgYmxvY2s6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbiAgICB9KS5pc1JlcXVpcmVkXG4gIH0pLmlzUmVxdWlyZWRcbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgUHJvbXB0OyIsIi8vIFdyaXR0ZW4gaW4gdGhpcyByb3VuZCBhYm91dCB3YXkgZm9yIGJhYmVsLXRyYW5zZm9ybS1pbXBvcnRzXG5pbXBvcnQgUHJvbXB0IGZyb20gXCJyZWFjdC1yb3V0ZXIvZXMvUHJvbXB0XCI7XG5cbmV4cG9ydCBkZWZhdWx0IFByb21wdDsiLCJpbXBvcnQgcGF0aFRvUmVnZXhwIGZyb20gXCJwYXRoLXRvLXJlZ2V4cFwiO1xuXG52YXIgcGF0dGVybkNhY2hlID0ge307XG52YXIgY2FjaGVMaW1pdCA9IDEwMDAwO1xudmFyIGNhY2hlQ291bnQgPSAwO1xuXG52YXIgY29tcGlsZUdlbmVyYXRvciA9IGZ1bmN0aW9uIGNvbXBpbGVHZW5lcmF0b3IocGF0dGVybikge1xuICB2YXIgY2FjaGVLZXkgPSBwYXR0ZXJuO1xuICB2YXIgY2FjaGUgPSBwYXR0ZXJuQ2FjaGVbY2FjaGVLZXldIHx8IChwYXR0ZXJuQ2FjaGVbY2FjaGVLZXldID0ge30pO1xuXG4gIGlmIChjYWNoZVtwYXR0ZXJuXSkgcmV0dXJuIGNhY2hlW3BhdHRlcm5dO1xuXG4gIHZhciBjb21waWxlZEdlbmVyYXRvciA9IHBhdGhUb1JlZ2V4cC5jb21waWxlKHBhdHRlcm4pO1xuXG4gIGlmIChjYWNoZUNvdW50IDwgY2FjaGVMaW1pdCkge1xuICAgIGNhY2hlW3BhdHRlcm5dID0gY29tcGlsZWRHZW5lcmF0b3I7XG4gICAgY2FjaGVDb3VudCsrO1xuICB9XG5cbiAgcmV0dXJuIGNvbXBpbGVkR2VuZXJhdG9yO1xufTtcblxuLyoqXG4gKiBQdWJsaWMgQVBJIGZvciBnZW5lcmF0aW5nIGEgVVJMIHBhdGhuYW1lIGZyb20gYSBwYXR0ZXJuIGFuZCBwYXJhbWV0ZXJzLlxuICovXG52YXIgZ2VuZXJhdGVQYXRoID0gZnVuY3Rpb24gZ2VuZXJhdGVQYXRoKCkge1xuICB2YXIgcGF0dGVybiA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogXCIvXCI7XG4gIHZhciBwYXJhbXMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuXG4gIGlmIChwYXR0ZXJuID09PSBcIi9cIikge1xuICAgIHJldHVybiBwYXR0ZXJuO1xuICB9XG4gIHZhciBnZW5lcmF0b3IgPSBjb21waWxlR2VuZXJhdG9yKHBhdHRlcm4pO1xuICByZXR1cm4gZ2VuZXJhdG9yKHBhcmFtcywgeyBwcmV0dHk6IHRydWUgfSk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBnZW5lcmF0ZVBhdGg7IiwidmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgd2FybmluZyBmcm9tIFwid2FybmluZ1wiO1xuaW1wb3J0IGludmFyaWFudCBmcm9tIFwiaW52YXJpYW50XCI7XG5pbXBvcnQgeyBjcmVhdGVMb2NhdGlvbiwgbG9jYXRpb25zQXJlRXF1YWwgfSBmcm9tIFwiaGlzdG9yeVwiO1xuaW1wb3J0IGdlbmVyYXRlUGF0aCBmcm9tIFwiLi9nZW5lcmF0ZVBhdGhcIjtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgdXBkYXRpbmcgdGhlIGxvY2F0aW9uIHByb2dyYW1tYXRpY2FsbHlcbiAqIHdpdGggYSBjb21wb25lbnQuXG4gKi9cblxudmFyIFJlZGlyZWN0ID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKFJlZGlyZWN0LCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBSZWRpcmVjdCgpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUmVkaXJlY3QpO1xuXG4gICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH1cblxuICBSZWRpcmVjdC5wcm90b3R5cGUuaXNTdGF0aWMgPSBmdW5jdGlvbiBpc1N0YXRpYygpIHtcbiAgICByZXR1cm4gdGhpcy5jb250ZXh0LnJvdXRlciAmJiB0aGlzLmNvbnRleHQucm91dGVyLnN0YXRpY0NvbnRleHQ7XG4gIH07XG5cbiAgUmVkaXJlY3QucHJvdG90eXBlLmNvbXBvbmVudFdpbGxNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICBpbnZhcmlhbnQodGhpcy5jb250ZXh0LnJvdXRlciwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJlZGlyZWN0PiBvdXRzaWRlIGEgPFJvdXRlcj5cIik7XG5cbiAgICBpZiAodGhpcy5pc1N0YXRpYygpKSB0aGlzLnBlcmZvcm0oKTtcbiAgfTtcblxuICBSZWRpcmVjdC5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICBpZiAoIXRoaXMuaXNTdGF0aWMoKSkgdGhpcy5wZXJmb3JtKCk7XG4gIH07XG5cbiAgUmVkaXJlY3QucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMpIHtcbiAgICB2YXIgcHJldlRvID0gY3JlYXRlTG9jYXRpb24ocHJldlByb3BzLnRvKTtcbiAgICB2YXIgbmV4dFRvID0gY3JlYXRlTG9jYXRpb24odGhpcy5wcm9wcy50byk7XG5cbiAgICBpZiAobG9jYXRpb25zQXJlRXF1YWwocHJldlRvLCBuZXh0VG8pKSB7XG4gICAgICB3YXJuaW5nKGZhbHNlLCBcIllvdSB0cmllZCB0byByZWRpcmVjdCB0byB0aGUgc2FtZSByb3V0ZSB5b3UncmUgY3VycmVudGx5IG9uOiBcIiArIChcIlxcXCJcIiArIG5leHRUby5wYXRobmFtZSArIG5leHRUby5zZWFyY2ggKyBcIlxcXCJcIikpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMucGVyZm9ybSgpO1xuICB9O1xuXG4gIFJlZGlyZWN0LnByb3RvdHlwZS5jb21wdXRlVG8gPSBmdW5jdGlvbiBjb21wdXRlVG8oX3JlZikge1xuICAgIHZhciBjb21wdXRlZE1hdGNoID0gX3JlZi5jb21wdXRlZE1hdGNoLFxuICAgICAgICB0byA9IF9yZWYudG87XG5cbiAgICBpZiAoY29tcHV0ZWRNYXRjaCkge1xuICAgICAgaWYgKHR5cGVvZiB0byA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICByZXR1cm4gZ2VuZXJhdGVQYXRoKHRvLCBjb21wdXRlZE1hdGNoLnBhcmFtcyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gX2V4dGVuZHMoe30sIHRvLCB7XG4gICAgICAgICAgcGF0aG5hbWU6IGdlbmVyYXRlUGF0aCh0by5wYXRobmFtZSwgY29tcHV0ZWRNYXRjaC5wYXJhbXMpXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0bztcbiAgfTtcblxuICBSZWRpcmVjdC5wcm90b3R5cGUucGVyZm9ybSA9IGZ1bmN0aW9uIHBlcmZvcm0oKSB7XG4gICAgdmFyIGhpc3RvcnkgPSB0aGlzLmNvbnRleHQucm91dGVyLmhpc3Rvcnk7XG4gICAgdmFyIHB1c2ggPSB0aGlzLnByb3BzLnB1c2g7XG5cbiAgICB2YXIgdG8gPSB0aGlzLmNvbXB1dGVUbyh0aGlzLnByb3BzKTtcblxuICAgIGlmIChwdXNoKSB7XG4gICAgICBoaXN0b3J5LnB1c2godG8pO1xuICAgIH0gZWxzZSB7XG4gICAgICBoaXN0b3J5LnJlcGxhY2UodG8pO1xuICAgIH1cbiAgfTtcblxuICBSZWRpcmVjdC5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBudWxsO1xuICB9O1xuXG4gIHJldHVybiBSZWRpcmVjdDtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuUmVkaXJlY3QucHJvcFR5cGVzID0ge1xuICBjb21wdXRlZE1hdGNoOiBQcm9wVHlwZXMub2JqZWN0LCAvLyBwcml2YXRlLCBmcm9tIDxTd2l0Y2g+XG4gIHB1c2g6IFByb3BUeXBlcy5ib29sLFxuICBmcm9tOiBQcm9wVHlwZXMuc3RyaW5nLFxuICB0bzogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm9iamVjdF0pLmlzUmVxdWlyZWRcbn07XG5SZWRpcmVjdC5kZWZhdWx0UHJvcHMgPSB7XG4gIHB1c2g6IGZhbHNlXG59O1xuUmVkaXJlY3QuY29udGV4dFR5cGVzID0ge1xuICByb3V0ZXI6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgaGlzdG9yeTogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICAgIHB1c2g6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgICByZXBsYWNlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG4gICAgfSkuaXNSZXF1aXJlZCxcbiAgICBzdGF0aWNDb250ZXh0OiBQcm9wVHlwZXMub2JqZWN0XG4gIH0pLmlzUmVxdWlyZWRcbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgUmVkaXJlY3Q7IiwiLy8gV3JpdHRlbiBpbiB0aGlzIHJvdW5kIGFib3V0IHdheSBmb3IgYmFiZWwtdHJhbnNmb3JtLWltcG9ydHNcbmltcG9ydCBSZWRpcmVjdCBmcm9tIFwicmVhY3Qtcm91dGVyL2VzL1JlZGlyZWN0XCI7XG5cbmV4cG9ydCBkZWZhdWx0IFJlZGlyZWN0OyIsInZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhvYmosIGtleXMpIHsgdmFyIHRhcmdldCA9IHt9OyBmb3IgKHZhciBpIGluIG9iaikgeyBpZiAoa2V5cy5pbmRleE9mKGkpID49IDApIGNvbnRpbnVlOyBpZiAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGkpKSBjb250aW51ZTsgdGFyZ2V0W2ldID0gb2JqW2ldOyB9IHJldHVybiB0YXJnZXQ7IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5pbXBvcnQgd2FybmluZyBmcm9tIFwid2FybmluZ1wiO1xuaW1wb3J0IGludmFyaWFudCBmcm9tIFwiaW52YXJpYW50XCI7XG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgeyBjcmVhdGVMb2NhdGlvbiwgY3JlYXRlUGF0aCB9IGZyb20gXCJoaXN0b3J5XCI7XG5pbXBvcnQgUm91dGVyIGZyb20gXCIuL1JvdXRlclwiO1xuXG52YXIgYWRkTGVhZGluZ1NsYXNoID0gZnVuY3Rpb24gYWRkTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSBcIi9cIiA/IHBhdGggOiBcIi9cIiArIHBhdGg7XG59O1xuXG52YXIgYWRkQmFzZW5hbWUgPSBmdW5jdGlvbiBhZGRCYXNlbmFtZShiYXNlbmFtZSwgbG9jYXRpb24pIHtcbiAgaWYgKCFiYXNlbmFtZSkgcmV0dXJuIGxvY2F0aW9uO1xuXG4gIHJldHVybiBfZXh0ZW5kcyh7fSwgbG9jYXRpb24sIHtcbiAgICBwYXRobmFtZTogYWRkTGVhZGluZ1NsYXNoKGJhc2VuYW1lKSArIGxvY2F0aW9uLnBhdGhuYW1lXG4gIH0pO1xufTtcblxudmFyIHN0cmlwQmFzZW5hbWUgPSBmdW5jdGlvbiBzdHJpcEJhc2VuYW1lKGJhc2VuYW1lLCBsb2NhdGlvbikge1xuICBpZiAoIWJhc2VuYW1lKSByZXR1cm4gbG9jYXRpb247XG5cbiAgdmFyIGJhc2UgPSBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUpO1xuXG4gIGlmIChsb2NhdGlvbi5wYXRobmFtZS5pbmRleE9mKGJhc2UpICE9PSAwKSByZXR1cm4gbG9jYXRpb247XG5cbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBsb2NhdGlvbiwge1xuICAgIHBhdGhuYW1lOiBsb2NhdGlvbi5wYXRobmFtZS5zdWJzdHIoYmFzZS5sZW5ndGgpXG4gIH0pO1xufTtcblxudmFyIGNyZWF0ZVVSTCA9IGZ1bmN0aW9uIGNyZWF0ZVVSTChsb2NhdGlvbikge1xuICByZXR1cm4gdHlwZW9mIGxvY2F0aW9uID09PSBcInN0cmluZ1wiID8gbG9jYXRpb24gOiBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbn07XG5cbnZhciBzdGF0aWNIYW5kbGVyID0gZnVuY3Rpb24gc3RhdGljSGFuZGxlcihtZXRob2ROYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgaW52YXJpYW50KGZhbHNlLCBcIllvdSBjYW5ub3QgJXMgd2l0aCA8U3RhdGljUm91dGVyPlwiLCBtZXRob2ROYW1lKTtcbiAgfTtcbn07XG5cbnZhciBub29wID0gZnVuY3Rpb24gbm9vcCgpIHt9O1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgdG9wLWxldmVsIEFQSSBmb3IgYSBcInN0YXRpY1wiIDxSb3V0ZXI+LCBzby1jYWxsZWQgYmVjYXVzZSBpdFxuICogY2FuJ3QgYWN0dWFsbHkgY2hhbmdlIHRoZSBjdXJyZW50IGxvY2F0aW9uLiBJbnN0ZWFkLCBpdCBqdXN0IHJlY29yZHNcbiAqIGxvY2F0aW9uIGNoYW5nZXMgaW4gYSBjb250ZXh0IG9iamVjdC4gVXNlZnVsIG1haW5seSBpbiB0ZXN0aW5nIGFuZFxuICogc2VydmVyLXJlbmRlcmluZyBzY2VuYXJpb3MuXG4gKi9cblxudmFyIFN0YXRpY1JvdXRlciA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhTdGF0aWNSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFN0YXRpY1JvdXRlcigpIHtcbiAgICB2YXIgX3RlbXAsIF90aGlzLCBfcmV0O1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFN0YXRpY1JvdXRlcik7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICByZXR1cm4gX3JldCA9IChfdGVtcCA9IChfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSksIF90aGlzKSwgX3RoaXMuY3JlYXRlSHJlZiA9IGZ1bmN0aW9uIChwYXRoKSB7XG4gICAgICByZXR1cm4gYWRkTGVhZGluZ1NsYXNoKF90aGlzLnByb3BzLmJhc2VuYW1lICsgY3JlYXRlVVJMKHBhdGgpKTtcbiAgICB9LCBfdGhpcy5oYW5kbGVQdXNoID0gZnVuY3Rpb24gKGxvY2F0aW9uKSB7XG4gICAgICB2YXIgX3RoaXMkcHJvcHMgPSBfdGhpcy5wcm9wcyxcbiAgICAgICAgICBiYXNlbmFtZSA9IF90aGlzJHByb3BzLmJhc2VuYW1lLFxuICAgICAgICAgIGNvbnRleHQgPSBfdGhpcyRwcm9wcy5jb250ZXh0O1xuXG4gICAgICBjb250ZXh0LmFjdGlvbiA9IFwiUFVTSFwiO1xuICAgICAgY29udGV4dC5sb2NhdGlvbiA9IGFkZEJhc2VuYW1lKGJhc2VuYW1lLCBjcmVhdGVMb2NhdGlvbihsb2NhdGlvbikpO1xuICAgICAgY29udGV4dC51cmwgPSBjcmVhdGVVUkwoY29udGV4dC5sb2NhdGlvbik7XG4gICAgfSwgX3RoaXMuaGFuZGxlUmVwbGFjZSA9IGZ1bmN0aW9uIChsb2NhdGlvbikge1xuICAgICAgdmFyIF90aGlzJHByb3BzMiA9IF90aGlzLnByb3BzLFxuICAgICAgICAgIGJhc2VuYW1lID0gX3RoaXMkcHJvcHMyLmJhc2VuYW1lLFxuICAgICAgICAgIGNvbnRleHQgPSBfdGhpcyRwcm9wczIuY29udGV4dDtcblxuICAgICAgY29udGV4dC5hY3Rpb24gPSBcIlJFUExBQ0VcIjtcbiAgICAgIGNvbnRleHQubG9jYXRpb24gPSBhZGRCYXNlbmFtZShiYXNlbmFtZSwgY3JlYXRlTG9jYXRpb24obG9jYXRpb24pKTtcbiAgICAgIGNvbnRleHQudXJsID0gY3JlYXRlVVJMKGNvbnRleHQubG9jYXRpb24pO1xuICAgIH0sIF90aGlzLmhhbmRsZUxpc3RlbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBub29wO1xuICAgIH0sIF90aGlzLmhhbmRsZUJsb2NrID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIG5vb3A7XG4gICAgfSwgX3RlbXApLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcywgX3JldCk7XG4gIH1cblxuICBTdGF0aWNSb3V0ZXIucHJvdG90eXBlLmdldENoaWxkQ29udGV4dCA9IGZ1bmN0aW9uIGdldENoaWxkQ29udGV4dCgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcm91dGVyOiB7XG4gICAgICAgIHN0YXRpY0NvbnRleHQ6IHRoaXMucHJvcHMuY29udGV4dFxuICAgICAgfVxuICAgIH07XG4gIH07XG5cbiAgU3RhdGljUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnRXaWxsTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsTW91bnQoKSB7XG4gICAgd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxTdGF0aWNSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBTdGF0aWNSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKTtcbiAgfTtcblxuICBTdGF0aWNSb3V0ZXIucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3Byb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgYmFzZW5hbWUgPSBfcHJvcHMuYmFzZW5hbWUsXG4gICAgICAgIGNvbnRleHQgPSBfcHJvcHMuY29udGV4dCxcbiAgICAgICAgbG9jYXRpb24gPSBfcHJvcHMubG9jYXRpb24sXG4gICAgICAgIHByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF9wcm9wcywgW1wiYmFzZW5hbWVcIiwgXCJjb250ZXh0XCIsIFwibG9jYXRpb25cIl0pO1xuXG4gICAgdmFyIGhpc3RvcnkgPSB7XG4gICAgICBjcmVhdGVIcmVmOiB0aGlzLmNyZWF0ZUhyZWYsXG4gICAgICBhY3Rpb246IFwiUE9QXCIsXG4gICAgICBsb2NhdGlvbjogc3RyaXBCYXNlbmFtZShiYXNlbmFtZSwgY3JlYXRlTG9jYXRpb24obG9jYXRpb24pKSxcbiAgICAgIHB1c2g6IHRoaXMuaGFuZGxlUHVzaCxcbiAgICAgIHJlcGxhY2U6IHRoaXMuaGFuZGxlUmVwbGFjZSxcbiAgICAgIGdvOiBzdGF0aWNIYW5kbGVyKFwiZ29cIiksXG4gICAgICBnb0JhY2s6IHN0YXRpY0hhbmRsZXIoXCJnb0JhY2tcIiksXG4gICAgICBnb0ZvcndhcmQ6IHN0YXRpY0hhbmRsZXIoXCJnb0ZvcndhcmRcIiksXG4gICAgICBsaXN0ZW46IHRoaXMuaGFuZGxlTGlzdGVuLFxuICAgICAgYmxvY2s6IHRoaXMuaGFuZGxlQmxvY2tcbiAgICB9O1xuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHsgaGlzdG9yeTogaGlzdG9yeSB9KSk7XG4gIH07XG5cbiAgcmV0dXJuIFN0YXRpY1JvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuU3RhdGljUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGNvbnRleHQ6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgbG9jYXRpb246IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3RdKVxufTtcblN0YXRpY1JvdXRlci5kZWZhdWx0UHJvcHMgPSB7XG4gIGJhc2VuYW1lOiBcIlwiLFxuICBsb2NhdGlvbjogXCIvXCJcbn07XG5TdGF0aWNSb3V0ZXIuY2hpbGRDb250ZXh0VHlwZXMgPSB7XG4gIHJvdXRlcjogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkXG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IFN0YXRpY1JvdXRlcjsiLCIvLyBXcml0dGVuIGluIHRoaXMgcm91bmQgYWJvdXQgd2F5IGZvciBiYWJlbC10cmFuc2Zvcm0taW1wb3J0c1xuaW1wb3J0IFN0YXRpY1JvdXRlciBmcm9tIFwicmVhY3Qtcm91dGVyL2VzL1N0YXRpY1JvdXRlclwiO1xuXG5leHBvcnQgZGVmYXVsdCBTdGF0aWNSb3V0ZXI7IiwiZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgd2FybmluZyBmcm9tIFwid2FybmluZ1wiO1xuaW1wb3J0IGludmFyaWFudCBmcm9tIFwiaW52YXJpYW50XCI7XG5pbXBvcnQgbWF0Y2hQYXRoIGZyb20gXCIuL21hdGNoUGF0aFwiO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciByZW5kZXJpbmcgdGhlIGZpcnN0IDxSb3V0ZT4gdGhhdCBtYXRjaGVzLlxuICovXG5cbnZhciBTd2l0Y2ggPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoU3dpdGNoLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBTd2l0Y2goKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFN3aXRjaCk7XG5cbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX1JlYWN0JENvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfVxuXG4gIFN3aXRjaC5wcm90b3R5cGUuY29tcG9uZW50V2lsbE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgIGludmFyaWFudCh0aGlzLmNvbnRleHQucm91dGVyLCBcIllvdSBzaG91bGQgbm90IHVzZSA8U3dpdGNoPiBvdXRzaWRlIGEgPFJvdXRlcj5cIik7XG4gIH07XG5cbiAgU3dpdGNoLnByb3RvdHlwZS5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICB3YXJuaW5nKCEobmV4dFByb3BzLmxvY2F0aW9uICYmICF0aGlzLnByb3BzLmxvY2F0aW9uKSwgJzxTd2l0Y2g+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gdW5jb250cm9sbGVkIHRvIGNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgaW5pdGlhbGx5IHVzZWQgbm8gXCJsb2NhdGlvblwiIHByb3AgYW5kIHRoZW4gcHJvdmlkZWQgb25lIG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJyk7XG5cbiAgICB3YXJuaW5nKCEoIW5leHRQcm9wcy5sb2NhdGlvbiAmJiB0aGlzLnByb3BzLmxvY2F0aW9uKSwgJzxTd2l0Y2g+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gY29udHJvbGxlZCB0byB1bmNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgcHJvdmlkZWQgYSBcImxvY2F0aW9uXCIgcHJvcCBpbml0aWFsbHkgYnV0IG9taXR0ZWQgaXQgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKTtcbiAgfTtcblxuICBTd2l0Y2gucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgcm91dGUgPSB0aGlzLmNvbnRleHQucm91dGVyLnJvdXRlO1xuICAgIHZhciBjaGlsZHJlbiA9IHRoaXMucHJvcHMuY2hpbGRyZW47XG5cbiAgICB2YXIgbG9jYXRpb24gPSB0aGlzLnByb3BzLmxvY2F0aW9uIHx8IHJvdXRlLmxvY2F0aW9uO1xuXG4gICAgdmFyIG1hdGNoID0gdm9pZCAwLFxuICAgICAgICBjaGlsZCA9IHZvaWQgMDtcbiAgICBSZWFjdC5DaGlsZHJlbi5mb3JFYWNoKGNoaWxkcmVuLCBmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgICAgaWYgKG1hdGNoID09IG51bGwgJiYgUmVhY3QuaXNWYWxpZEVsZW1lbnQoZWxlbWVudCkpIHtcbiAgICAgICAgdmFyIF9lbGVtZW50JHByb3BzID0gZWxlbWVudC5wcm9wcyxcbiAgICAgICAgICAgIHBhdGhQcm9wID0gX2VsZW1lbnQkcHJvcHMucGF0aCxcbiAgICAgICAgICAgIGV4YWN0ID0gX2VsZW1lbnQkcHJvcHMuZXhhY3QsXG4gICAgICAgICAgICBzdHJpY3QgPSBfZWxlbWVudCRwcm9wcy5zdHJpY3QsXG4gICAgICAgICAgICBzZW5zaXRpdmUgPSBfZWxlbWVudCRwcm9wcy5zZW5zaXRpdmUsXG4gICAgICAgICAgICBmcm9tID0gX2VsZW1lbnQkcHJvcHMuZnJvbTtcblxuICAgICAgICB2YXIgcGF0aCA9IHBhdGhQcm9wIHx8IGZyb207XG5cbiAgICAgICAgY2hpbGQgPSBlbGVtZW50O1xuICAgICAgICBtYXRjaCA9IG1hdGNoUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgeyBwYXRoOiBwYXRoLCBleGFjdDogZXhhY3QsIHN0cmljdDogc3RyaWN0LCBzZW5zaXRpdmU6IHNlbnNpdGl2ZSB9LCByb3V0ZS5tYXRjaCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gbWF0Y2ggPyBSZWFjdC5jbG9uZUVsZW1lbnQoY2hpbGQsIHsgbG9jYXRpb246IGxvY2F0aW9uLCBjb21wdXRlZE1hdGNoOiBtYXRjaCB9KSA6IG51bGw7XG4gIH07XG5cbiAgcmV0dXJuIFN3aXRjaDtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuU3dpdGNoLmNvbnRleHRUeXBlcyA9IHtcbiAgcm91dGVyOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIHJvdXRlOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWRcbiAgfSkuaXNSZXF1aXJlZFxufTtcblN3aXRjaC5wcm9wVHlwZXMgPSB7XG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3Rcbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgU3dpdGNoOyIsIi8vIFdyaXR0ZW4gaW4gdGhpcyByb3VuZCBhYm91dCB3YXkgZm9yIGJhYmVsLXRyYW5zZm9ybS1pbXBvcnRzXG5pbXBvcnQgU3dpdGNoIGZyb20gXCJyZWFjdC1yb3V0ZXIvZXMvU3dpdGNoXCI7XG5cbmV4cG9ydCBkZWZhdWx0IFN3aXRjaDsiLCIvLyBXcml0dGVuIGluIHRoaXMgcm91bmQgYWJvdXQgd2F5IGZvciBiYWJlbC10cmFuc2Zvcm0taW1wb3J0c1xuaW1wb3J0IGdlbmVyYXRlUGF0aCBmcm9tIFwicmVhY3Qtcm91dGVyL2VzL2dlbmVyYXRlUGF0aFwiO1xuXG5leHBvcnQgZGVmYXVsdCBnZW5lcmF0ZVBhdGg7IiwiLy8gV3JpdHRlbiBpbiB0aGlzIHJvdW5kIGFib3V0IHdheSBmb3IgYmFiZWwtdHJhbnNmb3JtLWltcG9ydHNcbmltcG9ydCBtYXRjaFBhdGggZnJvbSBcInJlYWN0LXJvdXRlci9lcy9tYXRjaFBhdGhcIjtcblxuZXhwb3J0IGRlZmF1bHQgbWF0Y2hQYXRoOyIsInZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhvYmosIGtleXMpIHsgdmFyIHRhcmdldCA9IHt9OyBmb3IgKHZhciBpIGluIG9iaikgeyBpZiAoa2V5cy5pbmRleE9mKGkpID49IDApIGNvbnRpbnVlOyBpZiAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGkpKSBjb250aW51ZTsgdGFyZ2V0W2ldID0gb2JqW2ldOyB9IHJldHVybiB0YXJnZXQ7IH1cblxuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IGhvaXN0U3RhdGljcyBmcm9tIFwiaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3NcIjtcbmltcG9ydCBSb3V0ZSBmcm9tIFwiLi9Sb3V0ZVwiO1xuXG4vKipcbiAqIEEgcHVibGljIGhpZ2hlci1vcmRlciBjb21wb25lbnQgdG8gYWNjZXNzIHRoZSBpbXBlcmF0aXZlIEFQSVxuICovXG52YXIgd2l0aFJvdXRlciA9IGZ1bmN0aW9uIHdpdGhSb3V0ZXIoQ29tcG9uZW50KSB7XG4gIHZhciBDID0gZnVuY3Rpb24gQyhwcm9wcykge1xuICAgIHZhciB3cmFwcGVkQ29tcG9uZW50UmVmID0gcHJvcHMud3JhcHBlZENvbXBvbmVudFJlZixcbiAgICAgICAgcmVtYWluaW5nUHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMocHJvcHMsIFtcIndyYXBwZWRDb21wb25lbnRSZWZcIl0pO1xuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHtcbiAgICAgIGNoaWxkcmVuOiBmdW5jdGlvbiBjaGlsZHJlbihyb3V0ZUNvbXBvbmVudFByb3BzKSB7XG4gICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KENvbXBvbmVudCwgX2V4dGVuZHMoe30sIHJlbWFpbmluZ1Byb3BzLCByb3V0ZUNvbXBvbmVudFByb3BzLCB7XG4gICAgICAgICAgcmVmOiB3cmFwcGVkQ29tcG9uZW50UmVmXG4gICAgICAgIH0pKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICBDLmRpc3BsYXlOYW1lID0gXCJ3aXRoUm91dGVyKFwiICsgKENvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBDb21wb25lbnQubmFtZSkgKyBcIilcIjtcbiAgQy5XcmFwcGVkQ29tcG9uZW50ID0gQ29tcG9uZW50O1xuICBDLnByb3BUeXBlcyA9IHtcbiAgICB3cmFwcGVkQ29tcG9uZW50UmVmOiBQcm9wVHlwZXMuZnVuY1xuICB9O1xuXG4gIHJldHVybiBob2lzdFN0YXRpY3MoQywgQ29tcG9uZW50KTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhSb3V0ZXI7IiwiLy8gV3JpdHRlbiBpbiB0aGlzIHJvdW5kIGFib3V0IHdheSBmb3IgYmFiZWwtdHJhbnNmb3JtLWltcG9ydHNcbmltcG9ydCB3aXRoUm91dGVyIGZyb20gXCJyZWFjdC1yb3V0ZXIvZXMvd2l0aFJvdXRlclwiO1xuXG5leHBvcnQgZGVmYXVsdCB3aXRoUm91dGVyOyIsImltcG9ydCBfQnJvd3NlclJvdXRlciBmcm9tIFwiLi9Ccm93c2VyUm91dGVyXCI7XG5leHBvcnQgeyBfQnJvd3NlclJvdXRlciBhcyBCcm93c2VyUm91dGVyIH07XG5pbXBvcnQgX0hhc2hSb3V0ZXIgZnJvbSBcIi4vSGFzaFJvdXRlclwiO1xuZXhwb3J0IHsgX0hhc2hSb3V0ZXIgYXMgSGFzaFJvdXRlciB9O1xuaW1wb3J0IF9MaW5rIGZyb20gXCIuL0xpbmtcIjtcbmV4cG9ydCB7IF9MaW5rIGFzIExpbmsgfTtcbmltcG9ydCBfTWVtb3J5Um91dGVyIGZyb20gXCIuL01lbW9yeVJvdXRlclwiO1xuZXhwb3J0IHsgX01lbW9yeVJvdXRlciBhcyBNZW1vcnlSb3V0ZXIgfTtcbmltcG9ydCBfTmF2TGluayBmcm9tIFwiLi9OYXZMaW5rXCI7XG5leHBvcnQgeyBfTmF2TGluayBhcyBOYXZMaW5rIH07XG5pbXBvcnQgX1Byb21wdCBmcm9tIFwiLi9Qcm9tcHRcIjtcbmV4cG9ydCB7IF9Qcm9tcHQgYXMgUHJvbXB0IH07XG5pbXBvcnQgX1JlZGlyZWN0IGZyb20gXCIuL1JlZGlyZWN0XCI7XG5leHBvcnQgeyBfUmVkaXJlY3QgYXMgUmVkaXJlY3QgfTtcbmltcG9ydCBfUm91dGUgZnJvbSBcIi4vUm91dGVcIjtcbmV4cG9ydCB7IF9Sb3V0ZSBhcyBSb3V0ZSB9O1xuaW1wb3J0IF9Sb3V0ZXIgZnJvbSBcIi4vUm91dGVyXCI7XG5leHBvcnQgeyBfUm91dGVyIGFzIFJvdXRlciB9O1xuaW1wb3J0IF9TdGF0aWNSb3V0ZXIgZnJvbSBcIi4vU3RhdGljUm91dGVyXCI7XG5leHBvcnQgeyBfU3RhdGljUm91dGVyIGFzIFN0YXRpY1JvdXRlciB9O1xuaW1wb3J0IF9Td2l0Y2ggZnJvbSBcIi4vU3dpdGNoXCI7XG5leHBvcnQgeyBfU3dpdGNoIGFzIFN3aXRjaCB9O1xuaW1wb3J0IF9nZW5lcmF0ZVBhdGggZnJvbSBcIi4vZ2VuZXJhdGVQYXRoXCI7XG5leHBvcnQgeyBfZ2VuZXJhdGVQYXRoIGFzIGdlbmVyYXRlUGF0aCB9O1xuaW1wb3J0IF9tYXRjaFBhdGggZnJvbSBcIi4vbWF0Y2hQYXRoXCI7XG5leHBvcnQgeyBfbWF0Y2hQYXRoIGFzIG1hdGNoUGF0aCB9O1xuaW1wb3J0IF93aXRoUm91dGVyIGZyb20gXCIuL3dpdGhSb3V0ZXJcIjtcbmV4cG9ydCB7IF93aXRoUm91dGVyIGFzIHdpdGhSb3V0ZXIgfTsiXSwic291cmNlUm9vdCI6IiJ9